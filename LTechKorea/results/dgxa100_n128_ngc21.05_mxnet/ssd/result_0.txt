+ echo 'Beginning trial 3 of 5'
Beginning trial 3 of 5
+ srun -N1 -n1 --container-name=single_stage_detector python -c '
import mlperf_log_utils
from mlperf_logging.mllog import constants
mlperf_log_utils.mlperf_submission_log(constants.SSD)'
:::MLLOG {"namespace": "", "time_ms": 1621374037848, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "ssd", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 73}}
:::MLLOG {"namespace": "", "time_ms": 1621374037854, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "NVIDIA", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 78}}
:::MLLOG {"namespace": "", "time_ms": 1621374037854, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 82}}
:::MLLOG {"namespace": "", "time_ms": 1621374037854, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 86}}
:::MLLOG {"namespace": "", "time_ms": 1621374037855, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "128xNVIDIA DGX A100", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 90}}
+ '[' 1 -eq 1 ']'
+ srun --ntasks=128 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on luna-0041
Clearing cache on luna-0494
Clearing cache on luna-0500
Clearing cache on luna-0497
Clearing cache on luna-0415
Clearing cache on luna-0332
Clearing cache on luna-0050
Clearing cache on luna-0064
Clearing cache on luna-0547
Clearing cache on luna-0402
Clearing cache on luna-0550
Clearing cache on luna-0544
Clearing cache on luna-0491
Clearing cache on luna-0057
Clearing cache on luna-0060
Clearing cache on luna-0486
Clearing cache on luna-0492
Clearing cache on luna-0406
Clearing cache on luna-0542
Clearing cache on luna-0548
Clearing cache on luna-0321
Clearing cache on luna-0495
Clearing cache on luna-0498
Clearing cache on luna-0248
Clearing cache on luna-0419
Clearing cache on luna-0051
Clearing cache on luna-0410
Clearing cache on luna-0546
Clearing cache on luna-0493
Clearing cache on luna-0407
Clearing cache on luna-0066
Clearing cache on luna-0046
Clearing cache on luna-0334
Clearing cache on luna-0233
Clearing cache on luna-0236
Clearing cache on luna-0258
Clearing cache on luna-0401
Clearing cache on luna-0043
Clearing cache on luna-0042
Clearing cache on luna-0324
Clearing cache on luna-0333
Clearing cache on luna-0411
Clearing cache on luna-0417
Clearing cache on luna-0414
Clearing cache on luna-0549
Clearing cache on luna-0408
Clearing cache on luna-0485
Clearing cache on luna-0488
Clearing cache on luna-0412
Clearing cache on luna-0323
Clearing cache on luna-0054
Clearing cache on luna-0326
Clearing cache on luna-0044
Clearing cache on luna-0234
Clearing cache on luna-0251
Clearing cache on luna-0254
Clearing cache on luna-0048
Clearing cache on luna-0232
Clearing cache on luna-0245
Clearing cache on luna-0413
Clearing cache on luna-0257
Clearing cache on luna-0405
Clearing cache on luna-0260
Clearing cache on luna-0247
Clearing cache on luna-0240
Clearing cache on luna-0047
Clearing cache on luna-0329
Clearing cache on luna-0403
Clearing cache on luna-0551
Clearing cache on luna-0055
Clearing cache on luna-0327
Clearing cache on luna-0045
Clearing cache on luna-0336
Clearing cache on luna-0416
Clearing cache on luna-0545
Clearing cache on luna-0489
Clearing cache on luna-0226
Clearing cache on luna-0554
Clearing cache on luna-0065
Clearing cache on luna-0560
Clearing cache on luna-0242
Clearing cache on luna-0062
Clearing cache on luna-0557
Clearing cache on luna-0404
Clearing cache on luna-0059
Clearing cache on luna-0543
Clearing cache on luna-0227
Clearing cache on luna-0552
Clearing cache on luna-0490
Clearing cache on luna-0322
Clearing cache on luna-0331
Clearing cache on luna-0496
Clearing cache on luna-0056
Clearing cache on luna-0487
Clearing cache on luna-0420
Clearing cache on luna-0052
Clearing cache on luna-0328
Clearing cache on luna-0252
Clearing cache on luna-0418
Clearing cache on luna-0335
Clearing cache on luna-0553
Clearing cache on luna-0256
Clearing cache on luna-0250
Clearing cache on luna-0228
Clearing cache on luna-0559
Clearing cache on luna-0556
Clearing cache on luna-0558
Clearing cache on luna-0325
Clearing cache on luna-0255
Clearing cache on luna-0499
Clearing cache on luna-0049
Clearing cache on luna-0555
Clearing cache on luna-0063
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
Clearing cache on luna-0239
Clearing cache on luna-0230
Clearing cache on luna-0231
Clearing cache on luna-0244
Clearing cache on luna-0253
Clearing cache on luna-0237
Clearing cache on luna-0225
Clearing cache on luna-0238
Clearing cache on luna-0235
Clearing cache on luna-0229
Clearing cache on luna-0330
Clearing cache on luna-0058
Clearing cache on luna-0249
Clearing cache on luna-0246
Clearing cache on luna-0243
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
+ srun --ntasks=128 --container-name=single_stage_detector python -c '
from mlperf_logging.mllog import constants
from mlperf_log_utils import log_event
log_event(key=constants.CACHE_CLEAR, value=True)'
:::MLLOG {"namespace": "", "time_ms": 1621374041916, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 4}}
+ srun --mpi=pmix --ntasks=1024 --ntasks-per-node=8 --container-name=single_stage_detector --container-mounts=/raid/datasets/coco/coco-2017:/data,/lustre/fsw/mlperf-ci/23336737/results:/results,/raid/datasets/coco/coco-2017/coco2017/models:/pretrained/mxnet ./run_and_time.sh
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ '[' -n 7 ']'
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 1 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 0 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 7 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 6 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PARAMS+=(--async-val)
running benchmark
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATA_LAYOUT=NHWC
+ EVALBATCHSIZE=5
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
running benchmark
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 4 ']'
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' -n 2 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
running benchmark
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ declare -a CMD
running benchmark
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
running benchmark
+ cluster=
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 0 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 7 ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ declare -a CMD
+ LOG_INTERVAL=100
+ declare -a CMD
+ DATASET_SIZE=117266
running benchmark
+ '[' -n 0 ']'
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ 1 -eq 1 ]]
+ '[' -n 5 ']'
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ EVAL_DATASET_SIZE=5000
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ cluster=
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 6 ']'
+ '[' -n 2 ']'
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ cluster=
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ declare -a CMD
running benchmark
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
running benchmark
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ declare -a CMD
+ NUMEPOCHS=90
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 1 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 2 ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=selene
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
+ declare -a CMD
running benchmark
+ declare -a CMD
+ echo 'running benchmark'
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 5 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 6 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 0 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ '[' -n 1 ']'
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ echo 'running benchmark'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 5 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
running benchmark
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 4 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 4 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
running benchmark
+ cluster=
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ declare -a CMD
+ '[' -n 2 ']'
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
running benchmark
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' -n 6 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
running benchmark
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
running benchmark
+ PARAMS+=(--async-val)
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 7 ']'
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
running benchmark
+ PARAMS+=(--async-val)
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 6 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 1 ']'
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ '[' -n 0 ']'
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
running benchmark
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ EVALBATCHSIZE=5
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' -n 7 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ '[' -n 5 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 5 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 2 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ '[' -n 1 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 6 ']'
+ '[' '' = apiLog.sh ']'
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 7 ']'
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 2 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 7 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ declare -a CMD
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 0 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ cluster=
+ '[' '' = apiLog.sh ']'
running benchmark
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ EVALBATCHSIZE=5
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ declare -a CMD
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 5 ']'
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ cluster=
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
running benchmark
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 0 ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
running benchmark
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
running benchmark
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ DATASET_SIZE=117266
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' '' = apiLog.sh ']'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ DATASET_SIZE=117266
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ NUMEPOCHS=90
running benchmark
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
running benchmark
+ ASYNC_EVAL=1
running benchmark
+ '[' '' = apiLog.sh ']'
running benchmark
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
running benchmark
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATA_LAYOUT=NHWC
running benchmark
+ declare -a CMD
running benchmark
+ echo 'running benchmark'
+ ASYNC_EVAL=1
running benchmark
+ declare -a CMD
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
running benchmark
+ cluster=
+ PARAMS+=(--async-val)
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ NUMEPOCHS=90
+ cluster=
+ LOG_INTERVAL=100
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
running benchmark
+ ASYNC_EVAL=1
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
running benchmark
+ EVALBATCHSIZE=5
+ cluster=
running benchmark
+ NUMEPOCHS=90
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
running benchmark
+ DATA_LAYOUT=NHWC
running benchmark
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
running benchmark
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
running benchmark
+ EVALBATCHSIZE=5
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 5 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ declare -a CMD
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
running benchmark
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
running benchmark
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' -n 7 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 6 ']'
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' -n 7 ']'
running benchmark
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 6 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=
running benchmark
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 4 ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
running benchmark
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATA_LAYOUT=NHWC
running benchmark
+ '[' '' = apiLog.sh ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' '' = apiLog.sh ']'
running benchmark
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ declare -a CMD
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ cluster=
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATA_LAYOUT=NHWC
running benchmark
+ '[' -n 5 ']'
running benchmark
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
running benchmark
+ '[' 1024 -gt 128 ']'
running benchmark
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
running benchmark
+ DATA_LAYOUT=NHWC
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ declare -a CMD
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' -n 0 ']'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
+ '[' -n 4 ']'
+ DATASET_DIR=/data/coco2017
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ DATA_LAYOUT=NHWC
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ [[ 1 -eq 1 ]]
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 1 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
running benchmark
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ '[' -n 5 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ '[' -n 7 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ cluster=
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ '[' -n 7 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ cluster=
running benchmark
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 3 ']'
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ cluster=
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 0 ']'
+ '[' -n 1 ']'
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ EVALBATCHSIZE=5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 1 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ '[' -n 5 ']'
+ declare -a CMD
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 1 ']'
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
running benchmark
+ '[' -n 1 ']'
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 4 ']'
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
running benchmark
+ cluster=
running benchmark
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ '[' -n 7 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 5 ']'
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 0 ']'
+ '[' -n 3 ']'
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' -n 7 ']'
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
running benchmark
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ EVALBATCHSIZE=5
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ cluster=
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 0 ']'
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
running benchmark
+ EVALBATCHSIZE=5
+ '[' -n 3 ']'
running benchmark
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ cluster=
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 4 ']'
+ [[ 1 -eq 1 ]]
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
running benchmark
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 2 ']'
+ '[' -n 0 ']'
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ declare -a CMD
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 2 ']'
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ '[' '' = apiLog.sh ']'
running benchmark
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 1 ']'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 2 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 4 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 5 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ '[' -n 5 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 6 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 6 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ PARAMS+=(--async-val)
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ echo 'running benchmark'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ declare -a CMD
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
running benchmark
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ LOG_INTERVAL=100
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' -n 2 ']'
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ cluster=selene
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
+ '[' '' = apiLog.sh ']'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ '[' -n 7 ']'
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ '[' -n 1 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ DATA_LAYOUT=NHWC
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 6 ']'
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ cluster=
running benchmark
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ '[' -n 6 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 1 ']'
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
running benchmark
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ cluster=selene
+ cluster=
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ '[' -n 7 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
+ PARAMS+=(--async-val)
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 6 ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ cluster=
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ '[' -n 3 ']'
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 0 ']'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
running benchmark
+ ASYNC_EVAL=1
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 5 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ '[' -n 1 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
running benchmark
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 3 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ EVALBATCHSIZE=5
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ NUMEPOCHS=90
+ '[' -n 2 ']'
running benchmark
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 4 ']'
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
running benchmark
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ cluster=
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ BATCHSIZE=3
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ '[' -n 7 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ '[' -n 0 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ cluster=
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 7 ']'
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ '[' -n 4 ']'
+ DATASET_DIR=/data/coco2017
+ '[' -n 0 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ declare -a CMD
+ cluster=
+ '[' '' = apiLog.sh ']'
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ '[' -n 0 ']'
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ '[' -n 5 ']'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ '[' '' = apiLog.sh ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ '[' -n 3 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 6 ']'
+ '[' -n 6 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
running benchmark
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ DATA_LAYOUT=NHWC
+ cluster=
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ EVALBATCHSIZE=5
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ '[' -n 0 ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ cluster=
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ EVALBATCHSIZE=5
+ '[' -n 0 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ '[' -n 3 ']'
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 2 ']'
+ [[ 1 -eq 1 ]]
+ cluster=
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 2 ']'
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 4 ']'
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ '[' -n 4 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' -n 6 ']'
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
running benchmark
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ '[' -n 6 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 6 ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 4 ']'
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
+ '[' -n 2 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
running benchmark
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
running benchmark
+ '[' -n 2 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ cluster=
+ declare -a CMD
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ '[' -n 7 ']'
+ ASYNC_EVAL=1
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 2 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 3 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ ASYNC_EVAL=1
+ '[' -n 7 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 1 ']'
+ '[' -n 4 ']'
+ echo 'running benchmark'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 2 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ '[' -n 3 ']'
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
running benchmark
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ '[' -n 3 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
running benchmark
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ declare -a CMD
+ '[' -n 0 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 7 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ cluster=
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ DATA_LAYOUT=NHWC
running benchmark
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ '[' -n 2 ']'
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ '[' -n 3 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ cluster=
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ declare -a CMD
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 6 ']'
running benchmark
+ DATASET_SIZE=117266
running benchmark
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVAL_DATASET_SIZE=5000
running benchmark
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ '[' -n 3 ']'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
running benchmark
+ '[' -n 1 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ cluster=
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ DATASET_DIR=/data/coco2017
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVAL_DATASET_SIZE=5000
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ declare -a CMD
+ ASYNC_EVAL=1
running benchmark
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ BATCHSIZE=3
+ NUMEPOCHS=90
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_SIZE=117266
running benchmark
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 6 ']'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 7 ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ '[' -n 3 ']'
+ declare -a CMD
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ declare -a CMD
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 5 ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 6 ']'
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' -n 6 ']'
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' -n 2 ']'
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' -n 7 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
running benchmark
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVAL_DATASET_SIZE=5000
running benchmark
+ EVALBATCHSIZE=5
+ declare -a CMD
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 4 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ '[' -n 5 ']'
+ ASYNC_EVAL=1
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 4 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
running benchmark
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ cluster=
+ '[' -n 3 ']'
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 1 ']'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 5 ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ 1 -eq 1 ]]
+ '[' -n 1 ']'
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ '[' -n 3 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
running benchmark
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 4 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 0 ']'
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ cluster=
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ cluster=
+ PARAMS+=(--async-val)
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' '' = apiLog.sh ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ '[' -n 7 ']'
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' -n 6 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 0 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ '[' -n 3 ']'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 4 ']'
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' -n 2 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ '[' -n 3 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ '[' -n 7 ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ cluster=
running benchmark
+ '[' -n 5 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ '[' -n 7 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ PARAMS+=(--async-val)
running benchmark
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ declare -a CMD
+ declare -a CMD
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ '[' -n 7 ']'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 1 ']'
+ '[' '' = apiLog.sh ']'
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ declare -a CMD
running benchmark
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
running benchmark
+ BATCHSIZE=3
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
running benchmark
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ '[' -n 1 ']'
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 5 ']'
running benchmark
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
running benchmark
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ '[' -n 0 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' -n 4 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 3 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ '[' -n 5 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ '[' -n 1 ']'
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
running benchmark
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 2 ']'
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ cluster=
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 1 ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PARAMS+=(--async-val)
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
running benchmark
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
running benchmark
+ echo 'running benchmark'
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 7 ']'
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ '[' -n 5 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVALBATCHSIZE=5
+ '[' -n 0 ']'
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' -n 6 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 5 ']'
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ NUMEPOCHS=90
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
running benchmark
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 1 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ PARAMS+=(--async-val)
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ DATASET_SIZE=117266
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 7 ']'
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 7 ']'
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 5 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ '[' -n 0 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
running benchmark
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ASYNC_EVAL=1
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
running benchmark
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ NUMEPOCHS=90
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ declare -a CMD
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 6 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 1 ']'
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
running benchmark
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
running benchmark
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ '[' -n 6 ']'
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ cluster=
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 4 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ BATCHSIZE=3
+ '[' -n 7 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ cluster=
+ DATASET_SIZE=117266
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ LOG_INTERVAL=100
+ cluster=selene
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
running benchmark
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 0 ']'
running benchmark
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ '[' -n 0 ']'
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATA_LAYOUT=NHWC
+ cluster=
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 1 ']'
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ BATCHSIZE=3
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ echo 'running benchmark'
running benchmark
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 0 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' -n 3 ']'
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
running benchmark
+ '[' -n 4 ']'
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ LOG_INTERVAL=100
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ DATASET_SIZE=117266
+ declare -a CMD
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
running benchmark
+ declare -a CMD
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 4 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ declare -a CMD
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ '[' -n 6 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ declare -a CMD
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 7 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ '[' -n 5 ']'
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 6 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ cluster=selene
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ declare -a CMD
+ '[' -n 4 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ '[' -n 6 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ DATASET_DIR=/data/coco2017
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ cluster=
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
running benchmark
+ DATASET_SIZE=117266
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ declare -a CMD
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 0 ']'
+ echo 'running benchmark'
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ declare -a CMD
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 4 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ declare -a CMD
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 2 ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ declare -a CMD
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
running benchmark
+ BATCHSIZE=3
+ '[' -n 1 ']'
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 7 ']'
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ declare -a CMD
+ '[' -n 5 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 3 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
running benchmark
+ '[' -n 6 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=selene
+ '[' -n 1 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ '[' -n 5 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ '[' -n 3 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 2 ']'
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
running benchmark
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ cluster=
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 1 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ '[' -n 0 ']'
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVALBATCHSIZE=5
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
running benchmark
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ declare -a CMD
+ DATASET_SIZE=117266
+ '[' -n 4 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 6 ']'
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
running benchmark
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 0 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=selene
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
running benchmark
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ '[' -n 0 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
running benchmark
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 5 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
running benchmark
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 2 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ '[' -n 7 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ cluster=
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ '[' -n 1 ']'
+ DATA_LAYOUT=NHWC
running benchmark
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 5 ']'
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' -n 6 ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ EVALBATCHSIZE=5
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ '[' '' = apiLog.sh ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ '[' -n 3 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 3 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 0 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ DATA_LAYOUT=NHWC
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ '[' -n 4 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ ASYNC_EVAL=1
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ declare -a CMD
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ '[' -n 3 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 0 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 2 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ 1 -eq 1 ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 7 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 6 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 0 ']'
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ '[' -n 6 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
running benchmark
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ '[' -n 4 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 6 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ NUMEPOCHS=90
running benchmark
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ '[' -n 2 ']'
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ cluster=
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 5 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
running benchmark
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 2 ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 4 ']'
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ declare -a CMD
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
running benchmark
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=selene
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
running benchmark
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
running benchmark
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ LOG_INTERVAL=100
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ declare -a CMD
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
running benchmark
+ '[' -n 0 ']'
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ LOG_INTERVAL=100
running benchmark
+ cluster=selene
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
running benchmark
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ '[' -n 5 ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ PARAMS+=(--async-val)
running benchmark
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 2 ']'
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 3 ']'
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
running benchmark
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ declare -a CMD
running benchmark
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 3 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ '[' -n 7 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ 1 -eq 1 ]]
running benchmark
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 4 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' -n 3 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ DATASET_DIR=/data/coco2017
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ declare -a CMD
+ ASYNC_EVAL=1
+ '[' -n 4 ']'
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
running benchmark
+ BATCHSIZE=3
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ '[' -n 7 ']'
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ '[' -n 2 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
running benchmark
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' '' = apiLog.sh ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ EVALBATCHSIZE=5
+ cluster=
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 7 ']'
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ '[' -n 2 ']'
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
running benchmark
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
running benchmark
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ '[' -n 7 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ declare -a CMD
running benchmark
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ '[' -n 7 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 1 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
running benchmark
+ PARAMS+=(--async-val)
running benchmark
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' -n 3 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ DATASET_SIZE=117266
running benchmark
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ declare -a CMD
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ cluster=
+ '[' -n 7 ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ cluster=
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ '[' -n 5 ']'
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ '[' -n 0 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 1 ']'
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ declare -a CMD
running benchmark
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ '[' -n 0 ']'
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ '[' -n 5 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 2 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ '[' -n 4 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ '[' -n 6 ']'
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 0 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ BATCHSIZE=3
+ '[' -n 7 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
running benchmark
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ [[ 1 -eq 1 ]]
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
running benchmark
+ cluster=
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
running benchmark
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 3 ']'
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 5 ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ '[' -n 1 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
running benchmark
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ cluster=
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ declare -a CMD
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ '[' -n 1 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 3 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 6 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ NUMEPOCHS=90
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ LOG_INTERVAL=100
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
running benchmark
+ declare -a CMD
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ '[' -n 5 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ '[' -n 4 ']'
+ cluster=
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
running benchmark
+ cluster=
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 3 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 0 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 6 ']'
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 0 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 0 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ BATCHSIZE=3
+ '[' -n 4 ']'
+ declare -a CMD
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
running benchmark
+ EVALBATCHSIZE=5
+ cluster=
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ NUMEPOCHS=90
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 2 ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ cluster=
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ '[' -n 3 ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 2 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ '[' -n 1 ']'
+ '[' -n 5 ']'
running benchmark
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 6 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ cluster=
running benchmark
+ '[' -n 0 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' -n 3 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ NUMEPOCHS=90
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
running benchmark
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 7 ']'
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ declare -a CMD
running benchmark
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 7 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' -n 5 ']'
+ DATASET_SIZE=117266
running benchmark
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ '[' -n 6 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ '[' -n 1 ']'
+ LOG_INTERVAL=100
+ '[' -n 3 ']'
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
running benchmark
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
running benchmark
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ ASYNC_EVAL=1
+ declare -a CMD
+ echo 'running benchmark'
+ '[' -n 5 ']'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATA_LAYOUT=NHWC
+ '[' -n 4 ']'
running benchmark
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 0 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 5 ']'
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ LOG_INTERVAL=100
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' -n 3 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 4 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ ASYNC_EVAL=1
running benchmark
+ DATASET_DIR=/data/coco2017
running benchmark
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 4 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 5 ']'
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ '[' -n 2 ']'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ cluster=
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVALBATCHSIZE=5
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ NUMEPOCHS=90
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVAL_DATASET_SIZE=5000
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' -n 0 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ [[ 1 -eq 1 ]]
+ cluster=selene
+ '[' -n 7 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 1 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ declare -a CMD
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 4 ']'
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ '[' -n 6 ']'
+ cluster=
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 7 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ 1 -eq 1 ]]
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
running benchmark
+ declare -a CMD
+ declare -a CMD
running benchmark
+ '[' -n 2 ']'
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ cluster=
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ '[' -n 1 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
running benchmark
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ cluster=
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
running benchmark
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 1 ']'
running benchmark
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ declare -a CMD
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVALBATCHSIZE=5
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ echo 'running benchmark'
+ '[' -n 6 ']'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ '[' -n 3 ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ BATCHSIZE=3
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 0 ']'
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 7 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ '[' -n 2 ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 7 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 5 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 7 ']'
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ '[' -n 5 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ cluster=
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 2 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ declare -a CMD
running benchmark
+ '[' -n 6 ']'
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ '[' -n 7 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ '[' -n 6 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 4 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVALBATCHSIZE=5
running benchmark
+ NUMEPOCHS=90
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 6 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
running benchmark
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 3 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
running benchmark
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ ASYNC_EVAL=1
+ '[' -n 0 ']'
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATA_LAYOUT=NHWC
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
running benchmark
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ ASYNC_EVAL=1
running benchmark
+ '[' -n 5 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' -n 5 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ '[' -n 4 ']'
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 4 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
running benchmark
+ [[ 1 -eq 1 ]]
+ EVALBATCHSIZE=5
running benchmark
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' -n 3 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ NUMEPOCHS=90
+ cluster=
running benchmark
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 7 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 5 ']'
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' -n 6 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
running benchmark
+ echo 'running benchmark'
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ cluster=
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
running benchmark
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
running benchmark
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ declare -a CMD
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 2 ']'
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 1 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
running benchmark
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 3 ']'
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ '[' -n 0 ']'
+ echo 'running benchmark'
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ '[' -n 4 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ [[ 1 -eq 1 ]]
+ '[' -n 0 ']'
running benchmark
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 1 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ '[' -n 4 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ declare -a CMD
running benchmark
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 6 ']'
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' -n 6 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
running benchmark
+ cluster=
+ EVALBATCHSIZE=5
+ '[' -n 7 ']'
+ NUMEPOCHS=90
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ '[' -n 2 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ '[' -n 4 ']'
+ declare -a CMD
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' -n 1 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ '[' -n 6 ']'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ declare -a CMD
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 1 ']'
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ '[' -n 0 ']'
+ '[' -n 0 ']'
+ cluster=
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ '[' -n 3 ']'
+ '[' '' = apiLog.sh ']'
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
running benchmark
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ NUMEPOCHS=90
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
running benchmark
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ cluster=
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ '[' -n 3 ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
running benchmark
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 7 ']'
+ '[' -n 5 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ LOG_INTERVAL=100
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' -n 3 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ BATCHSIZE=3
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ '[' -n 3 ']'
+ EVALBATCHSIZE=5
running benchmark
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 0 ']'
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ cluster=
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
running benchmark
+ cluster=selene
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ BATCHSIZE=3
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ '[' -n 6 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
running benchmark
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 7 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ '[' -n 1 ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ declare -a CMD
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ '[' -n 6 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ '[' -n 7 ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 5 ']'
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 4 ']'
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ declare -a CMD
running benchmark
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
running benchmark
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
running benchmark
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 7 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 3 ']'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 1 ']'
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ PARAMS+=(--async-val)
+ '[' -n 3 ']'
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 4 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ echo 'running benchmark'
+ '[' -n 2 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ '[' -n 0 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 6 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVAL_DATASET_SIZE=5000
running benchmark
+ '[' -n 6 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ BATCHSIZE=3
+ EVAL_DATASET_SIZE=5000
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ NUMEPOCHS=90
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ '[' -n 4 ']'
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 6 ']'
+ BATCHSIZE=3
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_SIZE=117266
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ cluster=
+ '[' -n 3 ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
running benchmark
+ EVALBATCHSIZE=5
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
running benchmark
+ declare -a CMD
+ declare -a CMD
+ '[' -n 3 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 1 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ declare -a CMD
+ '[' -n 1 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' -n 7 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 5 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ declare -a CMD
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 6 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
running benchmark
+ '[' -n 1 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PARAMS+=(--async-val)
running benchmark
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ '[' -n 4 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ cluster=
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 5 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ '[' -n 0 ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
running benchmark
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ '[' -n 2 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ '[' -n 0 ']'
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
running benchmark
+ cluster=
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 4 ']'
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ declare -a CMD
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ '[' -n 0 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
+ declare -a CMD
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' -n 4 ']'
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ NUMEPOCHS=90
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ '[' -n 7 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
running benchmark
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 2 ']'
+ ASYNC_EVAL=1
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ 1 -eq 1 ]]
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' -n 3 ']'
+ '[' -n 3 ']'
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ '[' -n 6 ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ '[' -n 1 ']'
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ '[' -n 3 ']'
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ declare -a CMD
running benchmark
+ '[' -n 2 ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
running benchmark
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 4 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ cluster=
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 2 ']'
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ cluster=
running benchmark
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ DATASET_DIR=/data/coco2017
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' -n 0 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ declare -a CMD
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ LOG_INTERVAL=100
+ '[' -n 3 ']'
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ '[' -n 6 ']'
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 1 ']'
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ declare -a CMD
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ '[' -n 2 ']'
running benchmark
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
running benchmark
+ cluster=selene
+ declare -a CMD
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ '[' -n 7 ']'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
running benchmark
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 1 ']'
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 2 ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 5 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 3 ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ '[' -n 5 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
running benchmark
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
running benchmark
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
+ declare -a CMD
+ cluster=
+ '[' 1024 -gt 128 ']'
+ '[' -n 3 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ cluster=
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ '[' -n 7 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 6 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
running benchmark
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
running benchmark
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ echo 'running benchmark'
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ cluster=
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
running benchmark
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ cluster=
+ declare -a CMD
+ '[' -n 6 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ EVALBATCHSIZE=5
running benchmark
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
running benchmark
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ '[' -n 0 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ cluster=
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' 1024 -gt 128 ']'
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
running benchmark
+ '[' -n 6 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' -n 5 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ BATCHSIZE=3
+ '[' -n 0 ']'
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
running benchmark
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' -n 1 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
running benchmark
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ PARAMS+=(--async-val)
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' -n 3 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ cluster=
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 3 ']'
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ '[' -n 0 ']'
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ declare -a CMD
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ '[' -n 7 ']'
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 6 ']'
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 4 ']'
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 6 ']'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ declare -a CMD
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' -n 5 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 7 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 6 ']'
+ '[' -n 1 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 3 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' -n 5 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ ASYNC_EVAL=1
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 1 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' -n 6 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ '[' -n 5 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ declare -a CMD
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 7 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 1 ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ declare -a CMD
+ ASYNC_EVAL=1
+ '[' -n 7 ']'
+ echo 'running benchmark'
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ echo 'running benchmark'
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ '[' -n 4 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ declare -a CMD
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ declare -a CMD
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 6 ']'
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ '[' -n 7 ']'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ '[' -n 2 ']'
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 5 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ cluster=
+ '[' -n 7 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ EVALBATCHSIZE=5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ ASYNC_EVAL=1
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ '[' -n 0 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 0 ']'
+ '[' -n 3 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ '[' -n 3 ']'
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' -n 0 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' -n 7 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 3 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' -n 6 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ echo 'running benchmark'
+ declare -a CMD
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 2 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' -n 6 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ cluster=
+ '[' '' = apiLog.sh ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 1 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 3 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ cluster=
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 3 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ cluster=
+ declare -a CMD
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' -n 1 ']'
+ PARAMS+=(--async-val)
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 0 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ '[' -n 0 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' -n 4 ']'
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
+ '[' -n 1 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 7 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ '[' -n 5 ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 7 ']'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 7 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ '[' -n 2 ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 2 ']'
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 6 ']'
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ EVALBATCHSIZE=5
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 6 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 1 ']'
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ '[' -n 4 ']'
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ declare -a CMD
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ '[' -n 2 ']'
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 4 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 4 ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 5 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ '[' -n 3 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' -n 3 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ declare -a CMD
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 0 ']'
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ cluster=
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ '[' -n 6 ']'
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 0 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
+ '[' -n 2 ']'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ '[' -n 7 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ cluster=
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 5 ']'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' -n 6 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
running benchmark
+ echo 'running benchmark'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ declare -a CMD
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 2 ']'
+ '[' -n 3 ']'
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 1 ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' 1024 -gt 128 ']'
+ cluster=
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 5 ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
num_sockets = 2 num_nodes=8 cores_per_socket=64
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:40:43 PM
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
:::MLLOG {"namespace": "", "time_ms": 1621374045382, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045382, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045382, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045384, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045383, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045383, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045383, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045384, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045384, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045384, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045384, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045384, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045384, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045385, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045384, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045386, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045384, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045386, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045385, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045388, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045387, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045385, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045384, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045385, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045385, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045385, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045385, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045385, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045387, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045385, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045385, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045387, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045389, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045385, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045388, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045388, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045385, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045388, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045388, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045385, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045388, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045385, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045389, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045388, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045388, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045385, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045387, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045386, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045388, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045388, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045388, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045388, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045389, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045389, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045389, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045389, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045388, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045388, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045390, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045391, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045388, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045389, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045390, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045389, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045390, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045390, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045389, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045391, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045390, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045391, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045392, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045390, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045390, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045392, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045390, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045391, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045389, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045391, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045390, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045390, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045391, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045391, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045391, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045391, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045392, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045392, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045392, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045391, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045390, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045392, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045390, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045390, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045392, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045391, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045392, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045392, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045392, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045394, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045391, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045391, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045393, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045392, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045393, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045392, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045392, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045394, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045392, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045393, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045393, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045391, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045393, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045391, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045391, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045393, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045393, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045392, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045392, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045393, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045392, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045395, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045396, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045395, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045393, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045393, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045395, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045392, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045393, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045394, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045394, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045394, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045395, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045393, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045393, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045395, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045395, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045393, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045393, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045395, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045395, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045395, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045393, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045395, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045392, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045395, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045395, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045395, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045393, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045396, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045395, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045395, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045393, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045395, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045394, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045395, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045394, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045395, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045396, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045396, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045394, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045397, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045394, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045395, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045396, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045394, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045397, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045395, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045397, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045397, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045395, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045394, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045395, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045395, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045395, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045397, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045395, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045395, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045395, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045397, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045396, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045397, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045395, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045396, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045397, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045395, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045396, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045395, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045397, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045397, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045398, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045396, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045396, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045396, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045396, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045397, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045396, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045396, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045395, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045396, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045396, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045396, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045398, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045396, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045397, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045397, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045396, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045397, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045397, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045398, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045398, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045396, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045396, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045397, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045398, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045396, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045397, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045398, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045398, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045399, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045396, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045398, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045397, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045397, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045398, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045398, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045398, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045398, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045398, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045399, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045401, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045399, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045399, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045401, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045402, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045402, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045402, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045402, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045402, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045405, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045405, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045405, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045407, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045407, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045406, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045407, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045407, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045457, "event_type": "POINT_IN_TIME", "key": "seed", "value": 1162465568, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 195}}
:::MLLOG {"namespace": "", "time_ms": 1621374045416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045417, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045417, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045417, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045417, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045417, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045419, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045418, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045417, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045420, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045417, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045420, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045420, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045417, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045417, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045418, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045420, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045418, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045418, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045422, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045418, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045420, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045421, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045422, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045420, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045418, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045420, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045419, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045421, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045421, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045421, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045421, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045422, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045421, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045422, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045421, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045420, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045421, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045420, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045420, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045420, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045422, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045422, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045420, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045421, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045421, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045421, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045422, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045422, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045421, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045421, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045422, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045421, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045421, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045422, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045422, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045421, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045421, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045421, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045421, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045422, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045422, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045422, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045422, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045422, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045422, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045422, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045433, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045433, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374045432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:40:45] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1621374045553, "event_type": "POINT_IN_TIME", "key": "seed", "value": 1162465568, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 224}}
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466560, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466528, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466384, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466352, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466000, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466344, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465840, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466272, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466240, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466496, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466016, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465968, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466536, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466360, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466336, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465704, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465920, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466544, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466144, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465736, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466576, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466104, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466368, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465616, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466280, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466160, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466088, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465680, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466128, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466392, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466488, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465592, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466456, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466328, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465992, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465600, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466232, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466184, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466064, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465880, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465640, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465928, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466400, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465792, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465912, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466296, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466072, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466216, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466112, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466048, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466376, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465744, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465816, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466512, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466528
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466472, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465824, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465952, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466432, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465888, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466040, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465632, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465984, start_epoch=1, synthNamespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466528, start_epoch=1, synthetic=FalseINFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466200, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465840
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465936, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465784, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466288, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466224, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465808, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466136, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466208, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465896, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465656, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465776, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466544
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465904, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465728, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466464, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466560
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466272
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466264, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466096, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465608, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465800, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465576, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466440, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466024, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466312, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465760, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465568, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466000
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465664, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466176, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465768, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466256, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465864, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466416, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466504, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466240
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466120, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466160
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466088
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466496
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465960, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466008, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466152, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466360
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466336
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466168, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465856, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466328
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466560, start_epoch=1, synthetic=FalseINFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465688, start_epoch=1, synthNamespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465840, start_epoch=1, synthetic=FalseINFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465976, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465736
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466080, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466056, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466248, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465672, start_epoch=1, synth, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466552, start_epoch=1, synthNamespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466384, start_epoch=1, synthetic=FalseINFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465752, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466304, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466184
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466520, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466568, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465744
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465624, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466512
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466496, start_epoch=1, synthetic=Falseetic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466408, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465880
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465712, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465872, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466400
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466448, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465848, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466320, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465696, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466488
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466072
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466480, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466192, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466352
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465944, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466424, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466576
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465832, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465600
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466032, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466104
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465888
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466544, start_epoch=1, synthetic=FalseINFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465648, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465720, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466584, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465632
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466064
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466344
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466368
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466384
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466280
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466016
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465680
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465792
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466128
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466392
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465952
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465992
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465584, start_epoch=1, synthNamespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466368, start_epoch=1, synthetic=Falseetic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466272, start_epoch=1, synthetic=Falseetic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466040
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:Seed: 1162465616
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466288
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466120
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465640
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465608
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466472
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466280, start_epoch=1, synthetic=FalseINFO:root:Seed: 1162465800
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466160, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466088, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466216
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466432
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465704
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465896
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465656
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465760
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465904
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465568
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466144
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466048
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465664
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466256
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466232
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465984
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466200
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465816
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465936
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465824
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466352, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465960
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465912
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466536
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466296
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:Seed: 1162465808
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466312
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466112
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465920
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465736, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466000, start_epoch=1, synthetic=FalseINFO:root:Seed: 1162466080
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465752
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466520
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466568
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465864
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466464
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466104, start_epoch=1, synthetic=FalseINFO:root:Seed: 1162465624
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466416
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466408
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466504
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466264
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466096
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465784
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466184, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465968
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466064, start_epoch=1, synthetic=FalseINFO:root:Seed: 1162465576
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466440
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466224
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466008
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465696
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:Seed: 1162466024
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:Seed: 1162465592
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466480
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466456
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465880, start_epoch=1, synthetic=FalseINFO:root:Seed: 1162466192
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466136
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466208
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466240, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466120, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465944
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465688
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:precision: fp16
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:Seed: 1162465832
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466176
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465768
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466032
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465672
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466584
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466376
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466128, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466488, start_epoch=1, synthetic=FalseINFO:root:Seed: 1162465712
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465928
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466360, start_epoch=1, synthetic=FalseINFO:root:Seed: 1162465872
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466448
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466336, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465848
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466328, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466320
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466152
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465920, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466168
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465856
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466144, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:Seed: 1162466424
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465776
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465976
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465600, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466056
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466248
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465648
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465720
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466552
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465728
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466344, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465744, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465624, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
Seed: 1162465840
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466512, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
INFO:root:fuse bn add relu: True
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466400, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Seed: 1162466088
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Seed: 1162466496
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466016, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465680, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465968, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162465584
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466392, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466072, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466456, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466216, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1162466304
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465704, start_epoch=1, synthetic=FalseINFO:root:fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465992, start_epoch=1, synthetic=FalseINFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Seed: 1162466544
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466576, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465888, start_epoch=1, synthetic=FalseINFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466232, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Seed: 1162466184
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465632, start_epoch=1, synthetic=FalseINFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465984, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Seed: 1162466560
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Seed: 1162466272
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465616, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
Seed: 1162465880
precision: fp16
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Seed: 1162466528
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465792, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
Seed: 1162466488
INFO:root:fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466296, start_epoch=1, synthetic=FalseINFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465952, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466432, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466136, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Seed: 1162466000
INFO:root:fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Seed: 1162465600
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Seed: 1162466104
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466376, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466040, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Seed: 1162466064
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466200, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466464, start_epoch=1, synthetic=FalseINFO:root:fuse bn relu: True
precision: fp16
INFO:root:fuse bn add relu: True
Seed: 1162466368
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466264, start_epoch=1, synthetic=FalseINFO:root:fuse bn relu: True
Seed: 1162466384
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
Seed: 1162466240
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466288, start_epoch=1, synthetic=FalseINFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465640, start_epoch=1, synthetic=FalseINFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465928, start_epoch=1, synthetic=FalseINFO:root:fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465608, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466472, start_epoch=1, synthetic=FalseINFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Seed: 1162466280
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Seed: 1162466160
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
precision: fp16
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465800, start_epoch=1, synthetic=FalseINFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466440, start_epoch=1, synthetic=FalseINFO:root:bn group: 8
Seed: 1162466128
INFO:root:bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465912, start_epoch=1, synthetic=FalseINFO:root:bn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466224, start_epoch=1, synthetic=FalseINFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 416
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 176
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 632
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466312, start_epoch=1, synthetic=FalseINFO:root:MPI global rank: 776
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
Seed: 1162466328
INFO:root:async validation: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466112, start_epoch=1, synthetic=FalseINFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:async validation: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466208, start_epoch=1, synthetic=FalseINFO:root:[SSD] network: resnet34_v1
Seed: 1162465992
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465896, start_epoch=1, synthetic=FalseINFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465656, start_epoch=1, synthetic=FalseINFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465760, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465904, start_epoch=1, synthetic=FalseINFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465568, start_epoch=1, synthetic=FalseINFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466048, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465664, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466176, start_epoch=1, synthetic=FalseINFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466256, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
Seed: 1162465744
INFO:root:fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465864, start_epoch=1, synthetic=FalseINFO:root:bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465816, start_epoch=1, synthetic=FalseINFO:root:fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn group: 8
precision: fp16
INFO:root:fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465936, start_epoch=1, synthetic=FalseINFO:root:bn all reduce fp16: False
Seed: 1162466512
precision: fp16
INFO:root:fuse bn add relu: True
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466504, start_epoch=1, synthetic=FalseINFO:root:MPI size: 1024
loss scaling: 128.0
INFO:root:bn all reduce fp16: False
INFO:root:MPI size: 1024
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI size: 1024
precision: fp16
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 896
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 296
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI size: 1024
Seed: 1162466120
precision: fp16
INFO:root:MPI global rank: 56
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
Seed: 1162465640
precision: fp16
INFO:root:MPI local rank: 0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI global rank: 248
Seed: 1162466400
INFO:root:MPI local rank: 0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:async validation: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465824, start_epoch=1, synthetic=FalseINFO:root:async validation: True
precision: fp16
INFO:root:MPI local rank: 0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465960, start_epoch=1, synthetic=FalseINFO:root:[SSD] network: resnet34_v1
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] network: resnet34_v1
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466536, start_epoch=1, synthetic=FalseINFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465592, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn relu: True
Seed: 1162466360
INFO:root:[SSD] fuse bn add relu: True
Seed: 1162466072
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
Seed: 1162466216
INFO:root:[SSD] fuse bn add relu: True
Seed: 1162466336
INFO:root:[SSD] bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465808, start_epoch=1, synthetic=FalseINFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
Seed: 1162466432
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
Seed: 1162466352
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI global rank: 272
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465776, start_epoch=1, synthetic=FalseINFO:root:bn all reduce fp16: False
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 992
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI size: 1024
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI global rank: 800
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465688, start_epoch=1, synthetic=FalseINFO:root:MPI local rank: 0
INFO:root:async validation: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465976, start_epoch=1, synthetic=FalseINFO:root:MPI global rank: 704
Seed: 1162466144
INFO:root:async validation: True
Seed: 1162465736
INFO:root:MPI local rank: 0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466080, start_epoch=1, synthetic=FalseINFO:root:async validation: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465768, start_epoch=1, synthetic=FalseINFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
Seed: 1162465888
INFO:root:[SSD] fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465672, start_epoch=1, synthetic=FalseINFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466552, start_epoch=1, synthetic=FalseINFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465752, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
Seed: 1162466232
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466520, start_epoch=1, synthetic=FalseINFO:root:[SSD] bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466568, start_epoch=1, synthetic=FalseINFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:fuse bn add relu: True
Seed: 1162465984
INFO:root:bn group: 8
Seed: 1162466344
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
precision: fp16
INFO:root:MPI global rank: 368
precision: fp16
INFO:root:MPI size: 1024
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
Seed: 1162465936
INFO:root:fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466416, start_epoch=1, synthetic=FalseINFO:root:fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466408, start_epoch=1, synthetic=FalseINFO:root:MPI local rank: 0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI global rank: 944
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465712, start_epoch=1, synthetic=FalseINFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466096, start_epoch=1, synthetic=FalseINFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465784, start_epoch=1, synthetic=FalseINFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465872, start_epoch=1, synthetic=FalseINFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466448, start_epoch=1, synthetic=FalseINFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:[SSD] fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 848
Seed: 1162466016
INFO:root:MPI size: 1024
Seed: 1162465680
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465576, start_epoch=1, synthetic=FalseINFO:root:MPI local rank: 0
Seed: 1162465792
INFO:root:MPI global rank: 840
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466320, start_epoch=1, synthetic=FalseINFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466008, start_epoch=1, synthetic=FalseINFO:root:[SSD] network: resnet34_v1
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465696, start_epoch=1, synthetic=FalseINFO:root:async validation: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
Seed: 1162466536
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Seed: 1162466392
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
Seed: 1162466296
INFO:root:[SSD] fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466024, start_epoch=1, synthetic=FalseINFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466480, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466168, start_epoch=1, synthetic=FalseINFO:root:[SSD] bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466192, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn add relu: True
Seed: 1162465952
INFO:root:bn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465856, start_epoch=1, synthetic=FalseINFO:root:fuse bn add relu: True
Seed: 1162466312
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 48
precision: fp16
INFO:root:bn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465944, start_epoch=1, synthetic=FalseINFO:root:MPI local rank: 0
Seed: 1162465920
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466424, start_epoch=1, synthetic=FalseINFO:root:bn all reduce fp16: False
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI size: 1024
loss scaling: 128.0
INFO:root:async validation: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI size: 1024
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
precision: fp16
INFO:root:MPI global rank: 936
Seed: 1162466576
INFO:root:MPI global rank: 312
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465832, start_epoch=1, synthetic=FalseINFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466056, start_epoch=1, synthetic=FalseINFO:root:MPI local rank: 0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466032, start_epoch=1, synthetic=FalseINFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465648, start_epoch=1, synthetic=FalseINFO:root:async validation: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465720, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] network: resnet34_v1
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466584, start_epoch=1, synthetic=FalseINFO:root:MPI size: 1024
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 696
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466304, start_epoch=1, synthetic=FalseINFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn relu: True
Seed: 1162465632
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
Seed: 1162466464
precision: fp16
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
Seed: 1162465624
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] network: resnet34_v1
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn group: 8
Seed: 1162465616
INFO:root:[SSD] bn group: 8
Seed: 1162466504
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
Seed: 1162466264
INFO:root:bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
INFO:root:bn all reduce fp16: False
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
Seed: 1162466288
INFO:root:MPI global rank: 144
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
Seed: 1162465608
INFO:root:fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:async validation: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI global rank: 960
Seed: 1162466472
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465848, start_epoch=1, synthetic=FalseINFO:root:[SSD] network: resnet34_v1
Seed: 1162465800
precision: fp16
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
Seed: 1162465968
INFO:root:fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1162466440
INFO:root:async validation: True
precision: fp16
INFO:root:[SSD] fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI size: 1024
Seed: 1162466224
precision: fp16
INFO:root:MPI global rank: 816
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
INFO:root:bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466152, start_epoch=1, synthetic=FalseINFO:root:MPI local rank: 0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] bn group: 8
Seed: 1162465592
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI size: 1024
Seed: 1162466456
precision: fp16
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:[SSD] network: resnet34_v1
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI global rank: 528
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
precision: fp16
INFO:root:MPI local rank: 0
precision: fp16
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
Seed: 1162466136
INFO:root:[SSD] fuse bn relu: True
Seed: 1162466208
INFO:root:async validation: True
precision: fp16
INFO:root:fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn add relu: True
Seed: 1162465896
INFO:root:bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] network: resnet34_v1
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465584, start_epoch=1, synthetic=FalseINFO:root:fuse bn relu: True
Seed: 1162465656
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1162465904
INFO:root:fuse bn add relu: True
Seed: 1162465568
INFO:root:MPI size: 1024
Seed: 1162465688
precision: fp16
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 672
Seed: 1162466048
INFO:root:bn all reduce fp16: False
Seed: 1162465664
INFO:root:[SSD] fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:MPI local rank: 0
Seed: 1162466176
INFO:root:MPI size: 1024
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] bn group: 8
Seed: 1162465768
INFO:root:bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:async validation: True
precision: fp16
INFO:root:MPI global rank: 216
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162466248, start_epoch=1, synthetic=FalseINFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:[SSD] network: resnet34_v1
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
INFO:root:fuse bn add relu: True
Seed: 1162466256
INFO:root:MPI global rank: 720
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1162465728, start_epoch=1, synthetic=FalseINFO:root:bn group: 8
Seed: 1162466376
INFO:root:[SSD] fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1162466200
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
loss scaling: 128.0
INFO:root:[SSD] bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn relu: True
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 552
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI local rank: 0
Seed: 1162465712
INFO:root:[SSD] bn group: 8
loss scaling: 128.0
INFO:root:bn group: 8
precision: fp16
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:bn all reduce fp16: False
Seed: 1162465928
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Seed: 1162465872
INFO:root:fuse bn relu: True
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
Seed: 1162466448
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
precision: fp16
INFO:root:MPI size: 1024
loss scaling: 128.0
INFO:root:fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn relu: True
Seed: 1162465824
INFO:root:[SSD] bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
INFO:root:MPI global rank: 72
INFO:root:MPI local rank: 0
Seed: 1162465960
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
Seed: 1162465912
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:[SSD] network: resnet34_v1
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI size: 1024
precision: fp16
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1162465808
INFO:root:MPI global rank: 360
Seed: 1162466168
INFO:root:bn all reduce fp16: False
Seed: 1162465856
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
Seed: 1162466112
INFO:root:MPI local rank: 0
Seed: 1162465704
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
Seed: 1162466424
INFO:root:[SSD] fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:async validation: True
Seed: 1162465776
INFO:root:MPI global rank: 40
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
Seed: 1162465760
precision: fp16
INFO:root:[SSD] bn group: 8
Seed: 1162465976
INFO:root:[SSD] network: resnet34_v1
precision: fp16
INFO:root:MPI local rank: 0
precision: fp16
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
Seed: 1162466080
INFO:root:MPI size: 1024
Seed: 1162466056
INFO:root:fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 304
Seed: 1162465648
INFO:root:bn group: 8
Seed: 1162465720
INFO:root:[SSD] fuse bn add relu: True
Seed: 1162466552
INFO:root:[SSD] network: resnet34_v1
Seed: 1162465752
INFO:root:MPI local rank: 0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
Seed: 1162466520
INFO:root:MPI size: 1024
Seed: 1162466040
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1162466568
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:MPI global rank: 832
loss scaling: 128.0
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
Seed: 1162465864
INFO:root:MPI local rank: 0
Seed: 1162465816
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] bn group: 8
loss scaling: 128.0
INFO:root:async validation: True
precision: fp16
INFO:root:bn group: 8
Seed: 1162466416
INFO:root:[SSD] fuse bn relu: True
Seed: 1162466408
INFO:root:[SSD] network: resnet34_v1
precision: fp16
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1162466096
INFO:root:MPI size: 1024
Seed: 1162465784
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:MPI global rank: 880
precision: fp16
INFO:root:bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI local rank: 0
precision: fp16
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
Seed: 1162465576
INFO:root:async validation: True
precision: fp16
INFO:root:MPI size: 1024
precision: fp16
INFO:root:fuse bn add relu: True
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] bn group: 8
Seed: 1162466008
INFO:root:[SSD] network: resnet34_v1
Seed: 1162465696
INFO:root:MPI global rank: 904
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
Seed: 1162466024
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:[SSD] fuse bn relu: True
Seed: 1162466480
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
precision: fp16
INFO:root:bn all reduce fp16: False
Seed: 1162466192
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
INFO:root:MPI global rank: 712
precision: fp16
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
INFO:root:MPI global rank: 592
loss scaling: 128.0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
INFO:root:MPI local rank: 0
Seed: 1162465944
INFO:root:async validation: True
precision: fp16
INFO:root:[SSD] fuse bn relu: True
precision: fp16
loss scaling: 128.0
INFO:root:async validation: True
Seed: 1162465584
INFO:root:bn group: 8
precision: fp16
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
INFO:root:[SSD] bn group: 8
precision: fp16
loss scaling: 128.0
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
Seed: 1162465832
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
Seed: 1162466032
precision: fp16
loss scaling: 128.0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
INFO:root:MPI global rank: 520
Seed: 1162465672
INFO:root:fuse bn relu: True
Seed: 1162466584
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:MPI local rank: 0
precision: fp16
INFO:root:fuse bn add relu: True
Seed: 1162466304
INFO:root:[SSD] fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn group: 8
loss scaling: 128.0
INFO:root:[SSD] bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:loss scaling: 128.0
precision: fp16
INFO:root:async validation: True
precision: fp16
INFO:root:MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn group: 8
fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI global rank: 256
loss scaling: 128.0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
fuse bn relu: True
INFO:root:fuse bn relu: True
precision: fp16
INFO:root:fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
loss scaling: 128.0
INFO:root:MPI global rank: 928
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn relu: True
INFO:root:MPI size: 1024
precision: fp16
INFO:root:fuse bn relu: True
Seed: 1162465848
INFO:root:[SSD] bn group: 8
loss scaling: 128.0
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:async validation: True
loss scaling: 128.0
INFO:root:MPI global rank: 280
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:MPI local rank: 0
Seed: 1162466320
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
INFO:root:async validation: True
Seed: 1162466152
INFO:root:bn group: 8
precision: fp16
INFO:root:[SSD] fuse bn relu: True
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
precision: fp16
loss scaling: 128.0
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
precision: fp16
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 232
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:[SSD] bn group: 8
precision: fp16
loss scaling: 128.0
INFO:root:async validation: True
precision: fp16
INFO:root:MPI size: 1024
precision: fp16
INFO:root:fuse bn relu: True
Seed: 1162466248
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:MPI global rank: 448
precision: fp16
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Seed: 1162465728
precision: fp16
INFO:root:MPI local rank: 0
precision: fp16
INFO:root:bn group: 8
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:async validation: True
precision: fp16
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
precision: fp16
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:MPI global rank: 112
precision: fp16
INFO:root:bn group: 8
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
precision: fp16
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
INFO:root:MPI global rank: 400
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
precision: fp16
INFO:root:[SSD] network: resnet34_v1
precision: fp16
INFO:root:[SSD] bn group: 8
fuse bn relu: True
INFO:root:MPI local rank: 0
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
precision: fp16
INFO:root:fuse bn add relu: True
INFO:root:bn group: 8
loss scaling: 128.0
INFO:root:fuse bn relu: True
precision: fp16
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
precision: fp16
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
precision: fp16
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
INFO:root:[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI global rank: 8
precision: fp16
INFO:root:bn group: 8
precision: fp16
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
precision: fp16
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:async validation: True
precision: fp16
loss scaling: 128.0
INFO:root:MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] bn group: 8
loss scaling: 128.0
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
INFO:root:MPI global rank: 224
precision: fp16
loss scaling: 128.0
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:[SSD] fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:[SSD] bn group: 8
loss scaling: 128.0
INFO:root:async validation: True
loss scaling: 128.0
INFO:root:bn group: 8
fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:MPI global rank: 392
loss scaling: 128.0
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
fuse bn relu: True
INFO:root:MPI size: 1024
fuse bn add relu: True
INFO:root:MPI local rank: 0
fuse bn relu: True
INFO:root:fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI global rank: 872
loss scaling: 128.0
INFO:root:async validation: True
loss scaling: 128.0
INFO:root:[SSD] bn group: 8
fuse bn add relu: True
INFO:root:MPI local rank: 0
fuse bn relu: True
INFO:root:bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
loss scaling: 128.0
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
INFO:root:fuse bn relu: True
loss scaling: 128.0
INFO:root:loss scaling: 128.0
precision: fp16
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI global rank: 560
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn relu: True
loss scaling: 128.0
INFO:root:fuse bn add relu: True
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
INFO:root:async validation: True
precision: fp16
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:[SSD] bn group: 8
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
precision: fp16
INFO:root:fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn relu: True
loss scaling: 128.0
INFO:root:MPI global rank: 344
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
loss scaling: 128.0
INFO:root:bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 656
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
INFO:root:MPI global rank: 752
loss scaling: 128.0
INFO:root:MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
precision: fp16
INFO:root:[SSD] fuse bn relu: True
loss scaling: 128.0
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:async validation: True
loss scaling: 128.0
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
INFO:root:bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
loss scaling: 128.0
INFO:root:MPI size: 1024
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn relu: True
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
INFO:root:MPI global rank: 440
loss scaling: 128.0
INFO:root:fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
INFO:root:[SSD] bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:fuse bn add relu: True
fuse bn relu: True
INFO:root:[SSD] bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
INFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
INFO:root:MPI size: 1024
fuse bn relu: True
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
INFO:root:fuse bn add relu: True
INFO:root:bn group: 8
fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
fuse bn add relu: True
INFO:root:MPI global rank: 128
fuse bn add relu: True
INFO:root:bn group: 8
bn group: 8
INFO:root:bn all reduce fp16: False
bn group: 8
INFO:root:[SSD] fuse bn add relu: True
bn group: 8
INFO:root:MPI local rank: 0
bn group: 8
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:[SSD] bn group: 8
bn all reduce fp16: False
INFO:root:async validation: True
bn all reduce fp16: False
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 824
MPI size: 1024
INFO:root:[SSD] network: resnet34_v1
MPI size: 1024
INFO:root:MPI global rank: 968
bn all reduce fp16: False
INFO:root:MPI local rank: 0
MPI size: 1024
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
INFO:root:MPI local rank: 0
MPI global rank: 416
INFO:root:async validation: True
MPI global rank: 176
INFO:root:fuse bn relu: True
MPI global rank: 632
INFO:root:[SSD] fuse bn relu: True
MPI local rank: 0
INFO:root:fuse bn add relu: True
MPI global rank: 776
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
MPI local rank: 0
INFO:root:[SSD] fuse bn add relu: True
async validation: True
INFO:root:bn group: 8
MPI local rank: 0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
INFO:root:loss scaling: 128.0
async validation: True
INFO:root:[SSD] bn group: 8
[SSD] network: resnet34_v1
INFO:root:[SSD] network: resnet34_v1
async validation: True
INFO:root:bn all reduce fp16: False
async validation: True
INFO:root:[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI size: 1024
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
INFO:root:[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI global rank: 920
[SSD] fuse bn relu: True
INFO:root:fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
[SSD] fuse bn relu: True
INFO:root:fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn group: 8
[SSD] bn group: 8
INFO:root:fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
[SSD] bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
fuse bn relu: True
INFO:root:MPI global rank: 584
fuse bn add relu: True
INFO:root:fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn add relu: True
fuse bn add relu: True
INFO:root:MPI local rank: 0
fuse bn relu: True
INFO:root:bn all reduce fp16: False
bn group: 8
INFO:root:bn group: 8
fuse bn relu: True
INFO:root:MPI size: 1024
bn group: 8
INFO:root:[SSD] bn group: 8
fuse bn add relu: True
INFO:root:async validation: True
bn all reduce fp16: False
INFO:root:bn all reduce fp16: False
fuse bn add relu: True
bn group: 8
bn all reduce fp16: False
INFO:root:MPI global rank: 728
bn all reduce fp16: False
INFO:root:[SSD] network: resnet34_v1
bn group: 8
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
INFO:root:MPI global rank: 456
bn all reduce fp16: False
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI size: 1024
INFO:root:async validation: True
MPI global rank: 896
INFO:root:[SSD] fuse bn relu: True
MPI global rank: 296
INFO:root:MPI local rank: 0
MPI size: 1024
INFO:root:fuse bn relu: True
MPI global rank: 56
INFO:root:[SSD] network: resnet34_v1
MPI local rank: 0
INFO:root:[SSD] fuse bn add relu: True
MPI local rank: 0
INFO:root:async validation: True
MPI global rank: 248
INFO:root:fuse bn add relu: True
MPI local rank: 0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
INFO:root:[SSD] bn group: 8
MPI local rank: 0
INFO:root:[SSD] network: resnet34_v1
async validation: True
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
async validation: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
INFO:root:bn all reduce fp16: False
async validation: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI global rank: 24
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] bn group: 8
[SSD] fuse bn relu: True
INFO:root:bn group: 8
[SSD] fuse bn relu: True
INFO:root:fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
[SSD] fuse bn relu: True
INFO:root:bn all reduce fp16: False
[SSD] fuse bn add relu: True
INFO:root:fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:async validation: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:MPI size: 1024
[SSD] bn group: 8
INFO:root:bn group: 8
[SSD] bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 792
bn group: 8
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
[SSD] bn group: 8
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
bn all reduce fp16: False
INFO:root:async validation: True
fuse bn add relu: True
INFO:root:MPI global rank: 504
fuse bn add relu: True
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
bn group: 8
INFO:root:bn all reduce fp16: False
MPI size: 1024
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
bn group: 8
INFO:root:MPI size: 1024
bn group: 8
INFO:root:fuse bn relu: True
bn all reduce fp16: False
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
bn all reduce fp16: False
INFO:root:MPI global rank: 912
fuse bn relu: True
INFO:root:fuse bn relu: True
bn all reduce fp16: False
INFO:root:[SSD] fuse bn relu: True
MPI size: 1024
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 272
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
MPI size: 1024
MPI global rank: 800
INFO:root:fuse bn add relu: True
MPI global rank: 992
INFO:root:async validation: True
MPI local rank: 0
async validation: True
INFO:root:bn group: 8
MPI size: 1024
INFO:root:[SSD] bn group: 8
MPI local rank: 0
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
MPI local rank: 0
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
MPI global rank: 704
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
INFO:root:bn group: 8
async validation: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI local rank: 0
INFO:root:MPI global rank: 888
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
async validation: True
INFO:root:async validation: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:MPI size: 1024
[SSD] network: resnet34_v1
INFO:root:fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn relu: True
INFO:root:MPI global rank: 648
[SSD] fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
INFO:root:bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI local rank: 0
[SSD] bn group: 8
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
[SSD] bn group: 8
INFO:root:async validation: True
[SSD] fuse bn relu: True
INFO:root:bn all reduce fp16: False
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] fuse bn add relu: True
INFO:root:MPI global rank: 768
fuse bn add relu: True
INFO:root:MPI size: 1024
fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] bn group: 8
INFO:root:MPI local rank: 0
[SSD] bn group: 8
INFO:root:MPI global rank: 240
fuse bn add relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
bn group: 8
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
bn all reduce fp16: False
INFO:root:[SSD] network: resnet34_v1
bn group: 8
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
MPI size: 1024
INFO:root:[SSD] fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
INFO:root:bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] bn group: 8
MPI global rank: 368
MPI local rank: 0
INFO:root:[SSD] fuse bn relu: True
MPI size: 1024
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
INFO:root:bn all reduce fp16: False
fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
MPI global rank: 944
INFO:root:[SSD] fuse bn relu: True
async validation: True
INFO:root:MPI size: 1024
bn group: 8
INFO:root:[SSD] bn group: 8
fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
MPI local rank: 0
INFO:root:MPI global rank: 600
[SSD] network: resnet34_v1
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn all reduce fp16: False
INFO:root:[SSD] bn group: 8
bn group: 8
INFO:root:MPI local rank: 0
async validation: True
INFO:root:fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
MPI size: 1024
INFO:root:async validation: True
bn all reduce fp16: False
INFO:root:fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn group: 8
MPI global rank: 848
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI size: 1024
INFO:root:bn group: 8
[SSD] fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn relu: True
INFO:root:bn all reduce fp16: False
MPI local rank: 0
INFO:root:fuse bn relu: True
MPI global rank: 840
INFO:root:bn all reduce fp16: False
[SSD] bn group: 8
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:MPI size: 1024
async validation: True
INFO:root:MPI size: 1024
MPI local rank: 0
INFO:root:bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:MPI global rank: 624
async validation: True
INFO:root:MPI global rank: 384
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
fuse bn relu: True
INFO:root:MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI local rank: 0
[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 288
[SSD] fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
fuse bn add relu: True
INFO:root:MPI local rank: 0
[SSD] fuse bn add relu: True
INFO:root:fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
INFO:root:fuse bn relu: True
[SSD] bn group: 8
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
MPI size: 1024
INFO:root:async validation: True
fuse bn add relu: True
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] bn group: 8
INFO:root:[SSD] network: resnet34_v1
bn group: 8
INFO:root:[SSD] fuse bn add relu: True
bn group: 8
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 48
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
bn all reduce fp16: False
INFO:root:fuse bn add relu: True
bn all reduce fp16: False
INFO:root:[SSD] bn group: 8
MPI local rank: 0
INFO:root:bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
async validation: True
INFO:root:[SSD] fuse bn add relu: True
MPI size: 1024
INFO:root:bn group: 8
MPI size: 1024
INFO:root:MPI global rank: 744
fuse bn relu: True
INFO:root:[SSD] bn group: 8
[SSD] network: resnet34_v1
INFO:root:bn all reduce fp16: False
MPI global rank: 936
INFO:root:fuse bn relu: True
INFO:root:fuse bn add relu: True
MPI global rank: 312
INFO:root:MPI local rank: 0
fuse bn add relu: True
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn group: 8
MPI local rank: 0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn group: 8
INFO:root:bn all reduce fp16: False
MPI local rank: 0
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn relu: True
INFO:root:MPI global rank: 864
async validation: True
INFO:root:fuse bn relu: True
bn all reduce fp16: False
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
[SSD] fuse bn add relu: True
INFO:root:fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
INFO:root:async validation: True
MPI size: 1024
INFO:root:MPI global rank: 760
[SSD] bn group: 8
INFO:root:[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn group: 8
[SSD] network: resnet34_v1
INFO:root:[SSD] network: resnet34_v1
MPI global rank: 696
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn all reduce fp16: False
MPI local rank: 0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:async validation: True
[SSD] fuse bn relu: True
INFO:root:[SSD] bn group: 8
[SSD] fuse bn relu: True
INFO:root:MPI size: 1024
async validation: True
INFO:root:[SSD] fuse bn relu: True
fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:MPI global rank: 544
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] bn group: 8
INFO:root:MPI local rank: 0
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
bn group: 8
INFO:root:[SSD] fuse bn add relu: True
[SSD] bn group: 8
INFO:root:async validation: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn all reduce fp16: False
INFO:root:[SSD] bn group: 8
bn group: 8
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn relu: True
INFO:root:bn group: 8
MPI size: 1024
INFO:root:fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
INFO:root:bn all reduce fp16: False
fuse bn relu: True
INFO:root:fuse bn add relu: True
MPI global rank: 144
INFO:root:[SSD] fuse bn relu: True
fuse bn add relu: True
INFO:root:MPI size: 1024
[SSD] bn group: 8
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
MPI local rank: 0
INFO:root:fuse bn relu: True
MPI size: 1024
MPI global rank: 960
INFO:root:MPI global rank: 136
bn group: 8
INFO:root:bn all reduce fp16: False
async validation: True
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
MPI local rank: 0
INFO:root:fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI size: 1024
[SSD] network: resnet34_v1
INFO:root:bn group: 8
bn all reduce fp16: False
INFO:root:async validation: True
async validation: True
INFO:root:MPI global rank: 568
MPI size: 1024
INFO:root:bn group: 8
fuse bn relu: True
INFO:root:fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
fuse bn add relu: True
INFO:root:bn all reduce fp16: False
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
MPI global rank: 816
INFO:root:MPI size: 1024
bn group: 8
INFO:root:async validation: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
bn all reduce fp16: False
INFO:root:MPI global rank: 640
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI global rank: 424
MPI local rank: 0
INFO:root:[SSD] network: resnet34_v1
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
async validation: True
INFO:root:MPI local rank: 0
MPI size: 1024
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn relu: True
INFO:root:[SSD] bn group: 8
[SSD] network: resnet34_v1
INFO:root:async validation: True
MPI global rank: 528
INFO:root:async validation: True
fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
INFO:root:[SSD] bn group: 8
fuse bn add relu: True
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
async validation: True
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] bn group: 8
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
bn group: 8
INFO:root:bn group: 8
[SSD] network: resnet34_v1
INFO:root:bn all reduce fp16: False
fuse bn relu: True
fuse bn add relu: True
INFO:root:fuse bn relu: True
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
bn all reduce fp16: False
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI size: 1024
INFO:root:[SSD] bn group: 8
bn group: 8
INFO:root:MPI global rank: 784
[SSD] fuse bn relu: True
INFO:root:bn group: 8
fuse bn relu: True
INFO:root:fuse bn relu: True
MPI global rank: 672
INFO:root:MPI local rank: 0
bn all reduce fp16: False
INFO:root:bn all reduce fp16: False
[SSD] fuse bn add relu: True
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:fuse bn relu: True
MPI local rank: 0
INFO:root:async validation: True
MPI size: 1024
INFO:root:MPI size: 1024
[SSD] bn group: 8
INFO:root:bn group: 8
bn group: 8
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
async validation: True
INFO:root:MPI global rank: 376
MPI global rank: 216
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:MPI size: 1024
fuse bn relu: True
fuse bn add relu: True
INFO:root:bn all reduce fp16: False
MPI size: 1024
INFO:root:[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:async validation: True
async validation: True
INFO:root:MPI global rank: 352
MPI global rank: 720
INFO:root:MPI size: 1024
bn group: 8
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:MPI global rank: 328
bn all reduce fp16: False
INFO:root:[SSD] bn group: 8
[SSD] fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:async validation: True
async validation: True
INFO:root:MPI local rank: 0
MPI size: 1024
INFO:root:[SSD] fuse bn relu: True
[SSD] bn group: 8
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn relu: True
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI global rank: 552
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] bn group: 8
MPI local rank: 0
async validation: True
INFO:root:fuse bn relu: True
[SSD] bn group: 8
INFO:root:[SSD] fuse bn relu: True
bn group: 8
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:bn group: 8
bn all reduce fp16: False
INFO:root:fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn all reduce fp16: False
[SSD] fuse bn add relu: True
[SSD] bn group: 8
INFO:root:fuse bn add relu: True
MPI size: 1024
INFO:root:[SSD] bn group: 8
fuse bn relu: True
fuse bn add relu: True
INFO:root:MPI size: 1024
[SSD] fuse bn relu: True
INFO:root:bn group: 8
MPI global rank: 72
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 856
[SSD] fuse bn add relu: True
INFO:root:bn all reduce fp16: False
MPI local rank: 0
INFO:root:fuse bn add relu: True
bn group: 8
INFO:root:MPI local rank: 0
fuse bn relu: True
INFO:root:MPI size: 1024
[SSD] bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
async validation: True
INFO:root:bn group: 8
bn all reduce fp16: False
INFO:root:MPI global rank: 16
fuse bn add relu: True
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
[SSD] network: resnet34_v1
INFO:root:bn all reduce fp16: False
MPI size: 1024
INFO:root:MPI local rank: 0
bn group: 8
INFO:root:[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI size: 1024
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn add relu: True
MPI global rank: 360
INFO:root:async validation: True
bn all reduce fp16: False
INFO:root:bn group: 8
fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn relu: True
INFO:root:MPI global rank: 88
MPI local rank: 0
INFO:root:[SSD] network: resnet34_v1
MPI size: 1024
INFO:root:bn all reduce fp16: False
fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:MPI local rank: 0
async validation: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 40
INFO:root:MPI size: 1024
bn group: 8
INFO:root:[SSD] fuse bn add relu: True
[SSD] bn group: 8
INFO:root:async validation: True
[SSD] network: resnet34_v1
INFO:root:MPI global rank: 208
MPI local rank: 0
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
bn all reduce fp16: False
INFO:root:MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn add relu: True
async validation: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
INFO:root:async validation: True
fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] fuse bn relu: True
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
MPI global rank: 304
INFO:root:[SSD] network: resnet34_v1
bn group: 8
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
INFO:root:[SSD] bn group: 8
bn all reduce fp16: False
INFO:root:bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
async validation: True
INFO:root:bn all reduce fp16: False
MPI size: 1024
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:MPI size: 1024
MPI global rank: 832
INFO:root:MPI size: 1024
fuse bn relu: True
INFO:root:fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
[SSD] fuse bn add relu: True
INFO:root:MPI global rank: 976
MPI local rank: 0
INFO:root:MPI global rank: 192
fuse bn add relu: True
INFO:root:fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI local rank: 0
[SSD] bn group: 8
INFO:root:MPI local rank: 0
async validation: True
INFO:root:bn group: 8
bn group: 8
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
[SSD] fuse bn relu: True
INFO:root:async validation: True
[SSD] network: resnet34_v1
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:fuse bn add relu: True
fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:bn group: 8
fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 336
[SSD] fuse bn relu: True
INFO:root:bn all reduce fp16: False
MPI global rank: 880
INFO:root:[SSD] fuse bn relu: True
bn group: 8
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:MPI size: 1024
bn all reduce fp16: False
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
fuse bn relu: True
INFO:root:MPI global rank: 0
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
async validation: True
INFO:root:[SSD] bn group: 8
MPI size: 1024
INFO:root:[SSD] network: resnet34_v1
fuse bn add relu: True
INFO:root:MPI local rank: 0
[SSD] bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
INFO:root:async validation: True
MPI global rank: 904
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn group: 8
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn group: 8
MPI local rank: 0
INFO:root:fuse bn relu: True
async validation: True
INFO:root:[SSD] fuse bn add relu: True
bn all reduce fp16: False
MPI size: 1024
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
bn group: 8
bn all reduce fp16: False
INFO:root:bn all reduce fp16: False
[SSD] fuse bn relu: True
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:MPI size: 1024
MPI global rank: 712
INFO:root:bn group: 8
MPI size: 1024
MPI global rank: 592
INFO:root:[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:MPI global rank: 120
[SSD] bn group: 8
INFO:root:bn all reduce fp16: False
MPI local rank: 0
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn relu: True
MPI local rank: 0
INFO:root:MPI size: 1024
async validation: True
INFO:root:async validation: True
[SSD] fuse bn relu: True
INFO:root:MPI global rank: 408
async validation: True
INFO:root:fuse bn add relu: True
bn group: 8
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
[SSD] fuse bn add relu: True
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
INFO:root:async validation: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn all reduce fp16: False
[SSD] bn group: 8
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:bn group: 8
MPI size: 1024
INFO:root:MPI global rank: 576
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
INFO:root:bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] bn group: 8
MPI global rank: 520
INFO:root:[SSD] fuse bn relu: True
fuse bn relu: True
fuse bn add relu: True
INFO:root:MPI local rank: 0
[SSD] bn group: 8
INFO:root:MPI size: 1024
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 168
bn group: 8
INFO:root:fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
MPI local rank: 0
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
[SSD] bn group: 8
INFO:root:async validation: True
bn all reduce fp16: False
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
async validation: True
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
MPI size: 1024
INFO:root:bn all reduce fp16: False
bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn relu: True
MPI global rank: 256
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
fuse bn relu: True
INFO:root:MPI global rank: 480
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn add relu: True
MPI local rank: 0
INFO:root:bn group: 8
bn all reduce fp16: False
INFO:root:MPI local rank: 0
fuse bn add relu: True
INFO:root:bn all reduce fp16: False
[SSD] fuse bn relu: True
INFO:root:fuse bn relu: True
async validation: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI size: 1024
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
bn group: 8
INFO:root:fuse bn add relu: True
MPI global rank: 928
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:MPI global rank: 432
[SSD] network: resnet34_v1
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn relu: True
MPI size: 1024
INFO:root:[SSD] fuse bn relu: True
[SSD] bn group: 8
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
[SSD] fuse bn relu: True
INFO:root:fuse bn add relu: True
async validation: True
INFO:root:[SSD] fuse bn add relu: True
MPI global rank: 280
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
INFO:root:MPI global rank: 1008
[SSD] fuse bn add relu: True
INFO:root:bn group: 8
[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
MPI local rank: 0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
INFO:root:MPI local rank: 0
[SSD] bn group: 8
INFO:root:bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
async validation: True
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:MPI global rank: 96
bn all reduce fp16: False
INFO:root:fuse bn relu: True
fuse bn relu: True
fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI local rank: 0
[SSD] bn group: 8
INFO:root:fuse bn add relu: True
MPI size: 1024
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
[SSD] fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
MPI global rank: 232
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn group: 8
INFO:root:[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] fuse bn add relu: True
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
INFO:root:fuse bn relu: True
bn all reduce fp16: False
INFO:root:MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn relu: True
[SSD] bn group: 8
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 264
async validation: True
INFO:root:[SSD] fuse bn add relu: True
MPI size: 1024
INFO:root:bn group: 8
fuse bn relu: True
INFO:root:fuse bn relu: True
loss scaling: 128.0
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
MPI global rank: 448
INFO:root:bn all reduce fp16: False
fuse bn add relu: True
INFO:root:fuse bn add relu: True
[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI size: 1024
MPI local rank: 0
INFO:root:bn group: 8
bn group: 8
bn all reduce fp16: False
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 32
async validation: True
INFO:root:bn all reduce fp16: False
fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
MPI size: 1024
INFO:root:fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:async validation: True
MPI global rank: 112
INFO:root:MPI size: 1024
bn group: 8
bn all reduce fp16: False
INFO:root:fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn add relu: True
[SSD] bn group: 8
INFO:root:[SSD] network: resnet34_v1
MPI local rank: 0
INFO:root:MPI global rank: 512
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
[SSD] fuse bn relu: True
INFO:root:[SSD] bn group: 8
MPI size: 1024
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
INFO:root:MPI local rank: 0
[SSD] fuse bn add relu: True
INFO:root:bn all reduce fp16: False
MPI global rank: 400
INFO:root:[SSD] fuse bn relu: True
fuse bn relu: True
INFO:root:async validation: True
[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
fuse bn add relu: True
bn group: 8
INFO:root:loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
MPI local rank: 0
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 608
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn relu: True
bn all reduce fp16: False
INFO:root:[SSD] bn group: 8
fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
async validation: True
INFO:root:fuse bn add relu: True
MPI size: 1024
INFO:root:[SSD] fuse bn relu: True
fuse bn add relu: True
INFO:root:async validation: True
[SSD] fuse bn add relu: True
INFO:root:bn group: 8
[SSD] network: resnet34_v1
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI global rank: 8
INFO:root:[SSD] fuse bn add relu: True
bn group: 8
INFO:root:bn all reduce fp16: False
[SSD] bn group: 8
INFO:root:fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
MPI local rank: 0
INFO:root:MPI size: 1024
bn all reduce fp16: False
INFO:root:fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
INFO:root:MPI global rank: 488
async validation: True
INFO:root:bn group: 8
MPI size: 1024
INFO:root:[SSD] fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
[SSD] fuse bn add relu: True
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn add relu: True
MPI global rank: 224
INFO:root:MPI size: 1024
[SSD] bn group: 8
INFO:root:fuse bn add relu: True
fuse bn relu: True
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI global rank: 200
MPI local rank: 0
INFO:root:bn group: 8
fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
bn group: 8
INFO:root:MPI size: 1024
[SSD] fuse bn add relu: True
INFO:root:fuse bn add relu: True
async validation: True
INFO:root:[SSD] fuse bn relu: True
fuse bn add relu: True
INFO:root:MPI global rank: 464
bn all reduce fp16: False
INFO:root:loss scaling: 128.0
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
bn group: 8
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
[SSD] network: resnet34_v1
INFO:root:bn all reduce fp16: False
MPI size: 1024
INFO:root:[SSD] bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:async validation: True
bn all reduce fp16: False
INFO:root:MPI size: 1024
MPI global rank: 392
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn relu: True
INFO:root:MPI global rank: 536
MPI size: 1024
INFO:root:[SSD] fuse bn add relu: True
MPI local rank: 0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
INFO:root:MPI local rank: 0
MPI global rank: 872
INFO:root:[SSD] bn group: 8
fuse bn add relu: True
INFO:root:fuse bn relu: True
async validation: True
INFO:root:[SSD] fuse bn relu: True
[SSD] bn group: 8
INFO:root:async validation: True
MPI local rank: 0
INFO:root:fuse bn add relu: True
bn group: 8
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
[SSD] network: resnet34_v1
INFO:root:fuse bn relu: True
async validation: True
INFO:root:[SSD] bn group: 8
bn all reduce fp16: False
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
INFO:root:MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn group: 8
fuse bn add relu: True
INFO:root:MPI global rank: 680
[SSD] fuse bn add relu: True
INFO:root:fuse bn relu: True
MPI global rank: 560
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:bn all reduce fp16: False
[SSD] bn group: 8
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:fuse bn add relu: True
bn group: 8
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
[SSD] fuse bn add relu: True
INFO:root:async validation: True
async validation: True
INFO:root:bn group: 8
[SSD] bn group: 8
INFO:root:MPI global rank: 320
bn all reduce fp16: False
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:bn all reduce fp16: False
[SSD] network: resnet34_v1
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:async validation: True
MPI size: 1024
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
fuse bn relu: True
INFO:root:MPI global rank: 80
fuse bn add relu: True
INFO:root:fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
MPI global rank: 344
INFO:root:MPI local rank: 0
fuse bn add relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn group: 8
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
INFO:root:async validation: True
bn group: 8
INFO:root:bn group: 8
bn all reduce fp16: False
MPI size: 1024
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] fuse bn relu: True
async validation: True
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:[SSD] fuse bn add relu: True
MPI global rank: 656
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
[SSD] network: resnet34_v1
INFO:root:fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] bn group: 8
MPI size: 1024
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 152
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
MPI global rank: 752
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:bn group: 8
fuse bn relu: True
INFO:root:[SSD] bn group: 8
[SSD] fuse bn relu: True
INFO:root:async validation: True
MPI local rank: 0
INFO:root:bn all reduce fp16: False
[SSD] fuse bn add relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
async validation: True
INFO:root:[SSD] network: resnet34_v1
fuse bn add relu: True
INFO:root:MPI size: 1024
async validation: True
INFO:root:fuse bn relu: True
[SSD] bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
INFO:root:MPI global rank: 104
bn group: 8
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI local rank: 0
bn all reduce fp16: False
INFO:root:bn group: 8
loss scaling: 128.0
INFO:root:fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:async validation: True
MPI size: 1024
INFO:root:bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] bn group: 8
[SSD] fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
MPI global rank: 440
INFO:root:MPI size: 1024
fuse bn relu: True
INFO:root:bn group: 8
[SSD] fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
INFO:root:MPI global rank: 1016
MPI local rank: 0
INFO:root:bn all reduce fp16: False
fuse bn add relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] bn group: 8
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
async validation: True
INFO:root:fuse bn relu: True
bn group: 8
INFO:root:[SSD] fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:async validation: True
[SSD] network: resnet34_v1
INFO:root:MPI global rank: 984
bn all reduce fp16: False
INFO:root:fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] bn group: 8
fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
fuse bn add relu: True
INFO:root:MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn group: 8
MPI size: 1024
INFO:root:async validation: True
fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
bn all reduce fp16: False
INFO:root:bn all reduce fp16: False
[SSD] fuse bn relu: True
INFO:root:fuse bn relu: True
MPI global rank: 128
INFO:root:loss scaling: 128.0
bn group: 8
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:MPI size: 1024
MPI local rank: 0
INFO:root:fuse bn add relu: True
MPI size: 1024
INFO:root:[SSD] fuse bn add relu: True
bn all reduce fp16: False
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
INFO:root:MPI global rank: 184
async validation: True
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
MPI size: 1024
INFO:root:[SSD] fuse bn relu: True
MPI global rank: 824
INFO:root:MPI local rank: 0
[SSD] network: resnet34_v1
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
MPI global rank: 968
INFO:root:async validation: True
MPI local rank: 0
INFO:root:MPI size: 1024
fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] bn group: 8
MPI local rank: 0
INFO:root:MPI global rank: 688
async validation: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
fuse bn add relu: True
INFO:root:fuse bn relu: True
async validation: True
INFO:root:MPI local rank: 0
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
INFO:root:fuse bn add relu: True
bn group: 8
INFO:root:fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
[SSD] bn group: 8
INFO:root:bn group: 8
[SSD] network: resnet34_v1
INFO:root:async validation: True
bn all reduce fp16: False
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:bn all reduce fp16: False
INFO:root:MPI size: 1024
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn group: 8
MPI size: 1024
INFO:root:[SSD] bn group: 8
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 160
[SSD] fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI local rank: 0
[SSD] bn group: 8
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:MPI global rank: 808
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
MPI global rank: 920
INFO:root:async validation: True
fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
[SSD] bn group: 8
INFO:root:[SSD] network: resnet34_v1
MPI local rank: 0
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:[SSD] bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
INFO:root:bn group: 8
bn group: 8
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
loss scaling: 128.0
INFO:root:bn all reduce fp16: False
[SSD] network: resnet34_v1
INFO:root:loss scaling: 128.0
bn all reduce fp16: False
INFO:root:[SSD] fuse bn add relu: True
fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn relu: True
MPI size: 1024
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] fuse bn relu: True
INFO:root:fuse bn add relu: True
MPI global rank: 584
INFO:root:[SSD] fuse bn add relu: True
bn group: 8
bn all reduce fp16: False
INFO:root:MPI global rank: 664
[SSD] fuse bn add relu: True
INFO:root:bn group: 8
MPI local rank: 0
INFO:root:[SSD] bn group: 8
bn group: 8
INFO:root:MPI local rank: 0
MPI size: 1024
INFO:root:bn group: 8
[SSD] bn group: 8
INFO:root:bn all reduce fp16: False
async validation: True
INFO:root:async validation: True
bn all reduce fp16: False
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI global rank: 728
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
INFO:root:MPI global rank: 736
MPI local rank: 0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI global rank: 616
MPI global rank: 456
INFO:root:fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI local rank: 0
async validation: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:fuse bn add relu: True
fuse bn relu: True
INFO:root:async validation: True
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:async validation: True
async validation: True
INFO:root:bn group: 8
fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:bn all reduce fp16: False
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:MPI global rank: 952
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn all reduce fp16: False
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
INFO:root:[SSD] bn group: 8
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
[SSD] bn group: 8
INFO:root:fuse bn add relu: True
MPI size: 1024
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
fuse bn add relu: True
INFO:root:bn group: 8
MPI global rank: 24
INFO:root:[SSD] network: resnet34_v1
[SSD] bn group: 8
INFO:root:fuse bn relu: True
bn group: 8
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
INFO:root:fuse bn add relu: True
bn all reduce fp16: False
INFO:root:[SSD] bn group: 8
fuse bn add relu: True
INFO:root:MPI size: 1024
loss scaling: 128.0
INFO:root:[SSD] fuse bn relu: True
async validation: True
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 472
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn add relu: True
MPI size: 1024
INFO:root:bn all reduce fp16: False
bn group: 8
INFO:root:MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] bn group: 8
MPI global rank: 792
INFO:root:MPI size: 1024
bn all reduce fp16: False
INFO:root:async validation: True
fuse bn relu: True
INFO:root:MPI global rank: 1000
[SSD] fuse bn relu: True
INFO:root:fuse bn add relu: True
MPI local rank: 0
INFO:root:[SSD] network: resnet34_v1
MPI size: 1024
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:MPI local rank: 0
[SSD] fuse bn add relu: True
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 504
INFO:root:bn group: 8
bn group: 8
INFO:root:async validation: True
async validation: True
INFO:root:bn all reduce fp16: False
[SSD] bn group: 8
INFO:root:[SSD] fuse bn relu: True
MPI local rank: 0
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn add relu: True
async validation: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
INFO:root:MPI global rank: 64
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
INFO:root:MPI global rank: 496
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] bn group: 8
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn relu: True
MPI global rank: 912
INFO:root:MPI local rank: 0
fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:async validation: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI local rank: 0
fuse bn add relu: True
INFO:root:[SSD] bn group: 8
MPI local rank: 0
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
async validation: True
INFO:root:[SSD] network: resnet34_v1
bn group: 8
INFO:root:[SSD] fuse bn add relu: True
[SSD] bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn relu: True
bn all reduce fp16: False
INFO:root:[SSD] fuse bn add relu: True
[SSD] bn group: 8
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn relu: True
fuse bn add relu: True
MPI size: 1024
MPI global rank: 888
[SSD] fuse bn relu: True
bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
MPI local rank: 0
fuse bn relu: True
bn all reduce fp16: False
[SSD] bn group: 8
async validation: True
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
fuse bn add relu: True
fuse bn relu: True
MPI global rank: 648
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
fuse bn add relu: True
MPI local rank: 0
bn all reduce fp16: False
[SSD] fuse bn relu: True
bn group: 8
async validation: True
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 768
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
MPI local rank: 0
MPI global rank: 240
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
MPI local rank: 0
fuse bn relu: True
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
async validation: True
fuse bn add relu: True
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
bn group: 8
bn all reduce fp16: False
[SSD] bn group: 8
[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
MPI size: 1024
loss scaling: 128.0
[SSD] bn group: 8
[SSD] fuse bn add relu: True
MPI global rank: 600
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
MPI local rank: 0
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
async validation: True
fuse bn add relu: True
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn add relu: True
[SSD] network: resnet34_v1
bn group: 8
fuse bn relu: True
bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
bn all reduce fp16: False
fuse bn add relu: True
[SSD] fuse bn relu: True
MPI size: 1024
MPI size: 1024
bn group: 8
[SSD] fuse bn add relu: True
MPI global rank: 624
MPI global rank: 384
bn all reduce fp16: False
[SSD] bn group: 8
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
MPI size: 1024
async validation: True
async validation: True
MPI global rank: 288
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
fuse bn relu: True
[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
fuse bn add relu: True
fuse bn relu: True
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
bn group: 8
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
fuse bn add relu: True
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
MPI global rank: 744
[SSD] bn group: 8
bn all reduce fp16: False
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
async validation: True
MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn all reduce fp16: False
[SSD] network: resnet34_v1
MPI global rank: 864
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
MPI local rank: 0
MPI size: 1024
MPI global rank: 760
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
bn group: 8
[SSD] network: resnet34_v1
MPI local rank: 0
[SSD] fuse bn add relu: True
bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
[SSD] bn group: 8
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
MPI global rank: 544
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI local rank: 0
[SSD] bn group: 8
[SSD] fuse bn relu: True
fuse bn relu: True
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
async validation: True
fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] bn group: 8
[SSD] network: resnet34_v1
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
loss scaling: 128.0
fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
fuse bn relu: True
MPI size: 1024
bn group: 8
[SSD] fuse bn add relu: True
fuse bn relu: True
MPI global rank: 136
bn all reduce fp16: False
fuse bn add relu: True
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
MPI size: 1024
bn group: 8
fuse bn add relu: True
bn group: 8
async validation: True
MPI global rank: 568
[SSD] network: resnet34_v1
bn all reduce fp16: False
bn all reduce fp16: False
MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
MPI size: 1024
async validation: True
[SSD] fuse bn relu: True
MPI global rank: 640
MPI global rank: 424
[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
MPI local rank: 0
MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
async validation: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
[SSD] bn group: 8
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
fuse bn relu: True
[SSD] fuse bn add relu: True
MPI size: 1024
fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 784
bn group: 8
fuse bn relu: True
MPI local rank: 0
bn all reduce fp16: False
fuse bn add relu: True
fuse bn relu: True
async validation: True
MPI size: 1024
bn group: 8
fuse bn add relu: True
[SSD] network: resnet34_v1
MPI global rank: 376
bn all reduce fp16: False
bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
MPI size: 1024
bn all reduce fp16: False
[SSD] fuse bn relu: True
async validation: True
MPI global rank: 352
MPI size: 1024
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
MPI local rank: 0
MPI global rank: 328
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
async validation: True
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
bn group: 8
fuse bn relu: True
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
bn all reduce fp16: False
fuse bn add relu: True
[SSD] bn group: 8
MPI size: 1024
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
MPI global rank: 856
bn all reduce fp16: False
loss scaling: 128.0
fuse bn add relu: True
MPI local rank: 0
MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn group: 8
fuse bn relu: True
MPI global rank: 16
fuse bn relu: True
async validation: True
bn all reduce fp16: False
fuse bn add relu: True
MPI local rank: 0
[SSD] network: resnet34_v1
MPI size: 1024
async validation: True
bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 88
[SSD] network: resnet34_v1
bn all reduce fp16: False
MPI size: 1024
[SSD] fuse bn relu: True
MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
async validation: True
MPI global rank: 208
[SSD] fuse bn relu: True
[SSD] bn group: 8
[SSD] network: resnet34_v1
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
[SSD] bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
bn all reduce fp16: False
bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn add relu: True
MPI size: 1024
MPI size: 1024
fuse bn relu: True
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 976
MPI global rank: 192
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI local rank: 0
MPI local rank: 0
fuse bn relu: True
async validation: True
async validation: True
bn all reduce fp16: False
fuse bn add relu: True
[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
MPI size: 1024
bn group: 8
fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 336
bn all reduce fp16: False
[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
MPI local rank: 0
MPI size: 1024
[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
async validation: True
MPI global rank: 0
[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
MPI local rank: 0
fuse bn add relu: True
loss scaling: 128.0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
bn group: 8
fuse bn relu: True
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
fuse bn add relu: True
bn group: 8
[SSD] bn group: 8
[SSD] fuse bn relu: True
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
[SSD] fuse bn add relu: True
MPI global rank: 120
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
[SSD] bn group: 8
MPI local rank: 0
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 408
fuse bn add relu: True
async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] network: resnet34_v1
MPI local rank: 0
bn group: 8
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI size: 1024
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 576
bn group: 8
bn all reduce fp16: False
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
[SSD] bn group: 8
[SSD] fuse bn relu: True
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
async validation: True
MPI global rank: 168
[SSD] bn group: 8
MPI local rank: 0
fuse bn relu: True
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
[SSD] network: resnet34_v1
fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn add relu: True
fuse bn add relu: True
[SSD] fuse bn relu: True
bn group: 8
[SSD] bn group: 8
MPI global rank: 480
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
MPI local rank: 0
bn all reduce fp16: False
fuse bn relu: True
[SSD] bn group: 8
async validation: True
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
bn group: 8
[SSD] network: resnet34_v1
MPI global rank: 432
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
bn all reduce fp16: False
fuse bn relu: True
[SSD] fuse bn relu: True
async validation: True
MPI size: 1024
fuse bn add relu: True
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
MPI global rank: 1008
bn group: 8
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
async validation: True
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
MPI global rank: 96
fuse bn relu: True
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
fuse bn add relu: True
async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn add relu: True
bn group: 8
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
[SSD] fuse bn relu: True
fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI global rank: 264
[SSD] fuse bn add relu: True
bn group: 8
fuse bn relu: True
MPI local rank: 0
[SSD] bn group: 8
bn all reduce fp16: False
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
async validation: True
MPI size: 1024
MPI global rank: 32
bn group: 8
[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
[SSD] fuse bn relu: True
async validation: True
MPI size: 1024
fuse bn add relu: True
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
MPI global rank: 512
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
bn all reduce fp16: False
[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
async validation: True
MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] network: resnet34_v1
MPI global rank: 608
fuse bn relu: True
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
fuse bn add relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
async validation: True
[SSD] fuse bn add relu: True
bn all reduce fp16: False
fuse bn add relu: True
[SSD] network: resnet34_v1
[SSD] bn group: 8
MPI size: 1024
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 488
[SSD] fuse bn relu: True
bn all reduce fp16: False
fuse bn relu: True
MPI local rank: 0
[SSD] fuse bn add relu: True
MPI size: 1024
fuse bn add relu: True
async validation: True
[SSD] bn group: 8
MPI global rank: 200
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
MPI local rank: 0
bn all reduce fp16: False
fuse bn relu: True
fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 464
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
MPI local rank: 0
bn all reduce fp16: False
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
async validation: True
MPI size: 1024
[SSD] fuse bn relu: True
loss scaling: 128.0
[SSD] network: resnet34_v1
MPI global rank: 536
[SSD] fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
[SSD] bn group: 8
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
fuse bn relu: True
loss scaling: 128.0
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
fuse bn add relu: True
MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
bn group: 8
MPI global rank: 680
fuse bn relu: True
[SSD] fuse bn add relu: True
bn all reduce fp16: False
MPI local rank: 0
fuse bn add relu: True
[SSD] bn group: 8
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
async validation: True
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 320
[SSD] network: resnet34_v1
bn all reduce fp16: False
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
async validation: True
fuse bn relu: True
[SSD] fuse bn relu: True
MPI global rank: 80
loss scaling: 128.0
fuse bn add relu: True
[SSD] network: resnet34_v1
MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
bn all reduce fp16: False
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
fuse bn relu: True
[SSD] bn group: 8
[SSD] fuse bn relu: True
MPI global rank: 152
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
MPI local rank: 0
bn group: 8
loss scaling: 128.0
[SSD] bn group: 8
async validation: True
bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
MPI size: 1024
fuse bn relu: True
loss scaling: 128.0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 104
fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
MPI local rank: 0
bn group: 8
fuse bn relu: True
[SSD] fuse bn add relu: True
async validation: True
bn all reduce fp16: False
fuse bn add relu: True
[SSD] bn group: 8
[SSD] network: resnet34_v1
MPI size: 1024
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 1016
bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
MPI local rank: 0
MPI size: 1024
fuse bn relu: True
[SSD] fuse bn add relu: True
async validation: True
MPI global rank: 984
fuse bn add relu: True
[SSD] bn group: 8
[SSD] network: resnet34_v1
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
async validation: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
fuse bn relu: True
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
MPI size: 1024
fuse bn add relu: True
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 184
bn group: 8
[SSD] bn group: 8
[SSD] fuse bn relu: True
MPI local rank: 0
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
async validation: True
MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] bn group: 8
MPI global rank: 688
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
MPI local rank: 0
fuse bn relu: True
[SSD] fuse bn relu: True
bn group: 8
async validation: True
bn all reduce fp16: False
fuse bn add relu: True
bn group: 8
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
[SSD] bn group: 8
[SSD] network: resnet34_v1
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 160
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI local rank: 0
[SSD] fuse bn relu: True
MPI global rank: 808
about to model_zoo.get_model( resnet34_v1 )
async validation: True
fuse bn relu: True
[SSD] fuse bn add relu: True
MPI local rank: 0
[SSD] network: resnet34_v1
fuse bn add relu: True
[SSD] bn group: 8
async validation: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
bn all reduce fp16: False
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
[SSD] bn group: 8
fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
[SSD] fuse bn add relu: True
MPI global rank: 664
fuse bn add relu: True
bn group: 8
[SSD] bn group: 8
MPI local rank: 0
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
async validation: True
bn all reduce fp16: False
MPI size: 1024
[SSD] network: resnet34_v1
MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI global rank: 736
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 616
fuse bn relu: True
MPI local rank: 0
[SSD] fuse bn relu: True
MPI local rank: 0
fuse bn add relu: True
async validation: True
[SSD] fuse bn add relu: True
async validation: True
bn group: 8
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 952
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
bn group: 8
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
fuse bn relu: True
bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
[SSD] bn group: 8
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
bn group: 8
MPI global rank: 472
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn add relu: True
bn all reduce fp16: False
MPI local rank: 0
fuse bn relu: True
[SSD] bn group: 8
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
async validation: True
MPI global rank: 1000
fuse bn add relu: True
[SSD] network: resnet34_v1
fuse bn add relu: True
MPI local rank: 0
bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
async validation: True
bn all reduce fp16: False
[SSD] fuse bn relu: True
bn all reduce fp16: False
[SSD] network: resnet34_v1
MPI size: 1024
MPI size: 1024
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 64
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
MPI global rank: 496
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
[SSD] fuse bn add relu: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
async validation: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
INFO:root:COCO reader: raw images
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1621374052928, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 117266, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 373}}
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1621374052928, "event_type": "POINT_IN_TIME", "key": "max_samples", "value": 1, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 374}}
:::MLLOG {"namespace": "", "time_ms": 1621374052929, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_warmup_steps", "value": 1336, "metadata": {"file": "/workspace/ssd/lr_scheduler.py", "lineno": 31}}
:::MLLOG {"namespace": "", "time_ms": 1621374052929, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_warmup_factor", "value": 0, "metadata": {"file": "/workspace/ssd/lr_scheduler.py", "lineno": 32}}
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1621374052929, "event_type": "POINT_IN_TIME", "key": "opt_base_learning_rate", "value": 0.336, "metadata": {"file": "/workspace/ssd/lr_scheduler.py", "lineno": 34}}
:::MLLOG {"namespace": "", "time_ms": 1621374052929, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_decay_boundary_epochs", "value": [68, 85], "metadata": {"file": "/workspace/ssd/lr_scheduler.py", "lineno": 35}}
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1621374052938, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 5000, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 417}}
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:52] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
INFO:root:COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
INFO:root:COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:40:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
:::MLLOG {"namespace": "", "time_ms": 1621374054833, "event_type": "POINT_IN_TIME", "key": "opt_weight_decay", "value": 4e-05, "metadata": {"file": "/workspace/ssd/trainer.py", "lineno": 29}}
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
[luna-0041:0:1983438 - context.c:581] INFO job (ID: 17873378898743539944) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0041:0:1983438 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0xe caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0041:0:1983438 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x4d caps:0x16
[luna-0041:0:1983438 - comm.c:385] INFO [group#:0] group id:10 tree idx:0 tree_type:LLT rail_idx:0 group size:128 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0x280a00000010) mlid:c014
[luna-0041:0:1983438 - comm.c:385] INFO [group#:1] group id:10 tree idx:1 tree_type:SAT rail_idx:0 group size:128 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0041:0:1983441 - context.c:581] INFO job (ID: 17873379269703239042) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0041:0:1983441 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0xf caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0041:0:1983441 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x4e caps:0x16
[luna-0041:0:1983441 - comm.c:385] INFO [group#:0] group id:11 tree idx:0 tree_type:LLT rail_idx:0 group size:128 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0x290a00000011) mlid:c015
[luna-0041:0:1983441 - comm.c:385] INFO [group#:1] group id:11 tree idx:1 tree_type:SAT rail_idx:0 group size:128 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0041:0:1983439 - context.c:581] INFO job (ID: 17873378662298320451) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0041:0:1983439 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x10 caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0041:0:1983439 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x4f caps:0x16
[luna-0041:0:1983439 - comm.c:385] INFO [group#:0] group id:12 tree idx:0 tree_type:LLT rail_idx:0 group size:128 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0x2a0a00000012) mlid:c016
[luna-0041:0:1983439 - comm.c:385] INFO [group#:1] group id:12 tree idx:1 tree_type:SAT rail_idx:0 group size:128 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0041:0:1983437 - context.c:581] INFO job (ID: 17873379311703197568) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0041:0:1983437 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x11 caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0041:0:1983437 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x50 caps:0x16
[luna-0041:0:1983437 - comm.c:385] INFO [group#:0] group id:13 tree idx:0 tree_type:LLT rail_idx:0 group size:128 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0x2b0a00000013) mlid:c017
[luna-0041:0:1983437 - comm.c:385] INFO [group#:1] group id:13 tree idx:1 tree_type:SAT rail_idx:0 group size:128 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0041:0:1983435 - context.c:581] INFO job (ID: 17873379297488654684) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0041:0:1983435 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x12 caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0041:0:1983435 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x51 caps:0x16
[luna-0041:0:1983435 - comm.c:385] INFO [group#:0] group id:14 tree idx:0 tree_type:LLT rail_idx:0 group size:128 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0x2c0a00000014) mlid:c018
[luna-0041:0:1983435 - comm.c:385] INFO [group#:1] group id:14 tree idx:1 tree_type:SAT rail_idx:0 group size:128 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0041:0:1983436 - context.c:581] INFO job (ID: 17873378957531363746) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0041:0:1983436 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x13 caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0041:0:1983436 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x52 caps:0x16
[luna-0041:0:1983436 - comm.c:385] INFO [group#:0] group id:15 tree idx:0 tree_type:LLT rail_idx:0 group size:128 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0x2d0a00000015) mlid:c019
[luna-0041:0:1983436 - comm.c:385] INFO [group#:1] group id:15 tree idx:1 tree_type:SAT rail_idx:0 group size:128 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0041:0:1983442 - context.c:581] INFO job (ID: 17873378991372766864) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0041:0:1983442 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x18 caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0041:0:1983442 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x57 caps:0x16
[luna-0041:0:1983442 - comm.c:385] INFO [group#:0] group id:16 tree idx:0 tree_type:LLT rail_idx:0 group size:128 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0x2e0a00000016) mlid:c01a
[luna-0041:0:1983442 - comm.c:385] INFO [group#:1] group id:16 tree idx:1 tree_type:SAT rail_idx:0 group size:128 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0041:0:1983440 - context.c:581] INFO job (ID: 17873379343025643123) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0041:0:1983440 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x19 caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0041:0:1983440 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x58 caps:0x16
[luna-0041:0:1983440 - comm.c:385] INFO [group#:0] group id:17 tree idx:0 tree_type:LLT rail_idx:0 group size:128 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0x2f0a00000017) mlid:c01b
[luna-0041:0:1983440 - comm.c:385] INFO [group#:1] group id:17 tree idx:1 tree_type:SAT rail_idx:0 group size:128 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
Done
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Done
Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
Done
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Cleaning the dummy pipelines ...
Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Cleaning the dummy pipelines ...
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
Done
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
INFO:root:Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
INFO:root:Done
Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Cleaning the dummy pipelines ...
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
:::MLLOG {"namespace": "", "time_ms": 1621374427790, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427790, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_batchnorm0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427790, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_batchnorm0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427790, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427790, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427790, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427790, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427790, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_conv4_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm4_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm4_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_conv5_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm5_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm5_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427791, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427792, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427792, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427792, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427792, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427792, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427792, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427792, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427792, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427792, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv4_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427792, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm4_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427792, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm4_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427792, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv5_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427792, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm5_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427792, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm5_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427792, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv6_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427792, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm6_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427792, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm6_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427793, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv7_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427793, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm7_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427793, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm7_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427793, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv8_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427793, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm8_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427793, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm8_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427793, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427793, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427793, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427793, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427793, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427793, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427793, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427793, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427793, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427793, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427794, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427794, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427794, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv4_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427794, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm4_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427794, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm4_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427794, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv5_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427794, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm5_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427794, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm5_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427794, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv6_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427794, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm6_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427794, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm6_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427794, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv7_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427794, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm7_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427794, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm7_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427794, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv8_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427794, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm8_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427794, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm8_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427795, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv9_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427795, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm9_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427795, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm9_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427795, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv10_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427795, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm10_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427795, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm10_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427795, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv11_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427795, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm11_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427795, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm11_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427795, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv12_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427795, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm12_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427795, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm12_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427795, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427795, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv0_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427795, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427795, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv0_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427795, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427796, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427796, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427796, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427796, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427796, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv2_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427796, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427796, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv2_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427796, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427796, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv3_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427796, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427796, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv3_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427796, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv4_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427796, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv4_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427796, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv4_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427796, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv4_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427796, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor0_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427797, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor0_conv0_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427797, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor1_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427797, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor1_conv0_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427797, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor2_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427797, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor2_conv0_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427797, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor3_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427797, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor3_conv0_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427797, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor4_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427797, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor4_conv0_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427797, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor5_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374427797, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor5_conv0_bias"}}
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
:::MLLOG {"namespace": "", "time_ms": 1621374428398, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 522}}
:::MLLOG {"namespace": "", "time_ms": 1621374428416, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 526}}
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
:::MLLOG {"namespace": "", "time_ms": 1621374429514, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 24, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 110}}
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
:::MLLOG {"namespace": "", "time_ms": 1621374429514, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3072, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 111}}
:::MLLOG {"namespace": "", "time_ms": 1621374429514, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 3, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 112}}
Training from epoch: 1
:::MLLOG {"namespace": "", "time_ms": 1621374429515, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 115}}
INFO:root:Training from epoch: 1
Training from epoch: 1
:::MLLOG {"namespace": "", "time_ms": 1621374429515, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 1, "current_iter_num": 0}}
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:[Training][Epoch 1] training time: 0.464 [sec],avg speed: 251365.996 [imgs/sec],loss=20.172
[Training][Epoch 1] training time: 0.464 [sec],avg speed: 251365.996 [imgs/sec],loss=20.172
:::MLLOG {"namespace": "", "time_ms": 1621374429979, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 251365.99602230548, "lr": 0.009556886227544914, "loss": 20.171521789149235}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 1}}
:::MLLOG {"namespace": "", "time_ms": 1621374429979, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 251365.99602230548, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374429979, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1621374429980, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 2, "current_iter_num": 0}}
INFO:root:[Training][Epoch 2] training time: 0.321 [sec],avg speed: 363890.740 [imgs/sec],loss=13.048
[Training][Epoch 2] training time: 0.321 [sec],avg speed: 363890.740 [imgs/sec],loss=13.048
:::MLLOG {"namespace": "", "time_ms": 1621374430301, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 363890.7403426603, "lr": 0.019365269461077805, "loss": 13.048035044419137}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 2}}
:::MLLOG {"namespace": "", "time_ms": 1621374430301, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 363890.7403426603, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374430301, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 2}}
:::MLLOG {"namespace": "", "time_ms": 1621374430301, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 3, "current_iter_num": 0}}
INFO:root:[Training][Iteration 100][Epoch 3, Batch 22/39] lr: 0.02515, training time: 8.622 [ms], speed: 356295.317 [imgs/sec], loss=10.570
[Training][Iteration 100][Epoch 3, Batch 22/39] lr: 0.02515, training time: 8.622 [ms], speed: 356295.317 [imgs/sec], loss=10.570
:::MLLOG {"namespace": "", "time_ms": 1621374430491, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 356295.3169012491, "loss": 10.570479393005371}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [3, 100]}}
:::MLLOG {"namespace": "", "time_ms": 1621374430491, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 356295.3169012491, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 3] training time: 0.318 [sec],avg speed: 367145.173 [imgs/sec],loss=9.854
[Training][Epoch 3] training time: 0.318 [sec],avg speed: 367145.173 [imgs/sec],loss=9.854
:::MLLOG {"namespace": "", "time_ms": 1621374430619, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 367145.1733378124, "lr": 0.029173652694610752, "loss": 9.854337190326891}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 3}}
:::MLLOG {"namespace": "", "time_ms": 1621374430619, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 367145.1733378124, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374430619, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1621374430619, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 4, "current_iter_num": 0}}
INFO:root:[Training][Epoch 4] training time: 0.305 [sec],avg speed: 383137.736 [imgs/sec],loss=8.703
[Training][Epoch 4] training time: 0.305 [sec],avg speed: 383137.736 [imgs/sec],loss=8.703
:::MLLOG {"namespace": "", "time_ms": 1621374430924, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 383137.7357461786, "lr": 0.0389820359281437, "loss": 8.702878588124326}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621374430924, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 383137.7357461786, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374430924, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621374430925, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 5, "current_iter_num": 0}}
INFO:root:[Training][Epoch 5] training time: 0.299 [sec],avg speed: 390117.142 [imgs/sec],loss=8.674
[Training][Epoch 5] training time: 0.299 [sec],avg speed: 390117.142 [imgs/sec],loss=8.674
:::MLLOG {"namespace": "", "time_ms": 1621374431224, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 390117.14179949404, "lr": 0.048790419161676646, "loss": 8.673964023590088}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 5}}
:::MLLOG {"namespace": "", "time_ms": 1621374431224, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 390117.14179949404, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374431224, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 5}}
:::MLLOG {"namespace": "", "time_ms": 1621374431234, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 5}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 192.963 [ms], allgather: 41.855 [ms], asnumpy: 7.260 [ms], speed: 20654.433 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 192.963 [ms], allgather: 41.855 [ms], asnumpy: 7.260 [ms], speed: 20654.433 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374431479, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 6, "current_iter_num": 0}}
INFO:root:[Training][Iteration 200][Epoch 6, Batch 5/39] lr: 0.05030, training time: 8.207 [ms], speed: 374334.759 [imgs/sec], loss=8.611
[Training][Iteration 200][Epoch 6, Batch 5/39] lr: 0.05030, training time: 8.207 [ms], speed: 374334.759 [imgs/sec], loss=8.611
:::MLLOG {"namespace": "", "time_ms": 1621374431520, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 374334.7594477758, "loss": 8.611156463623047}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [6, 200]}}
:::MLLOG {"namespace": "", "time_ms": 1621374431520, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 374334.7594477758, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 6] training time: 0.299 [sec],avg speed: 390710.176 [imgs/sec],loss=8.401
[Training][Epoch 6] training time: 0.299 [sec],avg speed: 390710.176 [imgs/sec],loss=8.401
:::MLLOG {"namespace": "", "time_ms": 1621374431778, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 390710.17638788035, "lr": 0.05859880239520959, "loss": 8.40093647806268}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 6}}
:::MLLOG {"namespace": "", "time_ms": 1621374431778, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 390710.17638788035, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374431778, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 6}}
:::MLLOG {"namespace": "", "time_ms": 1621374431778, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 7, "current_iter_num": 0}}
INFO:root:[Training][Epoch 7] training time: 0.305 [sec],avg speed: 382128.843 [imgs/sec],loss=8.344
[Training][Epoch 7] training time: 0.305 [sec],avg speed: 382128.843 [imgs/sec],loss=8.344
:::MLLOG {"namespace": "", "time_ms": 1621374432084, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 382128.8427361954, "lr": 0.06840718562874248, "loss": 8.344214376650358}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1621374432084, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 382128.8427361954, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374432084, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1621374432084, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 8, "current_iter_num": 0}}
INFO:root:[Training][Iteration 300][Epoch 8, Batch 27/39] lr: 0.07545, training time: 8.620 [ms], speed: 356373.688 [imgs/sec], loss=6.749
[Training][Iteration 300][Epoch 8, Batch 27/39] lr: 0.07545, training time: 8.620 [ms], speed: 356373.688 [imgs/sec], loss=6.749
:::MLLOG {"namespace": "", "time_ms": 1621374432317, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 356373.6883858959, "loss": 6.748977184295654}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [8, 300]}}
:::MLLOG {"namespace": "", "time_ms": 1621374432318, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 356373.6883858959, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 8] training time: 0.332 [sec],avg speed: 351162.534 [imgs/sec],loss=7.803
[Training][Epoch 8] training time: 0.332 [sec],avg speed: 351162.534 [imgs/sec],loss=7.803
:::MLLOG {"namespace": "", "time_ms": 1621374432417, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 351162.5335877978, "lr": 0.07821556886227543, "loss": 7.803233799181487}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 8}}
:::MLLOG {"namespace": "", "time_ms": 1621374432417, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 351162.5335877978, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374432417, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1621374432417, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 9, "current_iter_num": 0}}
INFO:root:[Training][Epoch 9] training time: 0.343 [sec],avg speed: 340488.071 [imgs/sec],loss=7.537
[Training][Epoch 9] training time: 0.343 [sec],avg speed: 340488.071 [imgs/sec],loss=7.537
:::MLLOG {"namespace": "", "time_ms": 1621374432760, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 340488.07051396614, "lr": 0.08802395209580838, "loss": 7.536620027140567}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 9}}
:::MLLOG {"namespace": "", "time_ms": 1621374432761, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 340488.07051396614, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374432761, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 9}}
:::MLLOG {"namespace": "", "time_ms": 1621374432761, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 10, "current_iter_num": 0}}
INFO:root:[Training][Epoch 10] training time: 0.325 [sec],avg speed: 359476.138 [imgs/sec],loss=7.456
[Training][Epoch 10] training time: 0.325 [sec],avg speed: 359476.138 [imgs/sec],loss=7.456
:::MLLOG {"namespace": "", "time_ms": 1621374433086, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 359476.1384408119, "lr": 0.0978323353293413, "loss": 7.456199608351055}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 10}}
:::MLLOG {"namespace": "", "time_ms": 1621374433086, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 359476.1384408119, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374433086, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 10}}
:::MLLOG {"namespace": "", "time_ms": 1621374433096, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 10}}
:::MLLOG {"namespace": "", "time_ms": 1621374433119, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 5}}
:::MLLOG {"namespace": "", "time_ms": 1621374433119, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.0014577256402968529, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 5}}
loading annotations into memory...
Done (t=0.10s)
creating index...
Loading and preparing results...
DONE (t=0.32s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.83s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.00146
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.00406
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.00065
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.00351
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.00208
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.00315
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.00433
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.00433
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 46.258 [ms], allgather: 43.720 [ms], asnumpy: 4.888 [ms], speed: 52705.371 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 46.258 [ms], allgather: 43.720 [ms], asnumpy: 4.888 [ms], speed: 52705.371 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374433229, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 11, "current_iter_num": 0}}
INFO:root:[Training][Iteration 400][Epoch 11, Batch 10/39] lr: 0.10060, training time: 14.130 [ms], speed: 217402.854 [imgs/sec], loss=6.294
[Training][Iteration 400][Epoch 11, Batch 10/39] lr: 0.10060, training time: 14.130 [ms], speed: 217402.854 [imgs/sec], loss=6.294
:::MLLOG {"namespace": "", "time_ms": 1621374433370, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 217402.8536429808, "loss": 6.293850421905518}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [11, 400]}}
:::MLLOG {"namespace": "", "time_ms": 1621374433370, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 217402.8536429808, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 11] training time: 0.379 [sec],avg speed: 308388.506 [imgs/sec],loss=6.829
[Training][Epoch 11] training time: 0.379 [sec],avg speed: 308388.506 [imgs/sec],loss=6.829
:::MLLOG {"namespace": "", "time_ms": 1621374433608, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 308388.5056771051, "lr": 0.10764071856287424, "loss": 6.829140863920513}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1621374433608, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 308388.5056771051, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374433608, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1621374433608, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 12, "current_iter_num": 0}}
INFO:root:[Training][Epoch 12] training time: 0.378 [sec],avg speed: 308871.941 [imgs/sec],loss=6.541
[Training][Epoch 12] training time: 0.378 [sec],avg speed: 308871.941 [imgs/sec],loss=6.541
:::MLLOG {"namespace": "", "time_ms": 1621374433986, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 308871.94093393424, "lr": 0.11744910179640719, "loss": 6.541231368717394}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 12}}
:::MLLOG {"namespace": "", "time_ms": 1621374433986, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 308871.94093393424, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374433986, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1621374433987, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 13, "current_iter_num": 0}}
INFO:root:[Training][Iteration 500][Epoch 13, Batch 32/39] lr: 0.12575, training time: 8.490 [ms], speed: 361830.315 [imgs/sec], loss=7.763
[Training][Iteration 500][Epoch 13, Batch 32/39] lr: 0.12575, training time: 8.490 [ms], speed: 361830.315 [imgs/sec], loss=7.763
:::MLLOG {"namespace": "", "time_ms": 1621374434258, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 361830.3147663381, "loss": 7.763162612915039}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [13, 500]}}
:::MLLOG {"namespace": "", "time_ms": 1621374434259, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 361830.3147663381, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 13] training time: 0.319 [sec],avg speed: 366266.039 [imgs/sec],loss=6.773
[Training][Epoch 13] training time: 0.319 [sec],avg speed: 366266.039 [imgs/sec],loss=6.773
:::MLLOG {"namespace": "", "time_ms": 1621374434305, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 366266.0386099693, "lr": 0.1272574850299401, "loss": 6.7725883283113175}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 13}}
:::MLLOG {"namespace": "", "time_ms": 1621374434306, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 366266.0386099693, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374434306, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 13}}
:::MLLOG {"namespace": "", "time_ms": 1621374434306, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 14, "current_iter_num": 0}}
INFO:root:[Training][Epoch 14] training time: 0.341 [sec],avg speed: 342530.851 [imgs/sec],loss=6.092
[Training][Epoch 14] training time: 0.341 [sec],avg speed: 342530.851 [imgs/sec],loss=6.092
:::MLLOG {"namespace": "", "time_ms": 1621374434647, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 342530.8507783134, "lr": 0.13706586826347306, "loss": 6.09163266734073}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621374434647, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 342530.8507783134, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374434647, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621374434648, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 15, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621374434960, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 10}}
:::MLLOG {"namespace": "", "time_ms": 1621374434960, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.012912648420243781, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 10}}
INFO:root:[Training][Epoch 15] training time: 0.313 [sec],avg speed: 372825.603 [imgs/sec],loss=6.180
[Training][Epoch 15] training time: 0.313 [sec],avg speed: 372825.603 [imgs/sec],loss=6.180
:::MLLOG {"namespace": "", "time_ms": 1621374434961, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 372825.6027777672, "lr": 0.14687425149700598, "loss": 6.180146800844293}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1621374434961, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 372825.6027777672, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374434961, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1621374434972, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 15}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 49.973 [ms], allgather: 40.891 [ms], asnumpy: 5.137 [ms], speed: 52082.193 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 49.973 [ms], allgather: 40.891 [ms], asnumpy: 5.137 [ms], speed: 52082.193 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374435070, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 16, "current_iter_num": 0}}
INFO:root:[Training][Iteration 600][Epoch 16, Batch 15/39] lr: 0.15090, training time: 10.396 [ms], speed: 295508.102 [imgs/sec], loss=4.497
[Training][Iteration 600][Epoch 16, Batch 15/39] lr: 0.15090, training time: 10.396 [ms], speed: 295508.102 [imgs/sec], loss=4.497
:::MLLOG {"namespace": "", "time_ms": 1621374435226, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 295508.1024649944, "loss": 4.496723175048828}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [16, 600]}}
:::MLLOG {"namespace": "", "time_ms": 1621374435226, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 295508.1024649944, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 16] training time: 0.370 [sec],avg speed: 315445.683 [imgs/sec],loss=5.919
[Training][Epoch 16] training time: 0.370 [sec],avg speed: 315445.683 [imgs/sec],loss=5.919
:::MLLOG {"namespace": "", "time_ms": 1621374435440, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 315445.6827583008, "lr": 0.15668263473053892, "loss": 5.918513254115456}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 16}}
:::MLLOG {"namespace": "", "time_ms": 1621374435440, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 315445.6827583008, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374435440, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 16}}
:::MLLOG {"namespace": "", "time_ms": 1621374435440, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 17, "current_iter_num": 0}}
INFO:root:[Training][Epoch 17] training time: 0.349 [sec],avg speed: 334148.599 [imgs/sec],loss=5.909
[Training][Epoch 17] training time: 0.349 [sec],avg speed: 334148.599 [imgs/sec],loss=5.909
:::MLLOG {"namespace": "", "time_ms": 1621374435790, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 334148.59925407515, "lr": 0.16649101796407187, "loss": 5.909302604825873}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 17}}
:::MLLOG {"namespace": "", "time_ms": 1621374435790, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 334148.59925407515, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374435790, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 17}}
:::MLLOG {"namespace": "", "time_ms": 1621374435790, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 18, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621374436007, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1621374436008, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.05215911486904884, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 15}}
INFO:root:[Training][Iteration 700][Epoch 18, Batch 37/39] lr: 0.17605, training time: 8.253 [ms], speed: 372242.192 [imgs/sec], loss=7.013
[Training][Iteration 700][Epoch 18, Batch 37/39] lr: 0.17605, training time: 8.253 [ms], speed: 372242.192 [imgs/sec], loss=7.013
:::MLLOG {"namespace": "", "time_ms": 1621374436096, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 372242.1916392929, "loss": 7.012506008148193}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [18, 700]}}
:::MLLOG {"namespace": "", "time_ms": 1621374436096, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 372242.1916392929, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 18] training time: 0.314 [sec],avg speed: 371468.185 [imgs/sec],loss=5.952
[Training][Epoch 18] training time: 0.314 [sec],avg speed: 371468.185 [imgs/sec],loss=5.952
:::MLLOG {"namespace": "", "time_ms": 1621374436105, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 371468.1854449337, "lr": 0.1762994011976048, "loss": 5.95243605814482}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 18}}
:::MLLOG {"namespace": "", "time_ms": 1621374436105, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 371468.1854449337, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374436105, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 18}}
:::MLLOG {"namespace": "", "time_ms": 1621374436105, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 19, "current_iter_num": 0}}
INFO:root:[Training][Epoch 19] training time: 0.298 [sec],avg speed: 391321.592 [imgs/sec],loss=5.462
[Training][Epoch 19] training time: 0.298 [sec],avg speed: 391321.592 [imgs/sec],loss=5.462
:::MLLOG {"namespace": "", "time_ms": 1621374436403, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 391321.59197961655, "lr": 0.18610778443113773, "loss": 5.462240074810229}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1621374436404, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 391321.59197961655, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374436404, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1621374436404, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 20, "current_iter_num": 0}}
INFO:root:[Training][Epoch 20] training time: 0.300 [sec],avg speed: 388493.614 [imgs/sec],loss=5.336
[Training][Epoch 20] training time: 0.300 [sec],avg speed: 388493.614 [imgs/sec],loss=5.336
:::MLLOG {"namespace": "", "time_ms": 1621374436705, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 388493.6141170496, "lr": 0.19591616766467065, "loss": 5.335688747857747}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 20}}
:::MLLOG {"namespace": "", "time_ms": 1621374436705, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 388493.6141170496, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374436705, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1621374436715, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 20}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 51.126 [ms], allgather: 36.352 [ms], asnumpy: 6.606 [ms], speed: 53143.446 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 51.126 [ms], allgather: 36.352 [ms], asnumpy: 6.606 [ms], speed: 53143.446 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374436810, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 21, "current_iter_num": 0}}
INFO:root:[Training][Iteration 800][Epoch 21, Batch 20/39] lr: 0.20120, training time: 8.647 [ms], speed: 355278.466 [imgs/sec], loss=6.497
[Training][Iteration 800][Epoch 21, Batch 20/39] lr: 0.20120, training time: 8.647 [ms], speed: 355278.466 [imgs/sec], loss=6.497
:::MLLOG {"namespace": "", "time_ms": 1621374436983, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 355278.46593533247, "loss": 6.497082233428955}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [21, 800]}}
:::MLLOG {"namespace": "", "time_ms": 1621374436983, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 355278.46593533247, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 21] training time: 0.317 [sec],avg speed: 368698.924 [imgs/sec],loss=5.143
[Training][Epoch 21] training time: 0.317 [sec],avg speed: 368698.924 [imgs/sec],loss=5.143
:::MLLOG {"namespace": "", "time_ms": 1621374437127, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 368698.9238906493, "lr": 0.2057245508982036, "loss": 5.142946989912736}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 21}}
:::MLLOG {"namespace": "", "time_ms": 1621374437127, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 368698.9238906493, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374437127, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 21}}
:::MLLOG {"namespace": "", "time_ms": 1621374437127, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 22, "current_iter_num": 0}}
INFO:root:[Training][Epoch 22] training time: 0.317 [sec],avg speed: 368673.105 [imgs/sec],loss=5.408
[Training][Epoch 22] training time: 0.317 [sec],avg speed: 368673.105 [imgs/sec],loss=5.408
:::MLLOG {"namespace": "", "time_ms": 1621374437444, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 368673.105357596, "lr": 0.21553293413173652, "loss": 5.407768776542262}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 22}}
:::MLLOG {"namespace": "", "time_ms": 1621374437444, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 368673.105357596, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374437444, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 22}}
:::MLLOG {"namespace": "", "time_ms": 1621374437445, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 23, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621374437782, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1621374437783, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.07897907777550674, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 20}}
INFO:root:[Training][Epoch 23] training time: 0.339 [sec],avg speed: 344097.230 [imgs/sec],loss=4.991
[Training][Epoch 23] training time: 0.339 [sec],avg speed: 344097.230 [imgs/sec],loss=4.991
:::MLLOG {"namespace": "", "time_ms": 1621374437784, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 344097.2301827918, "lr": 0.22534131736526947, "loss": 4.990773307649713}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1621374437784, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 344097.2301827918, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374437784, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1621374437784, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 24, "current_iter_num": 0}}
INFO:root:[Training][Iteration 900][Epoch 24, Batch 3/39] lr: 0.22635, training time: 7.965 [ms], speed: 385675.430 [imgs/sec], loss=4.953
[Training][Iteration 900][Epoch 24, Batch 3/39] lr: 0.22635, training time: 7.965 [ms], speed: 385675.430 [imgs/sec], loss=4.953
:::MLLOG {"namespace": "", "time_ms": 1621374437808, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 385675.4301678207, "loss": 4.953165054321289}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [24, 900]}}
:::MLLOG {"namespace": "", "time_ms": 1621374437809, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 385675.4301678207, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 24] training time: 0.301 [sec],avg speed: 388181.915 [imgs/sec],loss=5.395
[Training][Epoch 24] training time: 0.301 [sec],avg speed: 388181.915 [imgs/sec],loss=5.395
:::MLLOG {"namespace": "", "time_ms": 1621374438085, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 388181.9154227436, "lr": 0.2351497005988024, "loss": 5.394821625006826}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 24}}
:::MLLOG {"namespace": "", "time_ms": 1621374438086, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 388181.9154227436, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374438086, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1621374438086, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 25, "current_iter_num": 0}}
INFO:root:[Training][Epoch 25] training time: 0.319 [sec],avg speed: 365886.687 [imgs/sec],loss=4.972
[Training][Epoch 25] training time: 0.319 [sec],avg speed: 365886.687 [imgs/sec],loss=4.972
:::MLLOG {"namespace": "", "time_ms": 1621374438405, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 365886.68713509507, "lr": 0.24495808383233533, "loss": 4.971662226476167}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 25}}
:::MLLOG {"namespace": "", "time_ms": 1621374438405, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 365886.68713509507, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374438405, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 25}}
:::MLLOG {"namespace": "", "time_ms": 1621374438415, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 25}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 42.082 [ms], allgather: 32.247 [ms], asnumpy: 6.042 [ms], speed: 62210.647 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 42.082 [ms], allgather: 32.247 [ms], asnumpy: 6.042 [ms], speed: 62210.647 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374438496, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 26, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1000][Epoch 26, Batch 25/39] lr: 0.25150, training time: 8.567 [ms], speed: 358584.095 [imgs/sec], loss=5.038
[Training][Iteration 1000][Epoch 26, Batch 25/39] lr: 0.25150, training time: 8.567 [ms], speed: 358584.095 [imgs/sec], loss=5.038
:::MLLOG {"namespace": "", "time_ms": 1621374438711, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 358584.09516451857, "loss": 5.038341522216797}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [26, 1000]}}
:::MLLOG {"namespace": "", "time_ms": 1621374438711, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 358584.09516451857, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 26] training time: 0.317 [sec],avg speed: 367859.596 [imgs/sec],loss=4.939
[Training][Epoch 26] training time: 0.317 [sec],avg speed: 367859.596 [imgs/sec],loss=4.939
:::MLLOG {"namespace": "", "time_ms": 1621374438814, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 367859.59557450184, "lr": 0.25476646706586825, "loss": 4.9394589474326684}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 26}}
:::MLLOG {"namespace": "", "time_ms": 1621374438814, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 367859.59557450184, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374438814, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 26}}
:::MLLOG {"namespace": "", "time_ms": 1621374438814, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 27, "current_iter_num": 0}}
INFO:root:[Training][Epoch 27] training time: 0.322 [sec],avg speed: 362498.434 [imgs/sec],loss=4.736
[Training][Epoch 27] training time: 0.322 [sec],avg speed: 362498.434 [imgs/sec],loss=4.736
:::MLLOG {"namespace": "", "time_ms": 1621374439137, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 362498.4335843885, "lr": 0.2645748502994012, "loss": 4.736404061317444}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1621374439137, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 362498.4335843885, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374439137, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1621374439137, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 28, "current_iter_num": 0}}
INFO:root:[Training][Epoch 28] training time: 0.399 [sec],avg speed: 292211.962 [imgs/sec],loss=4.774
[Training][Epoch 28] training time: 0.399 [sec],avg speed: 292211.962 [imgs/sec],loss=4.774
:::MLLOG {"namespace": "", "time_ms": 1621374439537, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 292211.96151316614, "lr": 0.27438323353293415, "loss": 4.7743367960578516}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 28}}
:::MLLOG {"namespace": "", "time_ms": 1621374439537, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 292211.96151316614, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374439537, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1621374439537, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 29, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621374439550, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 25}}
:::MLLOG {"namespace": "", "time_ms": 1621374439550, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.09874697954587598, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 25}}
INFO:root:[Training][Iteration 1100][Epoch 29, Batch 8/39] lr: 0.27665, training time: 9.899 [ms], speed: 310336.547 [imgs/sec], loss=5.167
[Training][Iteration 1100][Epoch 29, Batch 8/39] lr: 0.27665, training time: 9.899 [ms], speed: 310336.547 [imgs/sec], loss=5.167
:::MLLOG {"namespace": "", "time_ms": 1621374439617, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 310336.5470250156, "loss": 5.166501998901367}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [29, 1100]}}
:::MLLOG {"namespace": "", "time_ms": 1621374439617, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 310336.5470250156, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 29] training time: 0.331 [sec],avg speed: 352420.002 [imgs/sec],loss=4.788
[Training][Epoch 29] training time: 0.331 [sec],avg speed: 352420.002 [imgs/sec],loss=4.788
:::MLLOG {"namespace": "", "time_ms": 1621374439869, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 352420.0020326403, "lr": 0.2841916167664671, "loss": 4.7879518333234286}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 29}}
:::MLLOG {"namespace": "", "time_ms": 1621374439869, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 352420.0020326403, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374439869, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 29}}
:::MLLOG {"namespace": "", "time_ms": 1621374439869, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 30, "current_iter_num": 0}}
INFO:root:[Training][Epoch 30] training time: 0.294 [sec],avg speed: 396777.870 [imgs/sec],loss=4.708
[Training][Epoch 30] training time: 0.294 [sec],avg speed: 396777.870 [imgs/sec],loss=4.708
:::MLLOG {"namespace": "", "time_ms": 1621374440164, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 396777.8695922062, "lr": 0.29400000000000004, "loss": 4.708469986915588}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 30}}
:::MLLOG {"namespace": "", "time_ms": 1621374440164, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 396777.8695922062, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374440164, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 30}}
:::MLLOG {"namespace": "", "time_ms": 1621374440174, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 30}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 41.732 [ms], allgather: 28.858 [ms], asnumpy: 4.817 [ms], speed: 66305.769 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 41.732 [ms], allgather: 28.858 [ms], asnumpy: 4.817 [ms], speed: 66305.769 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374440251, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 31, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1200][Epoch 31, Batch 30/39] lr: 0.30180, training time: 8.433 [ms], speed: 364285.909 [imgs/sec], loss=5.078
[Training][Iteration 1200][Epoch 31, Batch 30/39] lr: 0.30180, training time: 8.433 [ms], speed: 364285.909 [imgs/sec], loss=5.078
:::MLLOG {"namespace": "", "time_ms": 1621374440504, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 364285.90902536875, "loss": 5.0779547691345215}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [31, 1200]}}
:::MLLOG {"namespace": "", "time_ms": 1621374440504, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 364285.90902536875, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 31] training time: 0.328 [sec],avg speed: 355397.323 [imgs/sec],loss=4.353
[Training][Epoch 31] training time: 0.328 [sec],avg speed: 355397.323 [imgs/sec],loss=4.353
:::MLLOG {"namespace": "", "time_ms": 1621374440579, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 355397.3230087821, "lr": 0.30380838323353293, "loss": 4.353101542121486}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1621374440580, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 355397.3230087821, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374440580, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1621374440580, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 32, "current_iter_num": 0}}
INFO:root:[Training][Epoch 32] training time: 0.382 [sec],avg speed: 305917.188 [imgs/sec],loss=4.884
[Training][Epoch 32] training time: 0.382 [sec],avg speed: 305917.188 [imgs/sec],loss=4.884
:::MLLOG {"namespace": "", "time_ms": 1621374440962, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 305917.18795215804, "lr": 0.3136167664670659, "loss": 4.883630288274665}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 32}}
:::MLLOG {"namespace": "", "time_ms": 1621374440962, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 305917.18795215804, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374440962, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1621374440962, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 33, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621374441197, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 30}}
:::MLLOG {"namespace": "", "time_ms": 1621374441197, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.12421860277997844, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 30}}
INFO:root:[Training][Epoch 33] training time: 0.298 [sec],avg speed: 391579.471 [imgs/sec],loss=4.695
[Training][Epoch 33] training time: 0.298 [sec],avg speed: 391579.471 [imgs/sec],loss=4.695
:::MLLOG {"namespace": "", "time_ms": 1621374441261, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 391579.47112736205, "lr": 0.3234251497005988, "loss": 4.695056620397065}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 33}}
:::MLLOG {"namespace": "", "time_ms": 1621374441261, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 391579.47112736205, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374441261, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 33}}
:::MLLOG {"namespace": "", "time_ms": 1621374441261, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 34, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1300][Epoch 34, Batch 13/39] lr: 0.32695, training time: 8.932 [ms], speed: 343912.725 [imgs/sec], loss=3.707
[Training][Iteration 1300][Epoch 34, Batch 13/39] lr: 0.32695, training time: 8.932 [ms], speed: 343912.725 [imgs/sec], loss=3.707
:::MLLOG {"namespace": "", "time_ms": 1621374441377, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 343912.72519417806, "loss": 3.707113265991211}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [34, 1300]}}
:::MLLOG {"namespace": "", "time_ms": 1621374441378, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 343912.72519417806, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 34] training time: 0.324 [sec],avg speed: 360029.377 [imgs/sec],loss=4.922
[Training][Epoch 34] training time: 0.324 [sec],avg speed: 360029.377 [imgs/sec],loss=4.922
:::MLLOG {"namespace": "", "time_ms": 1621374441585, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 360029.37710318377, "lr": 0.33323353293413177, "loss": 4.921926510961432}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 34}}
:::MLLOG {"namespace": "", "time_ms": 1621374441586, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 360029.37710318377, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374441586, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 34}}
:::MLLOG {"namespace": "", "time_ms": 1621374441586, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 35, "current_iter_num": 0}}
INFO:root:[Training][Epoch 35] training time: 0.335 [sec],avg speed: 348970.302 [imgs/sec],loss=4.663
[Training][Epoch 35] training time: 0.335 [sec],avg speed: 348970.302 [imgs/sec],loss=4.663
:::MLLOG {"namespace": "", "time_ms": 1621374441920, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 348970.30187162344, "lr": 0.336, "loss": 4.663100939047964}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1621374441921, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 348970.30187162344, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374441921, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1621374441931, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 35}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 43.153 [ms], allgather: 28.536 [ms], asnumpy: 4.778 [ms], speed: 65387.448 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 43.153 [ms], allgather: 28.536 [ms], asnumpy: 4.778 [ms], speed: 65387.448 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374442009, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 36, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1400][Epoch 36, Batch 35/39] lr: 0.33600, training time: 8.704 [ms], speed: 352958.240 [imgs/sec], loss=3.662
[Training][Iteration 1400][Epoch 36, Batch 35/39] lr: 0.33600, training time: 8.704 [ms], speed: 352958.240 [imgs/sec], loss=3.662
:::MLLOG {"namespace": "", "time_ms": 1621374442314, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 352958.23957435717, "loss": 3.66180682182312}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [36, 1400]}}
:::MLLOG {"namespace": "", "time_ms": 1621374442314, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 352958.23957435717, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 36] training time: 0.329 [sec],avg speed: 354798.304 [imgs/sec],loss=4.767
[Training][Epoch 36] training time: 0.329 [sec],avg speed: 354798.304 [imgs/sec],loss=4.767
:::MLLOG {"namespace": "", "time_ms": 1621374442338, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 354798.30388844165, "lr": 0.336, "loss": 4.767306045482033}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 36}}
:::MLLOG {"namespace": "", "time_ms": 1621374442338, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 354798.30388844165, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374442338, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 36}}
:::MLLOG {"namespace": "", "time_ms": 1621374442339, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 37, "current_iter_num": 0}}
INFO:root:[Training][Epoch 37] training time: 0.304 [sec],avg speed: 383852.312 [imgs/sec],loss=4.238
[Training][Epoch 37] training time: 0.304 [sec],avg speed: 383852.312 [imgs/sec],loss=4.238
:::MLLOG {"namespace": "", "time_ms": 1621374442643, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 383852.31239323306, "lr": 0.336, "loss": 4.238093785549465}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 37}}
:::MLLOG {"namespace": "", "time_ms": 1621374442643, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 383852.31239323306, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374442643, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 37}}
:::MLLOG {"namespace": "", "time_ms": 1621374442643, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 38, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621374442920, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1621374442920, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.13388388742221802, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 35}}
INFO:root:[Training][Epoch 38] training time: 0.308 [sec],avg speed: 379004.958 [imgs/sec],loss=4.328
[Training][Epoch 38] training time: 0.308 [sec],avg speed: 379004.958 [imgs/sec],loss=4.328
:::MLLOG {"namespace": "", "time_ms": 1621374442952, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 379004.9577195282, "lr": 0.336, "loss": 4.328414170365584}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 38}}
:::MLLOG {"namespace": "", "time_ms": 1621374442952, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 379004.9577195282, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374442952, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 38}}
:::MLLOG {"namespace": "", "time_ms": 1621374442952, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 39, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1500][Epoch 39, Batch 18/39] lr: 0.33600, training time: 7.937 [ms], speed: 387038.596 [imgs/sec], loss=5.681
[Training][Iteration 1500][Epoch 39, Batch 18/39] lr: 0.33600, training time: 7.937 [ms], speed: 387038.596 [imgs/sec], loss=5.681
:::MLLOG {"namespace": "", "time_ms": 1621374443095, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 387038.5956564837, "loss": 5.681060791015625}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [39, 1500]}}
:::MLLOG {"namespace": "", "time_ms": 1621374443095, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 387038.5956564837, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 39] training time: 0.311 [sec],avg speed: 374870.243 [imgs/sec],loss=4.085
[Training][Epoch 39] training time: 0.311 [sec],avg speed: 374870.243 [imgs/sec],loss=4.085
:::MLLOG {"namespace": "", "time_ms": 1621374443264, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 374870.2431656461, "lr": 0.336, "loss": 4.085077455169277}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 39}}
:::MLLOG {"namespace": "", "time_ms": 1621374443264, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 374870.2431656461, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374443264, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 39}}
:::MLLOG {"namespace": "", "time_ms": 1621374443264, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 40, "current_iter_num": 0}}
INFO:root:[Training][Epoch 40] training time: 0.300 [sec],avg speed: 388995.167 [imgs/sec],loss=4.528
[Training][Epoch 40] training time: 0.300 [sec],avg speed: 388995.167 [imgs/sec],loss=4.528
:::MLLOG {"namespace": "", "time_ms": 1621374443564, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 388995.1670134544, "lr": 0.336, "loss": 4.527769270696138}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 40}}
:::MLLOG {"namespace": "", "time_ms": 1621374443564, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 388995.1670134544, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374443565, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 40}}
:::MLLOG {"namespace": "", "time_ms": 1621374443575, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 40}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 41.167 [ms], allgather: 31.466 [ms], asnumpy: 6.641 [ms], speed: 63071.861 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 41.167 [ms], allgather: 31.466 [ms], asnumpy: 6.641 [ms], speed: 63071.861 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374443658, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 41, "current_iter_num": 0}}
INFO:root:[Training][Epoch 41] training time: 0.312 [sec],avg speed: 373839.276 [imgs/sec],loss=4.232
[Training][Epoch 41] training time: 0.312 [sec],avg speed: 373839.276 [imgs/sec],loss=4.232
:::MLLOG {"namespace": "", "time_ms": 1621374443970, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 373839.2758657549, "lr": 0.336, "loss": 4.231696825278433}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 41}}
:::MLLOG {"namespace": "", "time_ms": 1621374443970, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 373839.2758657549, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374443971, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 41}}
:::MLLOG {"namespace": "", "time_ms": 1621374443971, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 42, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1600][Epoch 42, Batch 1/39] lr: 0.33600, training time: 8.966 [ms], speed: 342637.997 [imgs/sec], loss=3.065
[Training][Iteration 1600][Epoch 42, Batch 1/39] lr: 0.33600, training time: 8.966 [ms], speed: 342637.997 [imgs/sec], loss=3.065
:::MLLOG {"namespace": "", "time_ms": 1621374443980, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 342637.9972875947, "loss": 3.0649635791778564}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [42, 1600]}}
:::MLLOG {"namespace": "", "time_ms": 1621374443980, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 342637.9972875947, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 42] training time: 0.323 [sec],avg speed: 360883.847 [imgs/sec],loss=4.097
[Training][Epoch 42] training time: 0.323 [sec],avg speed: 360883.847 [imgs/sec],loss=4.097
:::MLLOG {"namespace": "", "time_ms": 1621374444294, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 360883.84655594063, "lr": 0.336, "loss": 4.0968597876398185}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 42}}
:::MLLOG {"namespace": "", "time_ms": 1621374444295, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 360883.84655594063, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374444295, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 42}}
:::MLLOG {"namespace": "", "time_ms": 1621374444295, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 43, "current_iter_num": 0}}
INFO:root:[Training][Epoch 43] training time: 0.362 [sec],avg speed: 322068.728 [imgs/sec],loss=4.173
[Training][Epoch 43] training time: 0.362 [sec],avg speed: 322068.728 [imgs/sec],loss=4.173
:::MLLOG {"namespace": "", "time_ms": 1621374444658, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 322068.7278204826, "lr": 0.336, "loss": 4.173098018294887}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 43}}
:::MLLOG {"namespace": "", "time_ms": 1621374444658, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 322068.7278204826, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374444658, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 43}}
:::MLLOG {"namespace": "", "time_ms": 1621374444658, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 44, "current_iter_num": 0}}
loading annotations into memory...
Done (t=0.12s)
creating index...
Loading and preparing results...
DONE (t=0.24s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.76s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.01291
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.02921
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.01017
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.02817
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.02371
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.03350
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.03572
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.03572
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.23s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.68s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.05216
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.10782
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.04522
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.11267
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.08703
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.12093
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.12588
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.12588
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.26s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.68s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.07898
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.16409
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.06824
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.14958
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.11172
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.15735
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.16310
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.16310
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.30s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.72s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.09875
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.21047
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.08117
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.17226
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.12865
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.18388
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.19212
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.19212
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.24s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.68s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.12422
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.23937
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.11917
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.19973
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.14631
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.20775
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.21664
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.21664
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.24s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.65s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.13388
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.25831
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.12828
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.22345
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.15551
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.22745
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.23557
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.23557
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.34s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.79s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.14772
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.27650
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.14489
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.22941
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.16379
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.23586
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.24488
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.24488
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000:::MLLOG {"namespace": "", "time_ms": 1621374444823, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 40}}
:::MLLOG {"namespace": "", "time_ms": 1621374444823, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.14771583045734266, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 40}}
INFO:root:[Training][Iteration 1700][Epoch 44, Batch 23/39] lr: 0.33600, training time: 8.858 [ms], speed: 346806.906 [imgs/sec], loss=3.662
[Training][Iteration 1700][Epoch 44, Batch 23/39] lr: 0.33600, training time: 8.858 [ms], speed: 346806.906 [imgs/sec], loss=3.662
:::MLLOG {"namespace": "", "time_ms": 1621374444862, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 346806.9056754802, "loss": 3.6619489192962646}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [44, 1700]}}
:::MLLOG {"namespace": "", "time_ms": 1621374444862, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 346806.9056754802, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 44] training time: 0.350 [sec],avg speed: 333681.767 [imgs/sec],loss=4.309
[Training][Epoch 44] training time: 0.350 [sec],avg speed: 333681.767 [imgs/sec],loss=4.309
:::MLLOG {"namespace": "", "time_ms": 1621374445008, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 333681.7665538779, "lr": 0.336, "loss": 4.308969892953572}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 44}}
:::MLLOG {"namespace": "", "time_ms": 1621374445008, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 333681.7665538779, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374445008, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 44}}
:::MLLOG {"namespace": "", "time_ms": 1621374445009, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 45, "current_iter_num": 0}}
INFO:root:[Training][Epoch 45] training time: 0.324 [sec],avg speed: 360068.562 [imgs/sec],loss=3.918
[Training][Epoch 45] training time: 0.324 [sec],avg speed: 360068.562 [imgs/sec],loss=3.918
:::MLLOG {"namespace": "", "time_ms": 1621374445333, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 360068.5621298207, "lr": 0.336, "loss": 3.918491021582955}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 45}}
:::MLLOG {"namespace": "", "time_ms": 1621374445333, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 360068.5621298207, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374445333, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 45}}
:::MLLOG {"namespace": "", "time_ms": 1621374445343, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 45}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 41.313 [ms], allgather: 50.534 [ms], asnumpy: 5.354 [ms], speed: 51439.111 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 41.313 [ms], allgather: 50.534 [ms], asnumpy: 5.354 [ms], speed: 51439.111 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374445443, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 46, "current_iter_num": 0}}
INFO:root:[Training][Epoch 46] training time: 0.322 [sec],avg speed: 362542.453 [imgs/sec],loss=4.334
[Training][Epoch 46] training time: 0.322 [sec],avg speed: 362542.453 [imgs/sec],loss=4.334
:::MLLOG {"namespace": "", "time_ms": 1621374445765, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 362542.4529864091, "lr": 0.336, "loss": 4.333717641077544}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 46}}
:::MLLOG {"namespace": "", "time_ms": 1621374445765, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 362542.4529864091, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374445765, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 46}}
:::MLLOG {"namespace": "", "time_ms": 1621374445766, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 47, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1800][Epoch 47, Batch 6/39] lr: 0.33600, training time: 10.164 [ms], speed: 302240.181 [imgs/sec], loss=4.871
[Training][Iteration 1800][Epoch 47, Batch 6/39] lr: 0.33600, training time: 10.164 [ms], speed: 302240.181 [imgs/sec], loss=4.871
:::MLLOG {"namespace": "", "time_ms": 1621374445827, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 302240.18064960046, "loss": 4.870951175689697}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [47, 1800]}}
:::MLLOG {"namespace": "", "time_ms": 1621374445827, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 302240.18064960046, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 47] training time: 0.342 [sec],avg speed: 341457.345 [imgs/sec],loss=3.930
[Training][Epoch 47] training time: 0.342 [sec],avg speed: 341457.345 [imgs/sec],loss=3.930
:::MLLOG {"namespace": "", "time_ms": 1621374446108, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 341457.34470068646, "lr": 0.336, "loss": 3.930070203385855}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 47}}
:::MLLOG {"namespace": "", "time_ms": 1621374446108, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 341457.34470068646, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374446108, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 47}}
:::MLLOG {"namespace": "", "time_ms": 1621374446108, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 48, "current_iter_num": 0}}
INFO:root:[Training][Epoch 48] training time: 0.317 [sec],avg speed: 368806.123 [imgs/sec],loss=3.807
[Training][Epoch 48] training time: 0.317 [sec],avg speed: 368806.123 [imgs/sec],loss=3.807
:::MLLOG {"namespace": "", "time_ms": 1621374446425, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 368806.1233475796, "lr": 0.336, "loss": 3.8065161014858044}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 48}}
:::MLLOG {"namespace": "", "time_ms": 1621374446425, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 368806.1233475796, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374446425, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 48}}
:::MLLOG {"namespace": "", "time_ms": 1621374446425, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 49, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621374446453, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 45}}
:::MLLOG {"namespace": "", "time_ms": 1621374446454, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.16146788203204626, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 45}}
INFO:root:[Training][Iteration 1900][Epoch 49, Batch 28/39] lr: 0.33600, training time: 8.220 [ms], speed: 373735.020 [imgs/sec], loss=4.420
[Training][Iteration 1900][Epoch 49, Batch 28/39] lr: 0.33600, training time: 8.220 [ms], speed: 373735.020 [imgs/sec], loss=4.420
:::MLLOG {"namespace": "", "time_ms": 1621374446656, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 373735.0197331687, "loss": 4.420438289642334}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [49, 1900]}}
:::MLLOG {"namespace": "", "time_ms": 1621374446656, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 373735.0197331687, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 49] training time: 0.312 [sec],avg speed: 373740.542 [imgs/sec],loss=4.124
[Training][Epoch 49] training time: 0.312 [sec],avg speed: 373740.542 [imgs/sec],loss=4.124
:::MLLOG {"namespace": "", "time_ms": 1621374446738, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 373740.5419130275, "lr": 0.336, "loss": 4.124349286681728}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 49}}
:::MLLOG {"namespace": "", "time_ms": 1621374446738, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 373740.5419130275, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374446738, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 49}}
:::MLLOG {"namespace": "", "time_ms": 1621374446738, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 50, "current_iter_num": 0}}
INFO:root:[Training][Epoch 50] training time: 0.313 [sec],avg speed: 373391.966 [imgs/sec],loss=3.800
[Training][Epoch 50] training time: 0.313 [sec],avg speed: 373391.966 [imgs/sec],loss=3.800
:::MLLOG {"namespace": "", "time_ms": 1621374447051, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 373391.9663599211, "lr": 0.336, "loss": 3.799527042790463}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 50}}
:::MLLOG {"namespace": "", "time_ms": 1621374447051, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 373391.9663599211, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374447052, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 50}}
:::MLLOG {"namespace": "", "time_ms": 1621374447062, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 50}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 42.399 [ms], allgather: 27.193 [ms], asnumpy: 4.033 [ms], speed: 67910.754 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 42.399 [ms], allgather: 27.193 [ms], asnumpy: 4.033 [ms], speed: 67910.754 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374447137, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 51, "current_iter_num": 0}}
INFO:root:[Training][Epoch 51] training time: 0.313 [sec],avg speed: 372575.949 [imgs/sec],loss=4.172
[Training][Epoch 51] training time: 0.313 [sec],avg speed: 372575.949 [imgs/sec],loss=4.172
:::MLLOG {"namespace": "", "time_ms": 1621374447451, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 372575.9487918184, "lr": 0.336, "loss": 4.171876963816191}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 51}}
:::MLLOG {"namespace": "", "time_ms": 1621374447451, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 372575.9487918184, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374447451, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 51}}
:::MLLOG {"namespace": "", "time_ms": 1621374447451, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 52, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2000][Epoch 52, Batch 11/39] lr: 0.33600, training time: 8.907 [ms], speed: 344915.169 [imgs/sec], loss=5.432
[Training][Iteration 2000][Epoch 52, Batch 11/39] lr: 0.33600, training time: 8.907 [ms], speed: 344915.169 [imgs/sec], loss=5.432
:::MLLOG {"namespace": "", "time_ms": 1621374447549, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 344915.16866379185, "loss": 5.431790828704834}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [52, 2000]}}
:::MLLOG {"namespace": "", "time_ms": 1621374447550, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 344915.16866379185, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 52] training time: 0.312 [sec],avg speed: 374034.900 [imgs/sec],loss=4.150
[Training][Epoch 52] training time: 0.312 [sec],avg speed: 374034.900 [imgs/sec],loss=4.150
:::MLLOG {"namespace": "", "time_ms": 1621374447763, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 374034.9002161127, "lr": 0.336, "loss": 4.149953095536483}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 52}}
:::MLLOG {"namespace": "", "time_ms": 1621374447764, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 374034.9002161127, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374447764, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 52}}
:::MLLOG {"namespace": "", "time_ms": 1621374447764, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 53, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621374447973, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 50}}
:::MLLOG {"namespace": "", "time_ms": 1621374447973, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.1740490089233539, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 50}}
INFO:root:[Training][Epoch 53] training time: 0.327 [sec],avg speed: 357512.524 [imgs/sec],loss=4.016
[Training][Epoch 53] training time: 0.327 [sec],avg speed: 357512.524 [imgs/sec],loss=4.016
:::MLLOG {"namespace": "", "time_ms": 1621374448091, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 357512.52376279264, "lr": 0.336, "loss": 4.0161188715382625}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 53}}
:::MLLOG {"namespace": "", "time_ms": 1621374448091, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 357512.52376279264, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374448091, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 53}}
:::MLLOG {"namespace": "", "time_ms": 1621374448091, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 54, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2100][Epoch 54, Batch 33/39] lr: 0.33600, training time: 8.450 [ms], speed: 363552.680 [imgs/sec], loss=4.870
[Training][Iteration 2100][Epoch 54, Batch 33/39] lr: 0.33600, training time: 8.450 [ms], speed: 363552.680 [imgs/sec], loss=4.870
:::MLLOG {"namespace": "", "time_ms": 1621374448370, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 363552.68012455816, "loss": 4.870481967926025}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [54, 2100]}}
:::MLLOG {"namespace": "", "time_ms": 1621374448370, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 363552.68012455816, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 54] training time: 0.323 [sec],avg speed: 361027.008 [imgs/sec],loss=3.855
[Training][Epoch 54] training time: 0.323 [sec],avg speed: 361027.008 [imgs/sec],loss=3.855
:::MLLOG {"namespace": "", "time_ms": 1621374448415, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 361027.0075475371, "lr": 0.336, "loss": 3.8554357196155347}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 54}}
:::MLLOG {"namespace": "", "time_ms": 1621374448415, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 361027.0075475371, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374448415, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 54}}
:::MLLOG {"namespace": "", "time_ms": 1621374448415, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 55, "current_iter_num": 0}}
INFO:root:[Training][Epoch 55] training time: 0.336 [sec],avg speed: 347712.346 [imgs/sec],loss=4.011
[Training][Epoch 55] training time: 0.336 [sec],avg speed: 347712.346 [imgs/sec],loss=4.011
:::MLLOG {"namespace": "", "time_ms": 1621374448751, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 347712.34578478214, "lr": 0.336, "loss": 4.010952660911961}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 55}}
:::MLLOG {"namespace": "", "time_ms": 1621374448751, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 347712.34578478214, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374448751, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 55}}
:::MLLOG {"namespace": "", "time_ms": 1621374448761, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 55}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 41.257 [ms], allgather: 61.544 [ms], asnumpy: 4.510 [ms], speed: 46593.024 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 41.257 [ms], allgather: 61.544 [ms], asnumpy: 4.510 [ms], speed: 46593.024 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374448871, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 56, "current_iter_num": 0}}
INFO:root:[Training][Epoch 56] training time: 0.355 [sec],avg speed: 329208.766 [imgs/sec],loss=3.732
[Training][Epoch 56] training time: 0.355 [sec],avg speed: 329208.766 [imgs/sec],loss=3.732
:::MLLOG {"namespace": "", "time_ms": 1621374449226, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 329208.76588568947, "lr": 0.336, "loss": 3.7320082564102974}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 56}}
:::MLLOG {"namespace": "", "time_ms": 1621374449226, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 329208.76588568947, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374449226, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 56}}
:::MLLOG {"namespace": "", "time_ms": 1621374449226, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 57, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2200][Epoch 57, Batch 16/39] lr: 0.33600, training time: 8.565 [ms], speed: 358681.120 [imgs/sec], loss=2.571
[Training][Iteration 2200][Epoch 57, Batch 16/39] lr: 0.33600, training time: 8.565 [ms], speed: 358681.120 [imgs/sec], loss=2.571
:::MLLOG {"namespace": "", "time_ms": 1621374449363, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 358681.1203964034, "loss": 2.5710184574127197}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [57, 2200]}}
:::MLLOG {"namespace": "", "time_ms": 1621374449364, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 358681.1203964034, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 57] training time: 0.326 [sec],avg speed: 358473.663 [imgs/sec],loss=3.614
[Training][Epoch 57] training time: 0.326 [sec],avg speed: 358473.663 [imgs/sec],loss=3.614
:::MLLOG {"namespace": "", "time_ms": 1621374449552, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 358473.6633691202, "lr": 0.336, "loss": 3.613801244058107}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 57}}
:::MLLOG {"namespace": "", "time_ms": 1621374449552, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 358473.6633691202, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374449552, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 57}}
:::MLLOG {"namespace": "", "time_ms": 1621374449553, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 58, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621374449768, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 55}}
:::MLLOG {"namespace": "", "time_ms": 1621374449769, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.1748450742010771, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 55}}
INFO:root:[Training][Epoch 58] training time: 0.304 [sec],avg speed: 384088.386 [imgs/sec],loss=3.909
[Training][Epoch 58] training time: 0.304 [sec],avg speed: 384088.386 [imgs/sec],loss=3.909
:::MLLOG {"namespace": "", "time_ms": 1621374449857, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 384088.38559275167, "lr": 0.336, "loss": 3.9085606713044014}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 58}}
:::MLLOG {"namespace": "", "time_ms": 1621374449857, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 384088.38559275167, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374449857, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 58}}
:::MLLOG {"namespace": "", "time_ms": 1621374449857, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 59, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2300][Epoch 59, Batch 38/39] lr: 0.33600, training time: 8.163 [ms], speed: 376320.642 [imgs/sec], loss=4.765
[Training][Iteration 2300][Epoch 59, Batch 38/39] lr: 0.33600, training time: 8.163 [ms], speed: 376320.642 [imgs/sec], loss=4.765
:::MLLOG {"namespace": "", "time_ms": 1621374450167, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 376320.6422194348, "loss": 4.765445232391357}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [59, 2300]}}
:::MLLOG {"namespace": "", "time_ms": 1621374450168, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 376320.6422194348, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 59] training time: 0.311 [sec],avg speed: 375721.146 [imgs/sec],loss=3.670
[Training][Epoch 59] training time: 0.311 [sec],avg speed: 375721.146 [imgs/sec],loss=3.670
:::MLLOG {"namespace": "", "time_ms": 1621374450168, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 375721.1461826754, "lr": 0.336, "loss": 3.670142042009454}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 59}}
:::MLLOG {"namespace": "", "time_ms": 1621374450168, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 375721.1461826754, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374450168, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 59}}
:::MLLOG {"namespace": "", "time_ms": 1621374450168, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 60, "current_iter_num": 0}}
INFO:root:[Training][Epoch 60] training time: 0.353 [sec],avg speed: 330922.249 [imgs/sec],loss=3.641
[Training][Epoch 60] training time: 0.353 [sec],avg speed: 330922.249 [imgs/sec],loss=3.641
:::MLLOG {"namespace": "", "time_ms": 1621374450521, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 330922.24876096676, "lr": 0.336, "loss": 3.641300668841914}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 60}}
:::MLLOG {"namespace": "", "time_ms": 1621374450521, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 330922.24876096676, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374450521, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 60}}
:::MLLOG {"namespace": "", "time_ms": 1621374450532, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 60}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 41.991 [ms], allgather: 27.637 [ms], asnumpy: 4.190 [ms], speed: 67733.092 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 41.991 [ms], allgather: 27.637 [ms], asnumpy: 4.190 [ms], speed: 67733.092 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374450607, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 61, "current_iter_num": 0}}
INFO:root:[Training][Epoch 61] training time: 0.323 [sec],avg speed: 361126.862 [imgs/sec],loss=3.692
[Training][Epoch 61] training time: 0.323 [sec],avg speed: 361126.862 [imgs/sec],loss=3.692
:::MLLOG {"namespace": "", "time_ms": 1621374450931, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 361126.8616794596, "lr": 0.336, "loss": 3.691580643779353}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 61}}
:::MLLOG {"namespace": "", "time_ms": 1621374450931, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 361126.8616794596, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374450931, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 61}}
:::MLLOG {"namespace": "", "time_ms": 1621374450931, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 62, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2400][Epoch 62, Batch 21/39] lr: 0.33600, training time: 8.289 [ms], speed: 370599.625 [imgs/sec], loss=2.113
[Training][Iteration 2400][Epoch 62, Batch 21/39] lr: 0.33600, training time: 8.289 [ms], speed: 370599.625 [imgs/sec], loss=2.113
:::MLLOG {"namespace": "", "time_ms": 1621374451106, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 370599.6253338483, "loss": 2.113309860229492}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [62, 2400]}}
:::MLLOG {"namespace": "", "time_ms": 1621374451106, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 370599.6253338483, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 62] training time: 0.308 [sec],avg speed: 379604.098 [imgs/sec],loss=3.634
[Training][Epoch 62] training time: 0.308 [sec],avg speed: 379604.098 [imgs/sec],loss=3.634
:::MLLOG {"namespace": "", "time_ms": 1621374451239, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 379604.09769319155, "lr": 0.336, "loss": 3.6338397891897904}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621374451239, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 379604.09769319155, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374451239, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621374451240, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 63, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621374451474, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 60}}
:::MLLOG {"namespace": "", "time_ms": 1621374451475, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.1723192832169811, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 60}}
INFO:root:[Training][Epoch 63] training time: 0.324 [sec],avg speed: 360438.062 [imgs/sec],loss=3.982
[Training][Epoch 63] training time: 0.324 [sec],avg speed: 360438.062 [imgs/sec],loss=3.982
:::MLLOG {"namespace": "", "time_ms": 1621374451564, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 360438.06167753716, "lr": 0.336, "loss": 3.9816043878856457}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621374451564, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 360438.06167753716, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374451564, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621374451564, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 64, "current_iter_num": 0}}
INFO:root:[Training][Epoch 64] training time: 0.352 [sec],avg speed: 331315.461 [imgs/sec],loss=3.939
[Training][Epoch 64] training time: 0.352 [sec],avg speed: 331315.461 [imgs/sec],loss=3.939
:::MLLOG {"namespace": "", "time_ms": 1621374451916, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 331315.4614003688, "lr": 0.336, "loss": 3.9389680498524715}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 64}}
:::MLLOG {"namespace": "", "time_ms": 1621374451917, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 331315.4614003688, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374451917, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 64}}
:::MLLOG {"namespace": "", "time_ms": 1621374451917, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 65, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2500][Epoch 65, Batch 4/39] lr: 0.33600, training time: 7.976 [ms], speed: 385164.317 [imgs/sec], loss=2.646
[Training][Iteration 2500][Epoch 65, Batch 4/39] lr: 0.33600, training time: 7.976 [ms], speed: 385164.317 [imgs/sec], loss=2.646
:::MLLOG {"namespace": "", "time_ms": 1621374451949, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 385164.316742893, "loss": 2.646284341812134}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [65, 2500]}}
:::MLLOG {"namespace": "", "time_ms": 1621374451949, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 385164.316742893, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 65] training time: 0.305 [sec],avg speed: 383347.117 [imgs/sec],loss=4.107
[Training][Epoch 65] training time: 0.305 [sec],avg speed: 383347.117 [imgs/sec],loss=4.107
:::MLLOG {"namespace": "", "time_ms": 1621374452222, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 383347.1170210767, "lr": 0.336, "loss": 4.106732848443483}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 65}}
:::MLLOG {"namespace": "", "time_ms": 1621374452222, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 383347.1170210767, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374452222, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 65}}
:::MLLOG {"namespace": "", "time_ms": 1621374452232, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 65}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 41.426 [ms], allgather: 28.400 [ms], asnumpy: 4.867 [ms], speed: 66939.213 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 41.426 [ms], allgather: 28.400 [ms], asnumpy: 4.867 [ms], speed: 66939.213 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374452308, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 66, "current_iter_num": 0}}
INFO:root:[Training][Epoch 66] training time: 0.313 [sec],avg speed: 373508.751 [imgs/sec],loss=3.615
[Training][Epoch 66] training time: 0.313 [sec],avg speed: 373508.751 [imgs/sec],loss=3.615
:::MLLOG {"namespace": "", "time_ms": 1621374452620, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 373508.7507763851, "lr": 0.336, "loss": 3.6145102569931433}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 66}}
:::MLLOG {"namespace": "", "time_ms": 1621374452620, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 373508.7507763851, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374452621, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 66}}
:::MLLOG {"namespace": "", "time_ms": 1621374452621, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 67, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2600][Epoch 67, Batch 26/39] lr: 0.33600, training time: 7.804 [ms], speed: 393661.427 [imgs/sec], loss=3.409
[Training][Iteration 2600][Epoch 67, Batch 26/39] lr: 0.33600, training time: 7.804 [ms], speed: 393661.427 [imgs/sec], loss=3.409
:::MLLOG {"namespace": "", "time_ms": 1621374452824, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 393661.4270767235, "loss": 3.4094154834747314}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [67, 2600]}}
:::MLLOG {"namespace": "", "time_ms": 1621374452824, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 393661.4270767235, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 67] training time: 0.319 [sec],avg speed: 365572.798 [imgs/sec],loss=3.619
[Training][Epoch 67] training time: 0.319 [sec],avg speed: 365572.798 [imgs/sec],loss=3.619
:::MLLOG {"namespace": "", "time_ms": 1621374452940, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 365572.79835142684, "lr": 0.336, "loss": 3.6187029480934143}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 67}}
:::MLLOG {"namespace": "", "time_ms": 1621374452941, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 365572.79835142684, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374452941, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 67}}
:::MLLOG {"namespace": "", "time_ms": 1621374452941, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 68, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621374453219, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 65}}
:::MLLOG {"namespace": "", "time_ms": 1621374453219, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.18435888625540328, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 65}}
INFO:root:[Training][Epoch 68] training time: 0.297 [sec],avg speed: 392499.518 [imgs/sec],loss=3.855
[Training][Epoch 68] training time: 0.297 [sec],avg speed: 392499.518 [imgs/sec],loss=3.855
:::MLLOG {"namespace": "", "time_ms": 1621374453238, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 392499.51841546444, "lr": 0.336, "loss": 3.8548487989526046}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 68}}
:::MLLOG {"namespace": "", "time_ms": 1621374453239, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 392499.51841546444, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374453239, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 68}}
:::MLLOG {"namespace": "", "time_ms": 1621374453239, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 69, "current_iter_num": 0}}
INFO:root:[Training][Epoch 69] training time: 0.328 [sec],avg speed: 355937.551 [imgs/sec],loss=3.649
[Training][Epoch 69] training time: 0.328 [sec],avg speed: 355937.551 [imgs/sec],loss=3.649
:::MLLOG {"namespace": "", "time_ms": 1621374453567, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 355937.55124615075, "lr": 0.033600000000000005, "loss": 3.649269477317208}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 69}}
:::MLLOG {"namespace": "", "time_ms": 1621374453567, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 355937.55124615075, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374453567, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 69}}
:::MLLOG {"namespace": "", "time_ms": 1621374453567, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 70, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2700][Epoch 70, Batch 9/39] lr: 0.03360, training time: 7.881 [ms], speed: 389783.559 [imgs/sec], loss=5.057
[Training][Iteration 2700][Epoch 70, Batch 9/39] lr: 0.03360, training time: 7.881 [ms], speed: 389783.559 [imgs/sec], loss=5.057
:::MLLOG {"namespace": "", "time_ms": 1621374453638, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 389783.5594620667, "loss": 5.056663990020752}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [70, 2700]}}
:::MLLOG {"namespace": "", "time_ms": 1621374453639, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 389783.5594620667, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 70] training time: 0.306 [sec],avg speed: 381569.284 [imgs/sec],loss=3.364
[Training][Epoch 70] training time: 0.306 [sec],avg speed: 381569.284 [imgs/sec],loss=3.364
:::MLLOG {"namespace": "", "time_ms": 1621374453874, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 381569.2844977871, "lr": 0.033600000000000005, "loss": 3.3641709748067354}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 70}}
:::MLLOG {"namespace": "", "time_ms": 1621374453874, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 381569.2844977871, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374453874, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 70}}
:::MLLOG {"namespace": "", "time_ms": 1621374453885, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 70}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 40.369 [ms], allgather: 39.141 [ms], asnumpy: 4.466 [ms], speed: 59539.954 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 40.369 [ms], allgather: 39.141 [ms], asnumpy: 4.466 [ms], speed: 59539.954 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374453970, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 71, "current_iter_num": 0}}
INFO:root:[Training][Epoch 71] training time: 0.331 [sec],avg speed: 352825.822 [imgs/sec],loss=3.505
[Training][Epoch 71] training time: 0.331 [sec],avg speed: 352825.822 [imgs/sec],loss=3.505
:::MLLOG {"namespace": "", "time_ms": 1621374454301, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 352825.82159039815, "lr": 0.033600000000000005, "loss": 3.504766141113482}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 71}}
:::MLLOG {"namespace": "", "time_ms": 1621374454301, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 352825.82159039815, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374454301, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 71}}
:::MLLOG {"namespace": "", "time_ms": 1621374454301, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 72, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2800][Epoch 72, Batch 31/39] lr: 0.03360, training time: 8.422 [ms], speed: 364763.720 [imgs/sec], loss=3.361
[Training][Iteration 2800][Epoch 72, Batch 31/39] lr: 0.03360, training time: 8.422 [ms], speed: 364763.720 [imgs/sec], loss=3.361
:::MLLOG {"namespace": "", "time_ms": 1621374454562, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 364763.7202630399, "loss": 3.360809564590454}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [72, 2800]}}
:::MLLOG {"namespace": "", "time_ms": 1621374454563, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 364763.7202630399, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 72] training time: 0.316 [sec],avg speed: 369905.029 [imgs/sec],loss=3.408
[Training][Epoch 72] training time: 0.316 [sec],avg speed: 369905.029 [imgs/sec],loss=3.408
:::MLLOG {"namespace": "", "time_ms": 1621374454617, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 369905.0293687021, "lr": 0.033600000000000005, "loss": 3.4075516211359123}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 72}}
:::MLLOG {"namespace": "", "time_ms": 1621374454617, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 369905.0293687021, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374454617, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 72}}
:::MLLOG {"namespace": "", "time_ms": 1621374454617, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 73, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621374454871, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 70}}
:::MLLOG {"namespace": "", "time_ms": 1621374454871, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.22643163151901885, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 70}}
INFO:root:[Training][Epoch 73] training time: 0.313 [sec],avg speed: 372750.955 [imgs/sec],loss=3.387
[Training][Epoch 73] training time: 0.313 [sec],avg speed: 372750.955 [imgs/sec],loss=3.387
:::MLLOG {"namespace": "", "time_ms": 1621374454930, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 372750.955232698, "lr": 0.033600000000000005, "loss": 3.3870051158101937}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 73}}
:::MLLOG {"namespace": "", "time_ms": 1621374454931, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 372750.955232698, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374454931, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 73}}
:::MLLOG {"namespace": "", "time_ms": 1621374454931, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 74, "current_iter_num": 0}}
INFO:root:[Training][Epoch 74] training time: 0.307 [sec],avg speed: 380732.273 [imgs/sec],loss=3.239
[Training][Epoch 74] training time: 0.307 [sec],avg speed: 380732.273 [imgs/sec],loss=3.239
:::MLLOG {"namespace": "", "time_ms": 1621374455238, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 380732.27290569607, "lr": 0.033600000000000005, "loss": 3.238932069979216}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 74}}
:::MLLOG {"namespace": "", "time_ms": 1621374455238, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 380732.27290569607, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374455238, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 74}}
:::MLLOG {"namespace": "", "time_ms": 1621374455238, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 75, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2900][Epoch 75, Batch 14/39] lr: 0.03360, training time: 9.389 [ms], speed: 327195.242 [imgs/sec], loss=5.957
[Training][Iteration 2900][Epoch 75, Batch 14/39] lr: 0.03360, training time: 9.389 [ms], speed: 327195.242 [imgs/sec], loss=5.957
:::MLLOG {"namespace": "", "time_ms": 1621374455370, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 327195.2420055213, "loss": 5.9566426277160645}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [75, 2900]}}
:::MLLOG {"namespace": "", "time_ms": 1621374455370, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 327195.2420055213, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 75] training time: 0.320 [sec],avg speed: 364827.258 [imgs/sec],loss=3.315
[Training][Epoch 75] training time: 0.320 [sec],avg speed: 364827.258 [imgs/sec],loss=3.315
:::MLLOG {"namespace": "", "time_ms": 1621374455558, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 364827.2578577831, "lr": 0.033600000000000005, "loss": 3.314711503292385}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 75}}
:::MLLOG {"namespace": "", "time_ms": 1621374455558, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 364827.2578577831, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374455558, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 75}}
:::MLLOG {"namespace": "", "time_ms": 1621374455569, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 75}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 42.292 [ms], allgather: 28.272 [ms], asnumpy: 4.498 [ms], speed: 66610.934 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 42.292 [ms], allgather: 28.272 [ms], asnumpy: 4.498 [ms], speed: 66610.934 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374455644, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 76, "current_iter_num": 0}}
INFO:root:[Training][Epoch 76] training time: 0.366 [sec],avg speed: 318829.998 [imgs/sec],loss=3.299
[Training][Epoch 76] training time: 0.366 [sec],avg speed: 318829.998 [imgs/sec],loss=3.299
:::MLLOG {"namespace": "", "time_ms": 1621374456010, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 318829.99819886347, "lr": 0.033600000000000005, "loss": 3.2987436871779594}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 76}}
:::MLLOG {"namespace": "", "time_ms": 1621374456011, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 318829.99819886347, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374456011, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 76}}
:::MLLOG {"namespace": "", "time_ms": 1621374456011, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 77, "current_iter_num": 0}}
INFO:root:[Training][Iteration 3000][Epoch 77, Batch 36/39] lr: 0.03360, training time: 7.997 [ms], speed: 384135.327 [imgs/sec], loss=4.145
[Training][Iteration 3000][Epoch 77, Batch 36/39] lr: 0.03360, training time: 7.997 [ms], speed: 384135.327 [imgs/sec], loss=4.145
:::MLLOG {"namespace": "", "time_ms": 1621374456299, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 384135.3270119102, "loss": 4.144634246826172}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [77, 3000]}}
:::MLLOG {"namespace": "", "time_ms": 1621374456299, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 384135.3270119102, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 77] training time: 0.305 [sec],avg speed: 383287.999 [imgs/sec],loss=3.461
[Training][Epoch 77] training time: 0.305 [sec],avg speed: 383287.999 [imgs/sec],loss=3.461
:::MLLOG {"namespace": "", "time_ms": 1621374456316, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 383287.999129507, "lr": 0.033600000000000005, "loss": 3.461419723535839}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 77}}
:::MLLOG {"namespace": "", "time_ms": 1621374456316, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 383287.999129507, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374456316, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 77}}
:::MLLOG {"namespace": "", "time_ms": 1621374456316, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 78, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621374456534, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 75}}
:::MLLOG {"namespace": "", "time_ms": 1621374456534, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.2300986019892594, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 75}}
INFO:root:[Training][Epoch 78] training time: 0.331 [sec],avg speed: 352216.682 [imgs/sec],loss=3.200
[Training][Epoch 78] training time: 0.331 [sec],avg speed: 352216.682 [imgs/sec],loss=3.200
:::MLLOG {"namespace": "", "time_ms": 1621374456648, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 352216.68202064844, "lr": 0.033600000000000005, "loss": 3.199779921456387}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 78}}
:::MLLOG {"namespace": "", "time_ms": 1621374456648, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 352216.68202064844, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374456648, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 78}}
:::MLLOG {"namespace": "", "time_ms": 1621374456648, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 547, "status": "success"}}
INFO:root:Rank 0 done. map=23.009860198925942 @ epoch=75
Rank 0 done. map=23.009860198925942 @ epoch=75

Loading and preparing results...
DONE (t=0.28s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.70s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.16147
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.29919
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.15698
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.24009
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.17191
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.24809
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.25730
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.25730
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.20s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.61s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.17405
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.31565
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.17256
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.26370
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.18513
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.26663
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.27522
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.27522
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.23s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.65s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.17485
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.31576
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.17405
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.25703
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.18416
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.26428
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.27372
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.27372
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.21s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.63s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.17232
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.31288
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.17316
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.25841
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.18189
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.26199
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.27128
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.27128
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.24s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.65s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.18436
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.32831
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.18712
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.26308
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.18983
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.27390
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.28456
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.28456
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.23s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.64s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.22643
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.38498
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.23232
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.30633
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.21865
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.31261
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.32332
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.32332
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.23s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.63s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.23010
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.38947
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.23669
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.31010
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.22121
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.31698
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.32740
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.32740
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-18 02:47:54 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:55 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
ENDING TIMING RUN AT 2021-05-18 02:47:56 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
ENDING TIMING RUN AT 2021-05-18 02:47:57 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:40:43 PM
