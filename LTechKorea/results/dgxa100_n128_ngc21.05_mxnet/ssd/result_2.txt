+ echo 'Beginning trial 5 of 5'
Beginning trial 5 of 5
+ srun -N1 -n1 --container-name=single_stage_detector python -c '
import mlperf_log_utils
from mlperf_logging.mllog import constants
mlperf_log_utils.mlperf_submission_log(constants.SSD)'
:::MLLOG {"namespace": "", "time_ms": 1621374918872, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "ssd", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 73}}
:::MLLOG {"namespace": "", "time_ms": 1621374918878, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "NVIDIA", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 78}}
:::MLLOG {"namespace": "", "time_ms": 1621374918878, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 82}}
:::MLLOG {"namespace": "", "time_ms": 1621374918878, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 86}}
:::MLLOG {"namespace": "", "time_ms": 1621374918879, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "128xNVIDIA DGX A100", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 90}}
+ '[' 1 -eq 1 ']'
+ srun --ntasks=128 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on luna-0497
Clearing cache on luna-0500
Clearing cache on luna-0547
Clearing cache on luna-0550
Clearing cache on luna-0060
Clearing cache on luna-0231
Clearing cache on luna-0244
Clearing cache on luna-0064
Clearing cache on luna-0250
Clearing cache on luna-0041
Clearing cache on luna-0050
Clearing cache on luna-0542
Clearing cache on luna-0498
Clearing cache on luna-0229
Clearing cache on luna-0406
Clearing cache on luna-0045
Clearing cache on luna-0548
Clearing cache on luna-0058
Clearing cache on luna-0545
Clearing cache on luna-0065
Clearing cache on luna-0048
Clearing cache on luna-0243
Clearing cache on luna-0543
Clearing cache on luna-0043
Clearing cache on luna-0496
Clearing cache on luna-0046
Clearing cache on luna-0239
Clearing cache on luna-0246
Clearing cache on luna-0549
Clearing cache on luna-0401
Clearing cache on luna-0057
Clearing cache on luna-0553
Clearing cache on luna-0234
Clearing cache on luna-0485
Clearing cache on luna-0055
Clearing cache on luna-0324
Clearing cache on luna-0495
Clearing cache on luna-0051
Clearing cache on luna-0554
Clearing cache on luna-0252
Clearing cache on luna-0552
Clearing cache on luna-0049
Clearing cache on luna-0258
Clearing cache on luna-0487
Clearing cache on luna-0059
Clearing cache on luna-0256
Clearing cache on luna-0494
Clearing cache on luna-0225
Clearing cache on luna-0253
Clearing cache on luna-0044
Clearing cache on luna-0408
Clearing cache on luna-0323
Clearing cache on luna-0240
Clearing cache on luna-0247
Clearing cache on luna-0412
Clearing cache on luna-0228
Clearing cache on luna-0544
Clearing cache on luna-0335
Clearing cache on luna-0415
Clearing cache on luna-0054
Clearing cache on luna-0062
Clearing cache on luna-0232
Clearing cache on luna-0551
Clearing cache on luna-0042
Clearing cache on luna-0248
Clearing cache on luna-0242
Clearing cache on luna-0226
Clearing cache on luna-0238
Clearing cache on luna-0489
Clearing cache on luna-0251
Clearing cache on luna-0557
Clearing cache on luna-0336
Clearing cache on luna-0560
Clearing cache on luna-0419
Clearing cache on luna-0418
Clearing cache on luna-0405
Clearing cache on luna-0488
Clearing cache on luna-0047
Clearing cache on luna-0559
Clearing cache on luna-0556
Clearing cache on luna-0334
Clearing cache on luna-0328
Clearing cache on luna-0066
Clearing cache on luna-0227
Clearing cache on luna-0546
Clearing cache on luna-0499
Clearing cache on luna-0414
Clearing cache on luna-0555
Clearing cache on luna-0322
Clearing cache on luna-0056
Clearing cache on luna-0331
Clearing cache on luna-0052
Clearing cache on luna-0230
Clearing cache on luna-0420
Clearing cache on luna-0063
Clearing cache on luna-0233
Clearing cache on luna-0558
Clearing cache on luna-0325
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
Clearing cache on luna-0417
Clearing cache on luna-0236
Clearing cache on luna-0490
Clearing cache on luna-0326
Clearing cache on luna-0491
Clearing cache on luna-0260
Clearing cache on luna-0237
Clearing cache on luna-0332
Clearing cache on luna-0410
Clearing cache on luna-0235
Clearing cache on luna-0254
Clearing cache on luna-0413
Clearing cache on luna-0321
Clearing cache on luna-0245
Clearing cache on luna-0257
Clearing cache on luna-0403
Clearing cache on luna-0416
Clearing cache on luna-0330
Clearing cache on luna-0333
Clearing cache on luna-0327
Clearing cache on luna-0492
Clearing cache on luna-0486
Clearing cache on luna-0402
Clearing cache on luna-0329
Clearing cache on luna-0404
Clearing cache on luna-0411
Clearing cache on luna-0249
Clearing cache on luna-0255
Clearing cache on luna-0493
Clearing cache on luna-0407
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
+ srun --ntasks=128 --container-name=single_stage_detector python -c '
from mlperf_logging.mllog import constants
from mlperf_log_utils import log_event
log_event(key=constants.CACHE_CLEAR, value=True)'
:::MLLOG {"namespace": "", "time_ms": 1621374922888, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 4}}
+ srun --mpi=pmix --ntasks=1024 --ntasks-per-node=8 --container-name=single_stage_detector --container-mounts=/raid/datasets/coco/coco-2017:/data,/lustre/fsw/mlperf-ci/23336737/results:/results,/raid/datasets/coco/coco-2017/coco2017/models:/pretrained/mxnet ./run_and_time.sh
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 5 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 5 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 6 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 3 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
running benchmark
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 3 ']'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ cluster=
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ echo 'running benchmark'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ PARAMS+=(--async-val)
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
running benchmark
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ declare -a CMD
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 1 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ '[' -n 3 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 5 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 1 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 3 ']'
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ ASYNC_EVAL=1
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ASYNC_EVAL=1
running benchmark
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ cluster=
+ '[' '' = apiLog.sh ']'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=selene
+ declare -a CMD
running benchmark
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' -n 6 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' -n 7 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=
+ DATASET_SIZE=117266
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ LOG_INTERVAL=100
running benchmark
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
running benchmark
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ echo 'running benchmark'
running benchmark
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
running benchmark
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' -n 6 ']'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' 1024 -gt 128 ']'
running benchmark
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 3 ']'
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ PARAMS+=(--async-val)
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ cluster=
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ '[' -n 2 ']'
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 4 ']'
+ '[' -n 5 ']'
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' 1024 -gt 128 ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' '' = apiLog.sh ']'
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ '[' -n 2 ']'
running benchmark
+ declare -a CMD
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ DATA_LAYOUT=NHWC
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' -n 7 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PARAMS+=(--async-val)
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' -n 2 ']'
+ cluster=
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' 1024 -gt 128 ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' -n 2 ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ LOG_INTERVAL=100
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 4 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ declare -a CMD
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ '[' -n 7 ']'
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PARAMS+=(--async-val)
running benchmark
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' -n 1 ']'
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ BATCHSIZE=3
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ LOG_INTERVAL=100
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ declare -a CMD
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' -n 5 ']'
+ '[' -n 2 ']'
running benchmark
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ cluster=
running benchmark
+ '[' -n 4 ']'
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' -n 2 ']'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' '' = apiLog.sh ']'
running benchmark
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ DATASET_DIR=/data/coco2017
running benchmark
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PARAMS+=(--async-val)
running benchmark
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' -n 6 ']'
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' '' = apiLog.sh ']'
running benchmark
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ DATASET_DIR=/data/coco2017
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
running benchmark
+ ASYNC_EVAL=1
running benchmark
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ EVALBATCHSIZE=5
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ NUMEPOCHS=90
running benchmark
+ '[' -n 6 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ declare -a CMD
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ LOG_INTERVAL=100
running benchmark
+ '[' -n 3 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ASYNC_EVAL=1
running benchmark
+ PARAMS+=(--async-val)
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ echo 'running benchmark'
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' -n 6 ']'
running benchmark
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ cluster=
running benchmark
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' -n 3 ']'
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ '[' 1024 -gt 128 ']'
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' '' = apiLog.sh ']'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' 1024 -gt 128 ']'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ ASYNC_EVAL=1
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
running benchmark
+ declare -a CMD
+ PARAMS+=(--async-val)
running benchmark
+ '[' -n 0 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PARAMS+=(--async-val)
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ NUMEPOCHS=90
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ LOG_INTERVAL=100
running benchmark
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ echo 'running benchmark'
running benchmark
+ EVAL_DATASET_SIZE=5000
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ '[' -n 2 ']'
running benchmark
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ cluster=
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ 1 -eq 1 ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' -n 7 ']'
running benchmark
+ PARAMS+=(--async-val)
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ EVALBATCHSIZE=5
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ DATASET_DIR=/data/coco2017
+ '[' -n 7 ']'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
running benchmark
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
running benchmark
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ EVAL_DATASET_SIZE=5000
+ '[' -n 6 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ '[' -n 5 ']'
+ cluster=
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
running benchmark
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ '[' -n 4 ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ cluster=
+ DATA_LAYOUT=NHWC
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ BATCHSIZE=3
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 3 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
running benchmark
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ '[' -n 7 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ cluster=
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ '[' -n 0 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
running benchmark
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ '[' -n 4 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PARAMS+=(--async-val)
+ '[' -n 5 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ 1 -eq 1 ]]
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
running benchmark
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
running benchmark
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
running benchmark
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ '[' -n 5 ']'
+ EVALBATCHSIZE=5
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ BATCHSIZE=3
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 1 ']'
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 1 ']'
running benchmark
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ cluster=selene
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ echo 'running benchmark'
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 0 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' -n 0 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ cluster=
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ '[' -n 5 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 0 ']'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ cluster=
+ '[' -n 2 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ cluster=
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 2 ']'
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 0 ']'
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
running benchmark
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
running benchmark
+ DATASET_DIR=/data/coco2017
+ '[' -n 1 ']'
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ echo 'running benchmark'
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
running benchmark
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ cluster=
+ '[' -n 3 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ cluster=selene
+ NUMEPOCHS=90
+ cluster=selene
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
running benchmark
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
+ '[' -n 6 ']'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 2 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
running benchmark
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
running benchmark
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
running benchmark
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ declare -a CMD
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 4 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 2 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ echo 'running benchmark'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ DATA_LAYOUT=NHWC
+ EVALBATCHSIZE=5
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ '[' -n 6 ']'
+ declare -a CMD
running benchmark
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ cluster=
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 6 ']'
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 3 ']'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ cluster=
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=selene
running benchmark
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ 1 -eq 1 ]]
+ '[' -n 3 ']'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 5 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ NUMEPOCHS=90
+ declare -a CMD
+ cluster=
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ echo 'running benchmark'
running benchmark
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
running benchmark
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ '[' -n 1 ']'
+ NUMEPOCHS=90
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ cluster=
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 6 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ DATA_LAYOUT=NHWC
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
running benchmark
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ '[' -n 4 ']'
+ declare -a CMD
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ '[' -n 1 ']'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 3 ']'
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 5 ']'
running benchmark
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 6 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
running benchmark
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 5 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ ASYNC_EVAL=1
+ declare -a CMD
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 5 ']'
+ DATASET_DIR=/data/coco2017
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ PARAMS+=(--async-val)
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ASYNC_EVAL=1
running benchmark
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
running benchmark
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
running benchmark
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 7 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
running benchmark
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
running benchmark
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ cluster=
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 7 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ DATA_LAYOUT=NHWC
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
running benchmark
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ cluster=
+ DATASET_SIZE=117266
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 4 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
running benchmark
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
running benchmark
+ cluster=
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ cluster=
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 1 ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
running benchmark
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' -n 0 ']'
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 0 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ [[ 1 -eq 1 ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 6 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ '[' -n 7 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ cluster=
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ [[ 1 -eq 1 ]]
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ cluster=
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 4 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ '[' -n 4 ']'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ declare -a CMD
+ ASYNC_EVAL=1
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 4 ']'
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ '[' -n 7 ']'
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ '[' -n 2 ']'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ cluster=
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ '[' -n 7 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
running benchmark
+ ASYNC_EVAL=1
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
running benchmark
+ BATCHSIZE=3
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ declare -a CMD
+ NUMEPOCHS=90
+ '[' -n 4 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 2 ']'
+ LOG_INTERVAL=100
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ NUMEPOCHS=90
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ DATA_LAYOUT=NHWC
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
running benchmark
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ echo 'running benchmark'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ASYNC_EVAL=1
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 1 ']'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ '[' -n 6 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ '[' -n 7 ']'
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ cluster=
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ '[' -n 5 ']'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ '[' -n 5 ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 7 ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
running benchmark
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ '[' -n 1 ']'
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ BATCHSIZE=3
+ '[' -n 3 ']'
+ EVALBATCHSIZE=5
+ declare -a CMD
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ cluster=
+ DATA_LAYOUT=NHWC
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ cluster=
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' '' = apiLog.sh ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
running benchmark
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ BATCHSIZE=3
+ DATASET_DIR=/data/coco2017
+ '[' -n 0 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 0 ']'
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
running benchmark
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
running benchmark
+ BATCHSIZE=3
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ '[' 1024 -gt 128 ']'
+ '[' -n 4 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 7 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ BATCHSIZE=3
+ '[' -n 4 ']'
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ cluster=
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
running benchmark
+ declare -a CMD
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ '[' -n 4 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ '[' -n 1 ']'
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ declare -a CMD
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
running benchmark
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 0 ']'
+ PARAMS+=(--async-val)
+ '[' -n 6 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ declare -a CMD
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 3 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
running benchmark
+ BATCHSIZE=3
+ DATA_LAYOUT=NHWC
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
running benchmark
+ NUMEPOCHS=90
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ '[' -n 0 ']'
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ cluster=
running benchmark
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ '[' -n 6 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
running benchmark
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ '[' -n 5 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
running benchmark
+ declare -a CMD
+ '[' -n 5 ']'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
running benchmark
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVAL_DATASET_SIZE=5000
+ EVALBATCHSIZE=5
running benchmark
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
running benchmark
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 5 ']'
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ '[' -n 1 ']'
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 6 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ cluster=
+ '[' -n 7 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
running benchmark
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 5 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 2 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ cluster=
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 0 ']'
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
running benchmark
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' -n 2 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ '[' -n 2 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ '[' -n 7 ']'
+ ASYNC_EVAL=1
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ cluster=
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 6 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
running benchmark
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 4 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ '[' -n 3 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
running benchmark
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 3 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ EVALBATCHSIZE=5
+ declare -a CMD
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ '[' -n 2 ']'
running benchmark
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ ASYNC_EVAL=1
+ '[' -n 2 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ '[' -n 0 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS+=(--async-val)
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 2 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ cluster=
+ declare -a CMD
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ '[' -n 1 ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
running benchmark
+ cluster=
+ '[' -n 2 ']'
running benchmark
+ EVAL_DATASET_SIZE=5000
running benchmark
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
running benchmark
+ '[' -n 3 ']'
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ '[' -n 6 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ '[' -n 2 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
running benchmark
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ declare -a CMD
running benchmark
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 4 ']'
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ '[' -n 3 ']'
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ '[' -n 5 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVALBATCHSIZE=5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ '[' -n 1 ']'
+ ASYNC_EVAL=1
+ '[' -n 2 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=
+ '[' -n 6 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
running benchmark
+ cluster=
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 0 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ EVAL_DATASET_SIZE=5000
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
running benchmark
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ '[' -n 1 ']'
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ echo 'running benchmark'
+ cluster=
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 0 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 0 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
running benchmark
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 4 ']'
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ cluster=
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' -n 7 ']'
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ declare -a CMD
+ cluster=
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ EVALBATCHSIZE=5
+ '[' -n 3 ']'
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 3 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ '[' -n 4 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 6 ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 2 ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 7 ']'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' -n 7 ']'
+ '[' -n 3 ']'
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ cluster=
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ '[' -n 1 ']'
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ cluster=
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 4 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ cluster=selene
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ LOG_INTERVAL=100
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 0 ']'
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
running benchmark
+ DATASET_DIR=/data/coco2017
+ cluster=
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ '[' -n 6 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 3 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
running benchmark
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' -n 4 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
running benchmark
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 0 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ '[' -n 6 ']'
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
running benchmark
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ NUMEPOCHS=90
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ '[' -n 1 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 7 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ '[' -n 5 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ cluster=
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 0 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 3 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' -n 7 ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 1 ']'
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 6 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ '[' -n 1 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ '[' -n 4 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
running benchmark
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_SIZE=117266
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 3 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ declare -a CMD
+ DATASET_SIZE=117266
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ PARAMS+=(--async-val)
+ declare -a CMD
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ '[' -n 1 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ '[' -n 7 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' -n 2 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ echo 'running benchmark'
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
running benchmark
+ '[' -n 0 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ declare -a CMD
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
running benchmark
+ declare -a CMD
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ BATCHSIZE=3
+ PARAMS+=(--async-val)
+ '[' -n 4 ']'
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ cluster=
+ LOG_INTERVAL=100
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ '[' -n 1 ']'
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' -n 7 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ '[' -n 5 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ cluster=
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ '[' -n 3 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
running benchmark
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
running benchmark
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
running benchmark
+ '[' -n 2 ']'
+ '[' -n 0 ']'
+ '[' -n 7 ']'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 7 ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 5 ']'
running benchmark
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' -n 5 ']'
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
running benchmark
+ declare -a CMD
+ '[' -n 0 ']'
+ echo 'running benchmark'
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 0 ']'
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 6 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
running benchmark
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 3 ']'
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ '[' -n 1 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
running benchmark
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ declare -a CMD
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 4 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ '[' -n 6 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
running benchmark
+ declare -a CMD
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 3 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ echo 'running benchmark'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ declare -a CMD
+ declare -a CMD
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 0 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 2 ']'
+ '[' -n 0 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' -n 2 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ '[' -n 3 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
running benchmark
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 6 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ '[' -n 1 ']'
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 2 ']'
+ '[' -n 7 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ '[' -n 0 ']'
running benchmark
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 6 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
+ '[' -n 5 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
running benchmark
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ cluster=
+ declare -a CMD
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ LOG_INTERVAL=100
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 7 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ cluster=
+ '[' -n 2 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ 1 -eq 1 ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ '[' -n 3 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ '[' -n 7 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ '[' -n 4 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 3 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ 1 -eq 1 ]]
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ PARAMS+=(--async-val)
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
running benchmark
+ NUMEPOCHS=90
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ declare -a CMD
+ '[' -n 5 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ cluster=
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ ASYNC_EVAL=1
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ '[' -n 3 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ '[' -n 7 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
running benchmark
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ '[' -n 0 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_SIZE=117266
running benchmark
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ '[' -n 0 ']'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ '[' -n 2 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ declare -a CMD
+ declare -a CMD
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ echo 'running benchmark'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 4 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
running benchmark
+ BATCHSIZE=3
+ ASYNC_EVAL=1
running benchmark
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ NUMEPOCHS=90
running benchmark
+ declare -a CMD
+ BATCHSIZE=3
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ '[' -n 1 ']'
+ '[' -n 0 ']'
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ '[' -n 1 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 7 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' -n 5 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' -n 3 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ cluster=
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ '[' -n 6 ']'
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
running benchmark
+ declare -a CMD
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ '[' -n 0 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 6 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ declare -a CMD
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ declare -a CMD
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 1 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 3 ']'
running benchmark
+ NUMEPOCHS=90
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
running benchmark
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 2 ']'
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ echo 'running benchmark'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ LOG_INTERVAL=100
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ DATA_LAYOUT=NHWC
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 4 ']'
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 4 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' -n 2 ']'
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ declare -a CMD
running benchmark
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ LOG_INTERVAL=100
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ '[' -n 5 ']'
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ cluster=
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 7 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
running benchmark
+ PARAMS+=(--async-val)
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ declare -a CMD
running benchmark
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 0 ']'
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ echo 'running benchmark'
+ '[' -n 3 ']'
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
running benchmark
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
running benchmark
+ DATA_LAYOUT=NHWC
running benchmark
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ '[' -n 4 ']'
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 6 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ declare -a CMD
+ declare -a CMD
+ '[' -n 0 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 5 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 2 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 4 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 1 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ LOG_INTERVAL=100
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
running benchmark
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' -n 7 ']'
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ cluster=
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ '[' -n 2 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 1 ']'
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
running benchmark
+ DATA_LAYOUT=NHWC
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 3 ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ DATASET_DIR=/data/coco2017
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
running benchmark
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ echo 'running benchmark'
running benchmark
+ cluster=
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ 1 -eq 1 ]]
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
running benchmark
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
running benchmark
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ '[' -n 4 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 6 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ '[' -n 3 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 7 ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 7 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' -n 6 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 3 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ '[' -n 4 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 1 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 0 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 6 ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ cluster=
+ LOG_INTERVAL=100
running benchmark
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 5 ']'
+ PARAMS+=(--async-val)
running benchmark
+ '[' 1024 -gt 128 ']'
+ '[' -n 2 ']'
running benchmark
+ cluster=
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ declare -a CMD
+ LOG_INTERVAL=100
+ '[' -n 2 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
running benchmark
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 6 ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 5 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 4 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
running benchmark
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ LOG_INTERVAL=100
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ '[' -n 1 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ '[' -n 3 ']'
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ NUMEPOCHS=90
+ cluster=selene
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ '[' -n 4 ']'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 1 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ cluster=selene
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 3 ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ '[' -n 5 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
running benchmark
+ cluster=
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ declare -a CMD
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 5 ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ LOG_INTERVAL=100
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ '[' -n 7 ']'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
running benchmark
+ '[' -n 1 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ cluster=
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ DATASET_SIZE=117266
+ '[' -n 0 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ cluster=
+ DATA_LAYOUT=NHWC
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 0 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 6 ']'
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 0 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ echo 'running benchmark'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 2 ']'
+ declare -a CMD
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 2 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ echo 'running benchmark'
+ '[' -n 5 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' -n 4 ']'
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 0 ']'
+ '[' '' = apiLog.sh ']'
+ '[' -n 4 ']'
+ cluster=
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ '[' -n 6 ']'
+ PARAMS+=(--async-val)
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 3 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 1 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ declare -a CMD
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 2 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATA_LAYOUT=NHWC
+ '[' -n 6 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' -n 6 ']'
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 7 ']'
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
running benchmark
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' -n 0 ']'
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 7 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ '[' -n 6 ']'
+ '[' -n 5 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 3 ']'
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ '[' -n 7 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' 1024 -gt 128 ']'
running benchmark
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 1 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
running benchmark
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 1 ']'
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 5 ']'
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ ASYNC_EVAL=1
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ '[' -n 0 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ '[' -n 5 ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 3 ']'
+ cluster=
+ '[' -n 6 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ '[' -n 7 ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' 1024 -gt 128 ']'
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 7 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 1 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ declare -a CMD
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 2 ']'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ cluster=
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 0 ']'
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 0 ']'
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
running benchmark
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 4 ']'
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ DATASET_DIR=/data/coco2017
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
running benchmark
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
running benchmark
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 7 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' -n 2 ']'
+ PARAMS+=(--async-val)
+ '[' -n 3 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 6 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ 1 -eq 1 ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS+=(--async-val)
running benchmark
+ '[' -n 2 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 3 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 4 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 1 ']'
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
running benchmark
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 4 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 6 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
running benchmark
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ declare -a CMD
+ '[' -n 0 ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 0 ']'
+ NUMEPOCHS=90
+ '[' -n 7 ']'
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
running benchmark
+ cluster=
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ declare -a CMD
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
running benchmark
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
running benchmark
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' -n 4 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
running benchmark
+ DATASET_DIR=/data/coco2017
+ '[' -n 3 ']'
+ '[' -n 5 ']'
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
running benchmark
+ BATCHSIZE=3
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 4 ']'
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
running benchmark
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
running benchmark
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ cluster=
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 6 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ cluster=
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' -n 3 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ echo 'running benchmark'
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
running benchmark
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ EVALBATCHSIZE=5
+ declare -a CMD
+ LOG_INTERVAL=100
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
running benchmark
+ '[' -n 1 ']'
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
running benchmark
+ PARAMS+=(--async-val)
running benchmark
+ ASYNC_EVAL=1
running benchmark
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 5 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ '[' -n 0 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 1 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVALBATCHSIZE=5
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
running benchmark
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ cluster=
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ LOG_INTERVAL=100
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ '[' -n 2 ']'
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ cluster=
+ LOG_INTERVAL=100
+ declare -a CMD
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_DIR=/data/coco2017
+ '[' -n 6 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' -n 4 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 3 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 0 ']'
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ '[' -n 6 ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ echo 'running benchmark'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ASYNC_EVAL=1
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' 1024 -gt 128 ']'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' -n 7 ']'
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ cluster=
running benchmark
+ DATA_LAYOUT=NHWC
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 2 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 3 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
running benchmark
+ declare -a CMD
+ LOG_INTERVAL=100
+ '[' -n 5 ']'
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
running benchmark
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
running benchmark
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ NUMEPOCHS=90
running benchmark
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 6 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=selene
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 7 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
running benchmark
+ '[' -n 2 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ 1 -eq 1 ]]
+ cluster=
+ '[' -n 5 ']'
+ PARAMS+=(--async-val)
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
running benchmark
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 2 ']'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ cluster=
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 4 ']'
+ [[ 1 -eq 1 ]]
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ cluster=
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
running benchmark
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ ASYNC_EVAL=1
+ '[' -n 6 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 2 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 0 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ '[' -n 5 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=
running benchmark
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ '[' -n 7 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' -n 0 ']'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ '[' -n 6 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ EVALBATCHSIZE=5
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' -n 1 ']'
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ EVALBATCHSIZE=5
running benchmark
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ cluster=
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
running benchmark
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
running benchmark
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 2 ']'
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ cluster=
+ ASYNC_EVAL=1
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ LOG_INTERVAL=100
+ '[' -n 0 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
running benchmark
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 6 ']'
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ 1 -eq 1 ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ NUMEPOCHS=90
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 1 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 3 ']'
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 6 ']'
+ ASYNC_EVAL=1
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ '[' -n 2 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' -n 3 ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:55:23 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ '[' -n 0 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 0 ']'
running benchmark
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ '[' -n 3 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 3 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 1 ']'
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ echo 'running benchmark'
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ declare -a CMD
+ NUMEPOCHS=90
+ '[' -n 1 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 4 ']'
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 2 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 0 ']'
+ '[' -n 0 ']'
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 6 ']'
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ '[' -n 5 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 1 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 5 ']'
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
running benchmark
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
running benchmark
+ echo 'running benchmark'
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS+=(--async-val)
+ declare -a CMD
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 7 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ '[' -n 3 ']'
+ BATCHSIZE=3
+ DATASET_SIZE=117266
running benchmark
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ '[' -n 5 ']'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ '[' -n 1 ']'
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ declare -a CMD
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 3 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 0 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' 1024 -gt 128 ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ '[' -n 6 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 6 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ '[' -n 3 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
running benchmark
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ DATASET_SIZE=117266
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 0 ']'
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ NUMEPOCHS=90
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ '[' -n 7 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ cluster=
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ '[' -n 3 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
running benchmark
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ declare -a CMD
+ LOG_INTERVAL=100
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 5 ']'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 7 ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
running benchmark
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ ASYNC_EVAL=1
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ EVALBATCHSIZE=5
+ cluster=
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
running benchmark
+ declare -a CMD
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATA_LAYOUT=NHWC
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ echo 'running benchmark'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 4 ']'
running benchmark
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 5 ']'
+ LOG_INTERVAL=100
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
running benchmark
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' -n 6 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ cluster=
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ '[' -n 1 ']'
+ echo 'running benchmark'
+ cluster=
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ '[' -n 4 ']'
+ declare -a CMD
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 7 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' -n 2 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ EVALBATCHSIZE=5
+ declare -a CMD
+ '[' -n 6 ']'
+ cluster=
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
running benchmark
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ DATASET_DIR=/data/coco2017
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
running benchmark
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 0 ']'
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ declare -a CMD
running benchmark
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ NUMEPOCHS=90
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ declare -a CMD
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ '[' -n 6 ']'
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ cluster=
+ DATA_LAYOUT=NHWC
running benchmark
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ BATCHSIZE=3
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ NUMEPOCHS=90
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ LOG_INTERVAL=100
running benchmark
+ '[' 1024 -gt 128 ']'
running benchmark
+ DATASET_SIZE=117266
+ cluster=
+ '[' -n 5 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ '[' -n 1 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ BATCHSIZE=3
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' -n 2 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ declare -a CMD
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ '[' -n 0 ']'
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ '[' -n 2 ']'
running benchmark
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' -n 5 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 5 ']'
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' -n 0 ']'
running benchmark
+ PARAMS+=(--async-val)
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATA_LAYOUT=NHWC
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 6 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 3 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=selene
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ cluster=
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ DATASET_DIR=/data/coco2017
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
running benchmark
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ '[' -n 1 ']'
+ '[' -n 4 ']'
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' -n 0 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
running benchmark
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ '[' -n 0 ']'
running benchmark
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 0 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ DATASET_DIR=/data/coco2017
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ BATCHSIZE=3
+ '[' -n 5 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ cluster=
running benchmark
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ cluster=
running benchmark
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ '[' -n 3 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ '[' -n 3 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ cluster=
+ '[' -n 4 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' 1024 -gt 128 ']'
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_DIR=/data/coco2017
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 6 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' -n 0 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 1 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 1 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ '[' -n 6 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ declare -a CMD
+ '[' -n 6 ']'
+ NUMEPOCHS=90
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ cluster=
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 7 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATA_LAYOUT=NHWC
+ '[' -n 4 ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
running benchmark
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' -n 0 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ '[' -n 3 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ LOG_INTERVAL=100
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
running benchmark
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ declare -a CMD
running benchmark
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' -n 4 ']'
+ '[' -n 5 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ cluster=
+ declare -a CMD
+ declare -a CMD
+ declare -a CMD
+ '[' -n 4 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS+=(--async-val)
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 4 ']'
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
running benchmark
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 7 ']'
+ '[' -n 0 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 4 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ cluster=
+ NUMEPOCHS=90
+ cluster=
+ LOG_INTERVAL=100
+ cluster=
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ PARAMS+=(--async-val)
running benchmark
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ '[' -n 7 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
running benchmark
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ '[' -n 2 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ declare -a CMD
+ '[' -n 6 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 7 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
running benchmark
+ DATASET_DIR=/data/coco2017
running benchmark
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 5 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ cluster=
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ cluster=selene
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 7 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 5 ']'
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 0 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 5 ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
running benchmark
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 6 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' 1024 -gt 128 ']'
+ '[' -n 6 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ '[' -n 3 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ declare -a CMD
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 3 ']'
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
running benchmark
+ declare -a CMD
+ '[' -n 3 ']'
+ echo 'running benchmark'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ '[' -n 0 ']'
+ cluster=selene
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 6 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
running benchmark
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ '[' -n 2 ']'
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 1 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ '[' -n 6 ']'
running benchmark
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
running benchmark
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 5 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 4 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ ASYNC_EVAL=1
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 7 ']'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 7 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ cluster=
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 4 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' -n 2 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ BATCHSIZE=3
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ echo 'running benchmark'
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' -n 5 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 2 ']'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ cluster=
+ DATASET_SIZE=117266
+ '[' -n 6 ']'
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ '[' -n 0 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 0 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ cluster=
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' -n 2 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ cluster=
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' -n 3 ']'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 3 ']'
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ DATASET_DIR=/data/coco2017
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 7 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 5 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 6 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ EVALBATCHSIZE=5
+ '[' -n 7 ']'
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ BATCHSIZE=3
+ '[' -n 0 ']'
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ cluster=
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 5 ']'
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ declare -a CMD
+ DATASET_SIZE=117266
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 6 ']'
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ '[' -n 2 ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ LOG_INTERVAL=100
+ cluster=selene
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ '[' -n 6 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ declare -a CMD
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ '[' -n 2 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 0 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 1 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 3 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ '[' -n 6 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ '[' -n 7 ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ cluster=
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 5 ']'
+ [[ 1 -eq 1 ]]
+ '[' -n 3 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' -n 2 ']'
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 1 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ '[' -n 5 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 0 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
running benchmark
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ cluster=
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ '[' -n 7 ']'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ '[' -n 1 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
running benchmark
+ cluster=
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ EVALBATCHSIZE=5
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 3 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ declare -a CMD
+ DATA_LAYOUT=NHWC
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 6 ']'
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 6 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ '[' -n 7 ']'
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 4 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ DATASET_DIR=/data/coco2017
+ '[' -n 3 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ '[' -n 6 ']'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 2 ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 0 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' -n 0 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 4 ']'
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 3 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 7 ']'
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ echo 'running benchmark'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ cluster=
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ BATCHSIZE=3
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=
+ '[' -n 7 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 5 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PARAMS+=(--async-val)
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 1 ']'
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' -n 4 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 0 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ '[' -n 0 ']'
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 5 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 2 ']'
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 4 ']'
+ EVAL_DATASET_SIZE=5000
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ NUMEPOCHS=90
+ '[' -n 0 ']'
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ declare -a CMD
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 1 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 2 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=
+ '[' -n 3 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 6 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ '[' -n 5 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ '[' -n 7 ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ echo 'running benchmark'
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 0 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 4 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' -n 4 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 0 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 4 ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ declare -a CMD
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
running benchmark
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 4 ']'
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 3 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ DATASET_SIZE=117266
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
running benchmark
+ echo 'running benchmark'
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ASYNC_EVAL=1
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:55:24 PM
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' -n 2 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
num_sockets = 2 num_nodes=8 cores_per_socket=64
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
:::MLLOG {"namespace": "", "time_ms": 1621374926022, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926021, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926022, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926022, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926022, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926022, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926022, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926022, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926024, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926023, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926023, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926023, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926023, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926025, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926023, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926025, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926024, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926024, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926024, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926026, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926025, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926024, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926025, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926026, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926025, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926024, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926026, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926023, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926026, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926023, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926025, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926026, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926025, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926026, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926023, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926026, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926024, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926024, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926026, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926026, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926026, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926026, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926026, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926026, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926026, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926025, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926026, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926026, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926026, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926026, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926026, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926026, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926026, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926026, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926026, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926025, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926026, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926026, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926026, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926026, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926026, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926026, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926025, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926025, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926025, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926026, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926026, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926025, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926025, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926025, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926026, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926030, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926026, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926031, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926029, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926030, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926029, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926029, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926027, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926029, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926029, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926029, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926029, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926031, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926029, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926031, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926029, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926031, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926030, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926029, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926031, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926029, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926029, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926029, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926031, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926029, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926030, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926029, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926029, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926029, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926030, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926031, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926030, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926029, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926029, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926029, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926033, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926029, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926029, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926029, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926031, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926028, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926029, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926029, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926031, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926029, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926029, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926031, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926030, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926031, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926031, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926030, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926030, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926029, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926031, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926032, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926031, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926030, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926030, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926032, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926032, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926030, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926032, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926030, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926033, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926030, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926032, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926032, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926031, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926033, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926031, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926032, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926033, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926032, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926032, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926032, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926032, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926034, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926032, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926032, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926034, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926032, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926032, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926035, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926034, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926032, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926033, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926032, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926032, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926032, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926032, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926032, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926032, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926033, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926033, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926032, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926034, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926032, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926032, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926034, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926034, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926033, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926032, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926033, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926034, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926034, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926033, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926033, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926033, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926033, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926034, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926033, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926033, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926033, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926033, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926034, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926034, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926034, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926034, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926034, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926034, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926035, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926036, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926036, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926035, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926034, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926035, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926034, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926035, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926036, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926034, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926034, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926035, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926036, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926036, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926042, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926042, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926042, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926043, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926042, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926042, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926042, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926043, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926044, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926043, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926043, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926043, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926043, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926043, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926043, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926043, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926043, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926044, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926043, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926046, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926045, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926044, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926046, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926046, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926046, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926044, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926046, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926047, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926047, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926044, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926046, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926046, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926046, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926050, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926046, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926047, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926047, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926047, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926047, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926046, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926047, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926047, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926047, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926047, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926048, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926047, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926047, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926049, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926049, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926049, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926049, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926052, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926053, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926053, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926052, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926052, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926055, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926053, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926053, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926053, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926055, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926053, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926053, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926053, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926056, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926054, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926056, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926055, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926056, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926056, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926053, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926054, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926056, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926056, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926055, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926054, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926056, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926056, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926056, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926054, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926054, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926055, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926056, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926056, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926056, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926056, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926055, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926056, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926055, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926055, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926055, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926055, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926055, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926056, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926056, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926056, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926055, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926056, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926055, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926056, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926057, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926056, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926058, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926107, "event_type": "POINT_IN_TIME", "key": "seed", "value": 1866687357, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 195}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926059, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926060, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926064, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926064, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926061, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926064, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926062, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926064, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926064, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926064, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926064, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926064, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926064, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926064, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926064, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926064, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926064, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926063, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926064, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374926065, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:55:26] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1621374926192, "event_type": "POINT_IN_TIME", "key": "seed", "value": 1866687357, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 224}}
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687485, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688061, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688253, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688229, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687653, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687701, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687837, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688245, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688149, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687389, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688317, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687525, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687445, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688333, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687733, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688021, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687469, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688069, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687581, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688037, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687989, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688261, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687613, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687925, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687493, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687845, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687677, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688293, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688029, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687997, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687901, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688181, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687757, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687965, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687397, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687373, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687589, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687429, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688341, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687645, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687981, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687453, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688141, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687517, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687509, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687533, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688349, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687781, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687853, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687773, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688085, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688205, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687669, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687421, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687405, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687749, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687893, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687933, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688309, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687877, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688213, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687821, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688101, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688197, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687661, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688189, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688237, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687381, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687549, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687725, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687365, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688093, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687637, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687869, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687621, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687413, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687485
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687501, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688221, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687765, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687717, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687709, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688045, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687885, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688269, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687389
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688061
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687789, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687477, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688165, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687557, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687917, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688301, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687565, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687541, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688357, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688373, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688253
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688133, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687653
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687861, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687693, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688005, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687909, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687957, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687973, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688341
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687597, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688053, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688149
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688157, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687629, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688277, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688317
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687357, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687829, start_epoch=1, synthNamespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688253, start_epoch=1, synthetic=Falseetic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687461, start_epoch=1, synthNamespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688229, start_epoch=1, synthetic=Falseetic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687605, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687485, start_epoch=1, synthetic=Falseetic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688173, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687813, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688077, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687373
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687493
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687685, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688125, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687741, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688325, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688109, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687437, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687677
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688013, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687981
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687573, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687733
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:Seed: 1866687461
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687797, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687941, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688117, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687949, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688365, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687701
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688261
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688061, start_epoch=1, synthetic=FalseINFO:root:Seed: 1866687397
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687837
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688245
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687645
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687445
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688285, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687637
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687533
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687469
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688213
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687805, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687621
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688085
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688229
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687661
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688189
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687613
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688045
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687405
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688269
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687893
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687725
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687453
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687525
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687997
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687653, start_epoch=1, synthetic=FalseINFO:root:Seed: 1866688333
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687901
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:Seed: 1866688165
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688021
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687509
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687917
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688349
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687781
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687757
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688069
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688205
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688005
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687909
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687925
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687421
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687589
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688237
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687429
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687549
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687845
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687749
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687365
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688293
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687933
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687357
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688309
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688141
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687837, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688181
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688301
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687541
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687853
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688357
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687773
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687581
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687965
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687413
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687989
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687389, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687861
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:Seed: 1866687501
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687693
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688101
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687813
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687765
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688317, start_epoch=1, synthetic=FalseINFO:root:Seed: 1866688077
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687717
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688197
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687525, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687709
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687685
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687381
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687885
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688125
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687597
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688053
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687741
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688157
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688109
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687629
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687789
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687573
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688029
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688093
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687829
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687877
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687557
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687869
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687605
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687941
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:Seed: 1866687565
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688117
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687949
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687701, start_epoch=1, synthetic=FalseINFO:root:Seed: 1866688365
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688133
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687821
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688173
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687669
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688221
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687973
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688325
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:Seed: 1866687437
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688341, start_epoch=1, synthetic=FalseINFO:root:Seed: 1866688277
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688245, start_epoch=1, synthetic=FalseINFO:root:Seed: 1866688013
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688149, start_epoch=1, synthetic=FalseINFO:root:Seed: 1866687477
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687645, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687845, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688285
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687517
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687797
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687677, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687981, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687805
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687453, start_epoch=1, synthetic=FalseINFO:root:Seed: 1866688373
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687445, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866688037
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687733, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1866687957
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687461, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688181, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687533, start_epoch=1, synthetic=FalseINFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687469, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687757, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687773, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
Seed: 1866688253
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688261, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687397, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687613, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687373, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687493, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687421, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687405, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Seed: 1866688317
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687997, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687901, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688021, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687509, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688213, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687589, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687429, start_epoch=1, synthetic=FalseINFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687749, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687725, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Seed: 1866687677
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Seed: 1866688061
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Seed: 1866687981
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688029, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688333, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687637, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Seed: 1866687733
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688069, start_epoch=1, synthetic=FalseINFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687621, start_epoch=1, synthetic=FalseINFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
precision: fp16
INFO:root:bn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687581, start_epoch=1, synthetic=FalseINFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687965, start_epoch=1, synthetic=FalseINFO:root:bn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688085, start_epoch=1, synthetic=FalseINFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688205, start_epoch=1, synthetic=FalseINFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 224
Seed: 1866687653
INFO:root:MPI global rank: 776
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688037, start_epoch=1, synthetic=FalseINFO:root:MPI local rank: 0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687989, start_epoch=1, synthetic=FalseINFO:root:MPI global rank: 416
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687821, start_epoch=1, synthetic=FalseINFO:root:MPI global rank: 896
Seed: 1866687485
INFO:root:MPI local rank: 0
Seed: 1866687701
INFO:root:async validation: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687669, start_epoch=1, synthetic=FalseINFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687717, start_epoch=1, synthetic=FalseINFO:root:async validation: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688197, start_epoch=1, synthetic=FalseINFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687661, start_epoch=1, synthetic=FalseINFO:root:[SSD] network: resnet34_v1
Seed: 1866687397
INFO:root:[SSD] network: resnet34_v1
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688189, start_epoch=1, synthetic=FalseINFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687925, start_epoch=1, synthetic=FalseINFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688045, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687381, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687549, start_epoch=1, synthetic=FalseINFO:root:[SSD] bn group: 8
Seed: 1866687837
INFO:root:[SSD] bn group: 8
Seed: 1866688341
precision: fp16
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
Seed: 1866688149
INFO:root:fuse bn add relu: True
Seed: 1866687645
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688269, start_epoch=1, synthetic=FalseINFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687893, start_epoch=1, synthetic=FalseINFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn group: 8
Seed: 1866687389
INFO:root:fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687365, start_epoch=1, synthetic=FalseINFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
INFO:root:bn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688093, start_epoch=1, synthetic=FalseINFO:root:fuse bn relu: True
Seed: 1866687445
INFO:root:MPI global rank: 608
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688309, start_epoch=1, synthetic=FalseINFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 872
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 728
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 848
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688165, start_epoch=1, synthetic=FalseINFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687917, start_epoch=1, synthetic=FalseINFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688301, start_epoch=1, synthetic=FalseINFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688349, start_epoch=1, synthetic=FalseINFO:root:[SSD] network: resnet34_v1
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687781, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn relu: True
Seed: 1866687469
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688357, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688373, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Seed: 1866688229
precision: fp16
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687413, start_epoch=1, synthetic=FalseINFO:root:bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688005, start_epoch=1, synthetic=FalseINFO:root:fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687909, start_epoch=1, synthetic=FalseINFO:root:MPI global rank: 56
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688101, start_epoch=1, synthetic=FalseINFO:root:bn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688221, start_epoch=1, synthetic=FalseINFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
INFO:root:fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687765, start_epoch=1, synthetic=FalseINFO:root:MPI size: 1024
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI size: 1024
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:async validation: True
Seed: 1866687613
INFO:root:MPI global rank: 296
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 680
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687709, start_epoch=1, synthetic=FalseINFO:root:MPI size: 1024
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] network: resnet34_v1
Seed: 1866687373
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 632
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688237, start_epoch=1, synthetic=FalseINFO:root:async validation: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688157, start_epoch=1, synthetic=FalseINFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687629, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1866687725
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688277, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687789, start_epoch=1, synthetic=FalseINFO:root:bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688293, start_epoch=1, synthetic=FalseINFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:bn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687933, start_epoch=1, synthetic=FalseINFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Seed: 1866687453
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
Seed: 1866687525
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687357, start_epoch=1, synthetic=FalseINFO:root:MPI global rank: 464
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
Seed: 1866687997
INFO:root:fuse bn relu: True
Seed: 1866688333
INFO:root:MPI local rank: 0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688141, start_epoch=1, synthetic=FalseINFO:root:bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687517, start_epoch=1, synthetic=FalseINFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
Seed: 1866688021
INFO:root:bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687877, start_epoch=1, synthetic=FalseINFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Seed: 1866687509
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI global rank: 128
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI size: 1024
INFO:root:MPI global rank: 344
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687869, start_epoch=1, synthetic=FalseINFO:root:MPI size: 1024
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687605, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
INFO:root:async validation: True
Seed: 1866687757
INFO:root:MPI global rank: 816
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687541, start_epoch=1, synthetic=FalseINFO:root:async validation: True
Seed: 1866688069
INFO:root:[SSD] network: resnet34_v1
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687853, start_epoch=1, synthetic=FalseINFO:root:MPI local rank: 0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688133, start_epoch=1, synthetic=FalseINFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
precision: fp16
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688173, start_epoch=1, synthetic=FalseINFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687861, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687501, start_epoch=1, synthetic=FalseINFO:root:bn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687693, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI size: 1024
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687957, start_epoch=1, synthetic=FalseINFO:root:fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687813, start_epoch=1, synthetic=FalseINFO:root:fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI global rank: 312
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688077, start_epoch=1, synthetic=FalseINFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687973, start_epoch=1, synthetic=FalseINFO:root:bn all reduce fp16: False
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
Seed: 1866687493
INFO:root:fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687685, start_epoch=1, synthetic=FalseINFO:root:MPI size: 1024
Seed: 1866687421
INFO:root:bn all reduce fp16: False
Seed: 1866687589
INFO:root:[SSD] network: resnet34_v1
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 504
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687885, start_epoch=1, synthetic=FalseINFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1866687549
INFO:root:bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688125, start_epoch=1, synthetic=FalseINFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 144
loss scaling: 128.0
INFO:root:[SSD] fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687597, start_epoch=1, synthetic=FalseINFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688053, start_epoch=1, synthetic=FalseINFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687741, start_epoch=1, synthetic=FalseINFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
Seed: 1866687845
INFO:root:async validation: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] bn group: 8
Seed: 1866687749
INFO:root:MPI global rank: 336
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688325, start_epoch=1, synthetic=FalseINFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688109, start_epoch=1, synthetic=FalseINFO:root:[SSD] network: resnet34_v1
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687437, start_epoch=1, synthetic=FalseINFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688013, start_epoch=1, synthetic=FalseINFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687573, start_epoch=1, synthetic=FalseINFO:root:[SSD] network: resnet34_v1
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687477, start_epoch=1, synthetic=FalseINFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
Seed: 1866688309
INFO:root:MPI size: 1024
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
Seed: 1866687637
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687829, start_epoch=1, synthetic=FalseINFO:root:MPI global rank: 648
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687557, start_epoch=1, synthetic=FalseINFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687797, start_epoch=1, synthetic=FalseINFO:root:MPI local rank: 0
Seed: 1866688181
INFO:root:bn group: 8
Seed: 1866687533
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:async validation: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687941, start_epoch=1, synthetic=FalseINFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
Seed: 1866688213
INFO:root:[SSD] network: resnet34_v1
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687565, start_epoch=1, synthetic=FalseINFO:root:MPI size: 1024
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688117, start_epoch=1, synthetic=FalseINFO:root:bn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687949, start_epoch=1, synthetic=FalseINFO:root:fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
Seed: 1866687853
precision: fp16
loss scaling: 128.0
INFO:root:MPI global rank: 552
Seed: 1866688357
INFO:root:MPI size: 1024
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688365, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
Seed: 1866687773
INFO:root:MPI global rank: 744
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:async validation: True
Seed: 1866687581
INFO:root:bn all reduce fp16: False
Seed: 1866687965
INFO:root:MPI local rank: 0
Seed: 1866688085
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
Seed: 1866687989
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 864
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
Seed: 1866688101
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] network: resnet34_v1
Seed: 1866687717
INFO:root:[SSD] fuse bn add relu: True
Seed: 1866688197
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1866687661
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:bn all reduce fp16: False
Seed: 1866688189
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI size: 1024
Seed: 1866687709
INFO:root:fuse bn relu: True
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI global rank: 600
Seed: 1866688045
INFO:root:fuse bn add relu: True
Seed: 1866687381
INFO:root:[SSD] bn group: 8
Seed: 1866687405
INFO:root:fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:async validation: True
Seed: 1866688245
INFO:root:bn all reduce fp16: False
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn group: 8
precision: fp16
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI size: 1024
precision: fp16
INFO:root:fuse bn relu: True
Seed: 1866688269
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Seed: 1866688157
INFO:root:[SSD] network: resnet34_v1
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI global rank: 456
Seed: 1866687629
INFO:root:fuse bn add relu: True
Seed: 1866687893
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 408
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
Seed: 1866687789
INFO:root:async validation: True
loss scaling: 128.0
INFO:root:MPI local rank: 0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] network: resnet34_v1
Seed: 1866688029
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 720
Seed: 1866688093
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
precision: fp16
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866688285, start_epoch=1, synthetic=FalseINFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1866687901
INFO:root:async validation: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
Seed: 1866688165
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1866687917
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn relu: True
Seed: 1866688349
INFO:root:fuse bn add relu: True
Seed: 1866687781
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI global rank: 360
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1866687805, start_epoch=1, synthetic=FalseINFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
Seed: 1866687621
INFO:root:fuse bn add relu: True
Seed: 1866688133
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 840
loss scaling: 128.0
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
Seed: 1866687821
precision: fp16
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
Seed: 1866688173
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1866687669
INFO:root:MPI size: 1024
Seed: 1866688005
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
Seed: 1866688221
INFO:root:MPI global rank: 904
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
Seed: 1866688261
precision: fp16
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
Seed: 1866687973
precision: fp16
loss scaling: 128.0
INFO:root:MPI local rank: 0
Seed: 1866687925
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
precision: fp16
INFO:root:[SSD] bn group: 8
Seed: 1866688237
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
Seed: 1866687429
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 304
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
Seed: 1866688325
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
Seed: 1866687437
INFO:root:bn group: 8
precision: fp16
INFO:root:[SSD] bn group: 8
Seed: 1866688277
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:async validation: True
Seed: 1866688013
precision: fp16
INFO:root:bn all reduce fp16: False
Seed: 1866687365
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
Seed: 1866687933
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
Seed: 1866687477
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 40
Seed: 1866687357
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
INFO:root:async validation: True
Seed: 1866687517
INFO:root:bn group: 8
precision: fp16
INFO:root:[SSD] bn group: 8
Seed: 1866687461
precision: fp16
loss scaling: 128.0
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
precision: fp16
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
precision: fp16
INFO:root:MPI size: 1024
Seed: 1866688301
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:bn group: 8
precision: fp16
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 832
precision: fp16
INFO:root:bn group: 8
Seed: 1866687541
precision: fp16
INFO:root:MPI local rank: 0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
Seed: 1866688373
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
INFO:root:MPI global rank: 616
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 256
INFO:root:MPI local rank: 0
INFO:root:async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI local rank: 0
Seed: 1866688205
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1866687413
INFO:root:async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn relu: True
Seed: 1866688037
precision: fp16
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
Seed: 1866687861
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1866687501
INFO:root:bn group: 8
Seed: 1866687693
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1866687909
precision: fp16
INFO:root:bn all reduce fp16: False
Seed: 1866687957
INFO:root:[SSD] bn group: 8
Seed: 1866687813
INFO:root:[SSD] fuse bn relu: True
Seed: 1866687765
INFO:root:[SSD] fuse bn relu: True
Seed: 1866688077
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
INFO:root:MPI global rank: 352
precision: fp16
INFO:root:fuse bn relu: True
precision: fp16
INFO:root:[SSD] bn group: 8
precision: fp16
loss scaling: 128.0
INFO:root:fuse bn add relu: True
Seed: 1866687685
INFO:root:[SSD] bn group: 8
precision: fp16
loss scaling: 128.0
INFO:root:MPI local rank: 0
Seed: 1866687885
precision: fp16
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
Seed: 1866688125
INFO:root:async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
Seed: 1866687597
precision: fp16
INFO:root:[SSD] network: resnet34_v1
precision: fp16
INFO:root:MPI size: 1024
Seed: 1866688053
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
Seed: 1866687741
INFO:root:bn group: 8
precision: fp16
INFO:root:bn group: 8
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 568
Seed: 1866688109
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:[SSD] fuse bn relu: True
loss scaling: 128.0
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
precision: fp16
INFO:root:MPI size: 1024
Seed: 1866688293
INFO:root:[SSD] fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:async validation: True
Seed: 1866687573
INFO:root:MPI global rank: 16
precision: fp16
INFO:root:MPI global rank: 136
loss scaling: 128.0
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1866688141
INFO:root:async validation: True
loss scaling: 128.0
INFO:root:async validation: True
precision: fp16
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Seed: 1866687829
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
Seed: 1866687877
INFO:root:[SSD] fuse bn add relu: True
Seed: 1866687557
INFO:root:[SSD] network: resnet34_v1
precision: fp16
INFO:root:fuse bn add relu: True
Seed: 1866687869
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1866687605
INFO:root:[SSD] bn group: 8
Seed: 1866687941
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
precision: fp16
INFO:root:bn group: 8
Seed: 1866687565
INFO:root:[SSD] fuse bn relu: True
Seed: 1866688117
INFO:root:[SSD] fuse bn add relu: True
Seed: 1866687949
INFO:root:bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
precision: fp16
INFO:root:[SSD] bn group: 8
Seed: 1866688365
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
INFO:root:MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
loss scaling: 128.0
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:MPI global rank: 328
precision: fp16
INFO:root:fuse bn add relu: True
loss scaling: 128.0
INFO:root:fuse bn relu: True
precision: fp16
INFO:root:MPI local rank: 0
precision: fp16
INFO:root:bn group: 8
precision: fp16
loss scaling: 128.0
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
precision: fp16
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
precision: fp16
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:fuse bn add relu: True
loss scaling: 128.0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
precision: fp16
INFO:root:MPI global rank: 64
precision: fp16
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:MPI size: 1024
precision: fp16
INFO:root:bn group: 8
precision: fp16
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
fuse bn relu: True
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
INFO:root:async validation: True
loss scaling: 128.0
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
precision: fp16
INFO:root:MPI global rank: 688
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:MPI global rank: 232
loss scaling: 128.0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
precision: fp16
loss scaling: 128.0
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:MPI local rank: 0
precision: fp16
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:async validation: True
precision: fp16
INFO:root:fuse bn add relu: True
loss scaling: 128.0
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1866688285
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:bn group: 8
loss scaling: 128.0
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1866687797
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:loss scaling: 128.0
precision: fp16
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
precision: fp16
INFO:root:MPI size: 1024
Seed: 1866687805
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 880
precision: fp16
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:MPI local rank: 0
precision: fp16
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
loss scaling: 128.0
INFO:root:fuse bn relu: True
precision: fp16
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:MPI size: 1024
precision: fp16
INFO:root:fuse bn relu: True
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
precision: fp16
INFO:root:MPI global rank: 24
precision: fp16
INFO:root:bn group: 8
precision: fp16
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:bn group: 8
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 48
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
precision: fp16
INFO:root:MPI size: 1024
loss scaling: 128.0
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
precision: fp16
INFO:root:MPI global rank: 528
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
precision: fp16
INFO:root:[SSD] fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:MPI local rank: 0
precision: fp16
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
INFO:root:async validation: True
loss scaling: 128.0
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
precision: fp16
INFO:root:fuse bn add relu: True
fuse bn relu: True
INFO:root:fuse bn relu: True
precision: fp16
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
precision: fp16
loss scaling: 128.0
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn group: 8
loss scaling: 128.0
INFO:root:MPI size: 1024
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
INFO:root:MPI global rank: 72
precision: fp16
INFO:root:bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
INFO:root:MPI local rank: 0
precision: fp16
INFO:root:MPI size: 1024
precision: fp16
INFO:root:fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:async validation: True
loss scaling: 128.0
INFO:root:MPI global rank: 192
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
precision: fp16
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:bn group: 8
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
loss scaling: 128.0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
precision: fp16
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 768
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
loss scaling: 128.0
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:MPI size: 1024
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 480
fuse bn relu: True
INFO:root:[SSD] bn group: 8
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn group: 8
loss scaling: 128.0
INFO:root:MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
precision: fp16
loss scaling: 128.0
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
INFO:root:MPI size: 1024
loss scaling: 128.0
INFO:root:fuse bn relu: True
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
loss scaling: 128.0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
INFO:root:MPI global rank: 984
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
loss scaling: 128.0
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
INFO:root:async validation: True
loss scaling: 128.0
INFO:root:MPI size: 1024
loss scaling: 128.0
INFO:root:[SSD] bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI global rank: 240
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:fuse bn add relu: True
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
fuse bn add relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
precision: fp16
INFO:root:async validation: True
loss scaling: 128.0
INFO:root:bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn relu: True
precision: fp16
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:MPI size: 1024
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn group: 8
precision: fp16
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
loss scaling: 128.0
INFO:root:MPI global rank: 888
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI local rank: 0
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI size: 1024
fuse bn relu: True
fuse bn add relu: True
INFO:root:[SSD] bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:async validation: True
loss scaling: 128.0
INFO:root:MPI global rank: 696
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:bn group: 8
loss scaling: 128.0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
INFO:root:async validation: True
loss scaling: 128.0
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
INFO:root:[SSD] fuse bn relu: True
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:MPI size: 1024
loss scaling: 128.0
INFO:root:fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn add relu: True
fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI global rank: 792
loss scaling: 128.0
INFO:root:fuse bn add relu: True
fuse bn relu: True
INFO:root:[SSD] bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn relu: True
fuse bn relu: True
INFO:root:bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI local rank: 0
fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
fuse bn relu: True
INFO:root:bn all reduce fp16: False
fuse bn add relu: True
bn group: 8
INFO:root:async validation: True
fuse bn relu: True
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
bn group: 8
INFO:root:MPI size: 1024
fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
fuse bn add relu: True
INFO:root:fuse bn add relu: True
bn all reduce fp16: False
INFO:root:MPI global rank: 384
bn all reduce fp16: False
INFO:root:fuse bn relu: True
bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
bn all reduce fp16: False
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
bn all reduce fp16: False
INFO:root:fuse bn add relu: True
MPI size: 1024
INFO:root:[SSD] fuse bn relu: True
MPI size: 1024
INFO:root:async validation: True
MPI size: 1024
INFO:root:bn all reduce fp16: False
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
MPI size: 1024
INFO:root:[SSD] fuse bn add relu: True
MPI global rank: 224
INFO:root:[SSD] network: resnet34_v1
MPI global rank: 896
INFO:root:bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] bn group: 8
MPI global rank: 776
INFO:root:MPI global rank: 288
MPI local rank: 0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 416
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:MPI size: 1024
MPI local rank: 0
INFO:root:[SSD] fuse bn relu: True
MPI local rank: 0
INFO:root:async validation: True
async validation: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 912
async validation: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] network: resnet34_v1
async validation: True
INFO:root:fuse bn relu: True
async validation: True
INFO:root:MPI local rank: 0
[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
INFO:root:fuse bn add relu: True
INFO:root:bn group: 8
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:async validation: True
[SSD] fuse bn relu: True
INFO:root:bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:loss scaling: 128.0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn relu: True
INFO:root:MPI size: 1024
[SSD] fuse bn add relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
INFO:root:MPI global rank: 488
[SSD] bn group: 8
INFO:root:fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
[SSD] bn group: 8
INFO:root:fuse bn add relu: True
fuse bn relu: True
INFO:root:async validation: True
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
[SSD] bn group: 8
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
fuse bn add relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
INFO:root:MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn group: 8
bn all reduce fp16: False
INFO:root:[SSD] fuse bn relu: True
fuse bn add relu: True
INFO:root:MPI global rank: 800
fuse bn relu: True
INFO:root:fuse bn add relu: True
bn all reduce fp16: False
INFO:root:[SSD] fuse bn add relu: True
MPI size: 1024
INFO:root:fuse bn relu: True
bn group: 8
INFO:root:MPI local rank: 0
fuse bn add relu: True
bn group: 8
INFO:root:bn group: 8
INFO:root:bn all reduce fp16: False
MPI size: 1024
INFO:root:[SSD] bn group: 8
MPI global rank: 608
INFO:root:fuse bn add relu: True
bn all reduce fp16: False
INFO:root:async validation: True
bn all reduce fp16: False
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:bn group: 8
MPI global rank: 872
INFO:root:[SSD] network: resnet34_v1
MPI size: 1024
INFO:root:MPI global rank: 392
MPI local rank: 0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI global rank: 728
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI local rank: 0
INFO:root:MPI local rank: 0
MPI global rank: 848
INFO:root:bn all reduce fp16: False
async validation: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
INFO:root:async validation: True
async validation: True
INFO:root:fuse bn relu: True
MPI local rank: 0
INFO:root:[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
async validation: True
INFO:root:fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:fuse bn relu: True
async validation: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI global rank: 968
[SSD] network: resnet34_v1
INFO:root:bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn relu: True
INFO:root:bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:async validation: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn relu: True
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
[SSD] fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] bn group: 8
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:MPI global rank: 752
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
[SSD] fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] bn group: 8
INFO:root:MPI local rank: 0
fuse bn relu: True
INFO:root:MPI size: 1024
[SSD] bn group: 8
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 272
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI local rank: 0
bn group: 8
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn relu: True
INFO:root:async validation: True
fuse bn relu: True
INFO:root:fuse bn relu: True
bn group: 8
INFO:root:[SSD] fuse bn relu: True
bn all reduce fp16: False
INFO:root:[SSD] network: resnet34_v1
bn all reduce fp16: False
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
MPI size: 1024
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
bn group: 8
INFO:root:bn group: 8
fuse bn add relu: True
INFO:root:[SSD] bn group: 8
MPI global rank: 56
INFO:root:[SSD] fuse bn relu: True
bn all reduce fp16: False
INFO:root:fuse bn add relu: True
bn group: 8
INFO:root:bn all reduce fp16: False
MPI size: 1024
INFO:root:[SSD] fuse bn add relu: True
MPI local rank: 0
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:[SSD] bn group: 8
bn all reduce fp16: False
INFO:root:bn all reduce fp16: False
async validation: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI global rank: 296
INFO:root:MPI global rank: 536
MPI global rank: 680
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI local rank: 0
INFO:root:MPI global rank: 368
MPI global rank: 632
INFO:root:fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn relu: True
async validation: True
INFO:root:async validation: True
async validation: True
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:bn group: 8
[SSD] fuse bn relu: True
INFO:root:fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:async validation: True
async validation: True
INFO:root:bn all reduce fp16: False
[SSD] fuse bn add relu: True
INFO:root:bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
[SSD] bn group: 8
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn relu: True
INFO:root:MPI global rank: 80
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn all reduce fp16: False
INFO:root:MPI size: 1024
INFO:root:MPI global rank: 320
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:MPI local rank: 0
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
fuse bn add relu: True
INFO:root:async validation: True
[SSD] bn group: 8
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
bn group: 8
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
MPI size: 1024
INFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn add relu: True
MPI global rank: 464
INFO:root:[SSD] fuse bn add relu: True
fuse bn add relu: True
INFO:root:fuse bn relu: True
fuse bn add relu: True
INFO:root:bn group: 8
fuse bn relu: True
INFO:root:[SSD] bn group: 8
MPI local rank: 0
INFO:root:[SSD] bn group: 8
bn group: 8
INFO:root:fuse bn add relu: True
bn group: 8
INFO:root:bn all reduce fp16: False
fuse bn add relu: True
INFO:root:bn group: 8
async validation: True
INFO:root:MPI size: 1024
bn all reduce fp16: False
INFO:root:fuse bn relu: True
bn all reduce fp16: False
INFO:root:bn all reduce fp16: False
MPI size: 1024
INFO:root:fuse bn relu: True
bn group: 8
INFO:root:MPI global rank: 920
[SSD] network: resnet34_v1
INFO:root:fuse bn add relu: True
MPI size: 1024
INFO:root:MPI size: 1024
bn all reduce fp16: False
INFO:root:fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI local rank: 0
MPI global rank: 128
INFO:root:bn group: 8
MPI global rank: 344
INFO:root:MPI global rank: 32
MPI local rank: 0
INFO:root:async validation: True
MPI size: 1024
INFO:root:bn all reduce fp16: False
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:bn group: 8
async validation: True
INFO:root:[SSD] network: resnet34_v1
MPI global rank: 816
INFO:root:MPI size: 1024
[SSD] fuse bn add relu: True
INFO:root:async validation: True
async validation: True
INFO:root:bn all reduce fp16: False
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
INFO:root:MPI global rank: 656
[SSD] bn group: 8
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
INFO:root:MPI global rank: 704
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:async validation: True
[SSD] fuse bn relu: True
INFO:root:fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
fuse bn relu: True
fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:MPI local rank: 0
[SSD] fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn add relu: True
bn group: 8
INFO:root:async validation: True
[SSD] bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
INFO:root:[SSD] bn group: 8
[SSD] fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
bn all reduce fp16: False
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn group: 8
MPI size: 1024
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
fuse bn add relu: True
INFO:root:bn all reduce fp16: False
fuse bn relu: True
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
MPI global rank: 312
INFO:root:MPI size: 1024
bn group: 8
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI local rank: 0
INFO:root:MPI global rank: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn group: 8
bn all reduce fp16: False
INFO:root:fuse bn relu: True
bn group: 8
INFO:root:bn all reduce fp16: False
async validation: True
INFO:root:MPI local rank: 0
fuse bn relu: True
INFO:root:fuse bn add relu: True
MPI size: 1024
INFO:root:bn group: 8
bn all reduce fp16: False
INFO:root:MPI size: 1024
[SSD] network: resnet34_v1
INFO:root:async validation: True
fuse bn add relu: True
INFO:root:bn group: 8
MPI global rank: 504
INFO:root:bn all reduce fp16: False
MPI size: 1024
INFO:root:MPI global rank: 432
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
bn group: 8
INFO:root:bn all reduce fp16: False
MPI local rank: 0
INFO:root:MPI size: 1024
MPI global rank: 144
INFO:root:MPI local rank: 0
[SSD] fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
INFO:root:MPI size: 1024
async validation: True
INFO:root:MPI global rank: 624
MPI local rank: 0
INFO:root:async validation: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
MPI size: 1024
INFO:root:MPI global rank: 936
[SSD] network: resnet34_v1
INFO:root:MPI local rank: 0
async validation: True
INFO:root:[SSD] network: resnet34_v1
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
MPI global rank: 336
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:async validation: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
MPI local rank: 0
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
INFO:root:fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:fuse bn add relu: True
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
[SSD] bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
bn all reduce fp16: False
INFO:root:bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
MPI size: 1024
INFO:root:MPI size: 1024
fuse bn relu: True
INFO:root:fuse bn add relu: True
INFO:root:bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
MPI global rank: 648
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:MPI global rank: 216
fuse bn relu: True
INFO:root:bn all reduce fp16: False
[SSD] bn group: 8
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:MPI size: 1024
bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn add relu: True
INFO:root:bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI global rank: 576
async validation: True
INFO:root:fuse bn relu: True
bn all reduce fp16: False
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn group: 8
INFO:root:async validation: True
fuse bn relu: True
INFO:root:MPI local rank: 0
[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:fuse bn add relu: True
bn all reduce fp16: False
INFO:root:[SSD] network: resnet34_v1
fuse bn add relu: True
INFO:root:async validation: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI global rank: 960
MPI global rank: 552
INFO:root:bn group: 8
loss scaling: 128.0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:bn all reduce fp16: False
bn group: 8
INFO:root:[SSD] fuse bn relu: True
MPI global rank: 744
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
INFO:root:async validation: True
async validation: True
INFO:root:MPI size: 1024
bn all reduce fp16: False
INFO:root:[SSD] fuse bn add relu: True
MPI local rank: 0
INFO:root:[SSD] fuse bn relu: True
[SSD] bn group: 8
INFO:root:MPI global rank: 96
[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
MPI size: 1024
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
async validation: True
INFO:root:MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] bn group: 8
MPI global rank: 864
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
MPI local rank: 0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
INFO:root:fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
async validation: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn relu: True
INFO:root:bn group: 8
fuse bn add relu: True
INFO:root:fuse bn relu: True
[SSD] bn group: 8
INFO:root:[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn group: 8
INFO:root:[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI size: 1024
[SSD] bn group: 8
INFO:root:bn group: 8
bn all reduce fp16: False
INFO:root:fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 120
[SSD] fuse bn relu: True
INFO:root:bn all reduce fp16: False
MPI size: 1024
INFO:root:fuse bn add relu: True
fuse bn relu: True
INFO:root:MPI local rank: 0
[SSD] fuse bn add relu: True
INFO:root:MPI size: 1024
fuse bn relu: True
INFO:root:bn group: 8
MPI global rank: 600
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn add relu: True
INFO:root:async validation: True
[SSD] bn group: 8
INFO:root:MPI global rank: 672
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
MPI local rank: 0
INFO:root:fuse bn relu: True
bn group: 8
INFO:root:[SSD] network: resnet34_v1
fuse bn add relu: True
INFO:root:MPI local rank: 0
async validation: True
INFO:root:MPI size: 1024
bn all reduce fp16: False
INFO:root:fuse bn add relu: True
bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:async validation: True
fuse bn relu: True
INFO:root:MPI global rank: 168
MPI size: 1024
INFO:root:bn group: 8
fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] network: resnet34_v1
bn all reduce fp16: False
INFO:root:MPI local rank: 0
MPI global rank: 456
INFO:root:bn all reduce fp16: False
fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
INFO:root:async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI size: 1024
bn group: 8
INFO:root:[SSD] bn group: 8
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
MPI local rank: 0
INFO:root:[SSD] network: resnet34_v1
MPI global rank: 408
INFO:root:MPI global rank: 0
bn all reduce fp16: False
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:[SSD] bn group: 8
MPI size: 1024
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] bn group: 8
INFO:root:[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:async validation: True
async validation: True
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
MPI global rank: 720
INFO:root:[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:fuse bn add relu: True
MPI local rank: 0
INFO:root:[SSD] bn group: 8
fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn relu: True
INFO:root:bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
async validation: True
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:bn all reduce fp16: False
[SSD] fuse bn add relu: True
INFO:root:bn group: 8
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn group: 8
INFO:root:MPI size: 1024
[SSD] bn group: 8
INFO:root:bn all reduce fp16: False
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn relu: True
[SSD] bn group: 8
INFO:root:MPI global rank: 736
bn all reduce fp16: False
INFO:root:MPI global rank: 88
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
fuse bn add relu: True
INFO:root:MPI local rank: 0
MPI size: 1024
INFO:root:bn group: 8
bn group: 8
INFO:root:async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
[SSD] fuse bn add relu: True
INFO:root:async validation: True
MPI global rank: 360
INFO:root:MPI size: 1024
fuse bn relu: True
INFO:root:fuse bn relu: True
[SSD] bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn all reduce fp16: False
INFO:root:[SSD] network: resnet34_v1
fuse bn add relu: True
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 952
MPI local rank: 0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
INFO:root:[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn group: 8
async validation: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
INFO:root:MPI local rank: 0
MPI global rank: 840
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn relu: True
bn all reduce fp16: False
MPI size: 1024
INFO:root:async validation: True
fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
MPI local rank: 0
INFO:root:MPI size: 1024
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
fuse bn add relu: True
INFO:root:[SSD] bn group: 8
async validation: True
INFO:root:[SSD] fuse bn add relu: True
MPI global rank: 904
INFO:root:MPI global rank: 640
[SSD] fuse bn relu: True
INFO:root:[SSD] bn group: 8
bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:loss scaling: 128.0
[SSD] network: resnet34_v1
INFO:root:async validation: True
bn all reduce fp16: False
INFO:root:[SSD] fuse bn add relu: True
async validation: True
INFO:root:fuse bn relu: True
[SSD] bn group: 8
INFO:root:[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI size: 1024
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
INFO:root:fuse bn relu: True
MPI global rank: 304
INFO:root:bn group: 8
fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn all reduce fp16: False
MPI local rank: 0
INFO:root:loss scaling: 128.0
bn group: 8
INFO:root:[SSD] fuse bn add relu: True
bn all reduce fp16: False
INFO:root:bn group: 8
[SSD] bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
INFO:root:MPI size: 1024
async validation: True
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
MPI size: 1024
INFO:root:MPI global rank: 976
[SSD] fuse bn add relu: True
INFO:root:bn all reduce fp16: False
INFO:root:MPI size: 1024
INFO:root:MPI global rank: 784
[SSD] network: resnet34_v1
INFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:MPI local rank: 0
[SSD] bn group: 8
INFO:root:MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn add relu: True
MPI global rank: 40
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
fuse bn add relu: True
INFO:root:async validation: True
[SSD] fuse bn relu: True
INFO:root:bn group: 8
MPI local rank: 0
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:bn all reduce fp16: False
async validation: True
INFO:root:bn all reduce fp16: False
bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
[SSD] bn group: 8
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn relu: True
bn all reduce fp16: False
INFO:root:MPI global rank: 928
fuse bn add relu: True
INFO:root:MPI global rank: 280
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
MPI size: 1024
MPI global rank: 832
INFO:root:[SSD] fuse bn add relu: True
fuse bn add relu: True
INFO:root:MPI local rank: 0
bn group: 8
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
bn group: 8
bn all reduce fp16: False
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:[SSD] network: resnet34_v1
bn all reduce fp16: False
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI size: 1024
INFO:root:fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
INFO:root:fuse bn relu: True
MPI size: 1024
INFO:root:fuse bn add relu: True
MPI global rank: 256
MPI local rank: 0
INFO:root:[SSD] fuse bn relu: True
MPI global rank: 616
INFO:root:[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
INFO:root:fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
async validation: True
INFO:root:[SSD] fuse bn relu: True
MPI local rank: 0
INFO:root:bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn all reduce fp16: False
fuse bn relu: True
INFO:root:[SSD] bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
INFO:root:bn all reduce fp16: False
async validation: True
INFO:root:MPI size: 1024
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
fuse bn add relu: True
bn group: 8
INFO:root:MPI global rank: 376
[SSD] network: resnet34_v1
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI global rank: 160
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn relu: True
bn all reduce fp16: False
INFO:root:MPI local rank: 0
[SSD] bn group: 8
INFO:root:MPI local rank: 0
[SSD] fuse bn relu: True
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
[SSD] fuse bn relu: True
INFO:root:async validation: True
MPI size: 1024
INFO:root:bn group: 8
[SSD] fuse bn add relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
MPI global rank: 352
INFO:root:bn all reduce fp16: False
[SSD] bn group: 8
INFO:root:fuse bn relu: True
fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
MPI local rank: 0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 544
fuse bn relu: True
INFO:root:bn group: 8
fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
async validation: True
INFO:root:[SSD] fuse bn add relu: True
bn all reduce fp16: False
INFO:root:MPI local rank: 0
fuse bn add relu: True
INFO:root:bn all reduce fp16: False
fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI size: 1024
MPI global rank: 568
INFO:root:[SSD] bn group: 8
bn group: 8
INFO:root:[SSD] bn group: 8
bn group: 8
INFO:root:[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI global rank: 472
bn all reduce fp16: False
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
INFO:root:MPI local rank: 0
[SSD] fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI local rank: 0
INFO:root:[SSD] fuse bn relu: True
MPI size: 1024
INFO:root:async validation: True
MPI size: 1024
INFO:root:fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:fuse bn relu: True
async validation: True
INFO:root:[SSD] fuse bn add relu: True
MPI global rank: 16
INFO:root:[SSD] network: resnet34_v1
MPI global rank: 136
INFO:root:fuse bn add relu: True
[SSD] bn group: 8
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
INFO:root:bn group: 8
MPI local rank: 0
INFO:root:bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
async validation: True
INFO:root:bn all reduce fp16: False
async validation: True
INFO:root:bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
[SSD] fuse bn relu: True
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
fuse bn relu: True
INFO:root:fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:MPI global rank: 808
[SSD] fuse bn add relu: True
INFO:root:MPI global rank: 664
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:MPI local rank: 0
fuse bn add relu: True
INFO:root:MPI local rank: 0
[SSD] bn group: 8
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
[SSD] fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:async validation: True
bn group: 8
INFO:root:async validation: True
[SSD] fuse bn add relu: True
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:fuse bn relu: True
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI size: 1024
[SSD] bn group: 8
INFO:root:fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 520
fuse bn relu: True
INFO:root:bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] fuse bn relu: True
MPI global rank: 328
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
fuse bn add relu: True
INFO:root:bn all reduce fp16: False
fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
MPI local rank: 0
INFO:root:async validation: True
bn group: 8
INFO:root:MPI size: 1024
fuse bn add relu: True
INFO:root:[SSD] bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] bn group: 8
async validation: True
INFO:root:[SSD] network: resnet34_v1
bn group: 8
INFO:root:MPI global rank: 200
bn all reduce fp16: False
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn relu: True
INFO:root:MPI local rank: 0
[SSD] network: resnet34_v1
INFO:root:fuse bn relu: True
INFO:root:fuse bn add relu: True
MPI size: 1024
INFO:root:loss scaling: 128.0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
bn all reduce fp16: False
INFO:root:bn group: 8
fuse bn add relu: True
INFO:root:async validation: True
MPI global rank: 64
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
MPI size: 1024
INFO:root:bn all reduce fp16: False
bn group: 8
INFO:root:[SSD] network: resnet34_v1
MPI local rank: 0
INFO:root:fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
bn all reduce fp16: False
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
INFO:root:fuse bn add relu: True
MPI global rank: 688
INFO:root:MPI global rank: 104
[SSD] bn group: 8
INFO:root:[SSD] fuse bn relu: True
MPI size: 1024
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] network: resnet34_v1
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:async validation: True
MPI global rank: 232
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
async validation: True
INFO:root:fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
INFO:root:MPI global rank: 440
fuse bn relu: True
INFO:root:bn group: 8
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:MPI local rank: 0
async validation: True
INFO:root:bn all reduce fp16: False
fuse bn add relu: True
INFO:root:fuse bn relu: True
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:async validation: True
[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
bn group: 8
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn group: 8
bn all reduce fp16: False
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
INFO:root:MPI global rank: 824
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI local rank: 0
[SSD] fuse bn relu: True
INFO:root:fuse bn relu: True
MPI size: 1024
INFO:root:[SSD] fuse bn relu: True
[SSD] bn group: 8
INFO:root:MPI size: 1024
fuse bn relu: True
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
INFO:root:bn group: 8
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
MPI global rank: 880
INFO:root:MPI global rank: 152
fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
[SSD] bn group: 8
INFO:root:[SSD] bn group: 8
MPI local rank: 0
INFO:root:MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
bn group: 8
INFO:root:async validation: True
async validation: True
INFO:root:[SSD] fuse bn relu: True
fuse bn add relu: True
INFO:root:MPI global rank: 176
bn all reduce fp16: False
INFO:root:fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
MPI size: 1024
INFO:root:fuse bn add relu: True
bn group: 8
INFO:root:[SSD] bn group: 8
fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:async validation: True
MPI global rank: 24
INFO:root:bn group: 8
fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI local rank: 0
INFO:root:[SSD] network: resnet34_v1
bn group: 8
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:fuse bn relu: True
async validation: True
INFO:root:[SSD] bn group: 8
bn all reduce fp16: False
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
[SSD] bn group: 8
INFO:root:fuse bn add relu: True
MPI global rank: 48
INFO:root:MPI global rank: 560
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn add relu: True
MPI size: 1024
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
async validation: True
INFO:root:async validation: True
MPI global rank: 528
INFO:root:MPI size: 1024
loss scaling: 128.0
INFO:root:fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:MPI global rank: 944
[SSD] network: resnet34_v1
INFO:root:fuse bn add relu: True
MPI local rank: 0
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn group: 8
async validation: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
INFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
fuse bn add relu: True
bn group: 8
INFO:root:[SSD] fuse bn add relu: True
fuse bn relu: True
INFO:root:bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI global rank: 512
bn all reduce fp16: False
INFO:root:[SSD] bn group: 8
fuse bn add relu: True
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
[SSD] fuse bn relu: True
INFO:root:MPI size: 1024
bn group: 8
INFO:root:[SSD] fuse bn add relu: True
MPI size: 1024
INFO:root:async validation: True
[SSD] fuse bn add relu: True
INFO:root:MPI global rank: 248
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI global rank: 72
INFO:root:[SSD] bn group: 8
bn all reduce fp16: False
INFO:root:[SSD] network: resnet34_v1
[SSD] bn group: 8
INFO:root:MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
INFO:root:async validation: True
MPI size: 1024
INFO:root:fuse bn add relu: True
fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
async validation: True
INFO:root:[SSD] network: resnet34_v1
MPI global rank: 192
INFO:root:bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
fuse bn relu: True
INFO:root:fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
INFO:root:bn all reduce fp16: False
bn group: 8
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI size: 1024
async validation: True
INFO:root:bn group: 8
bn all reduce fp16: False
INFO:root:[SSD] fuse bn add relu: True
fuse bn add relu: True
INFO:root:MPI global rank: 584
[SSD] fuse bn relu: True
INFO:root:bn all reduce fp16: False
[SSD] network: resnet34_v1
INFO:root:fuse bn relu: True
MPI size: 1024
INFO:root:[SSD] bn group: 8
bn group: 8
INFO:root:MPI local rank: 0
[SSD] fuse bn add relu: True
INFO:root:MPI size: 1024
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn add relu: True
MPI global rank: 768
INFO:root:async validation: True
bn all reduce fp16: False
INFO:root:MPI global rank: 992
[SSD] bn group: 8
INFO:root:bn group: 8
[SSD] fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:fuse bn relu: True
MPI size: 1024
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
INFO:root:async validation: True
fuse bn add relu: True
INFO:root:bn all reduce fp16: False
INFO:root:MPI size: 1024
INFO:root:MPI global rank: 424
async validation: True
INFO:root:[SSD] fuse bn relu: True
MPI global rank: 480
INFO:root:[SSD] network: resnet34_v1
[SSD] bn group: 8
INFO:root:fuse bn add relu: True
bn group: 8
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
MPI local rank: 0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
INFO:root:async validation: True
bn all reduce fp16: False
INFO:root:bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] bn group: 8
async validation: True
INFO:root:[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
MPI size: 1024
INFO:root:bn all reduce fp16: False
fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
[SSD] fuse bn relu: True
INFO:root:fuse bn relu: True
fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
MPI global rank: 984
INFO:root:MPI global rank: 112
[SSD] fuse bn add relu: True
INFO:root:fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
bn group: 8
INFO:root:MPI local rank: 0
[SSD] bn group: 8
INFO:root:bn group: 8
MPI local rank: 0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] fuse bn add relu: True
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
async validation: True
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 856
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
MPI global rank: 240
INFO:root:[SSD] fuse bn relu: True
fuse bn relu: True
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
MPI local rank: 0
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:async validation: True
[SSD] network: resnet34_v1
INFO:root:bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] bn group: 8
async validation: True
INFO:root:MPI size: 1024
bn group: 8
INFO:root:bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI global rank: 400
fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI size: 1024
bn all reduce fp16: False
INFO:root:MPI local rank: 0
[SSD] fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
INFO:root:MPI global rank: 208
MPI size: 1024
INFO:root:async validation: True
[SSD] fuse bn add relu: True
INFO:root:fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
bn group: 8
INFO:root:MPI local rank: 0
[SSD] bn group: 8
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn relu: True
INFO:root:fuse bn add relu: True
MPI global rank: 888
INFO:root:[SSD] fuse bn add relu: True
bn all reduce fp16: False
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
INFO:root:bn group: 8
MPI local rank: 0
INFO:root:[SSD] bn group: 8
MPI size: 1024
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
INFO:root:bn all reduce fp16: False
MPI global rank: 696
INFO:root:[SSD] fuse bn add relu: True
fuse bn add relu: True
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
MPI local rank: 0
INFO:root:[SSD] bn group: 8
bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI global rank: 760
async validation: True
INFO:root:fuse bn relu: True
bn all reduce fp16: False
INFO:root:[SSD] bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI local rank: 0
[SSD] fuse bn relu: True
INFO:root:fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI size: 1024
INFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:async validation: True
[SSD] fuse bn add relu: True
INFO:root:bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
fuse bn add relu: True
INFO:root:fuse bn add relu: True
MPI global rank: 792
INFO:root:bn all reduce fp16: False
[SSD] bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn relu: True
INFO:root:bn group: 8
bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
MPI local rank: 0
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:bn all reduce fp16: False
async validation: True
INFO:root:fuse bn relu: True
bn all reduce fp16: False
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
fuse bn relu: True
INFO:root:MPI global rank: 592
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
MPI size: 1024
INFO:root:[SSD] bn group: 8
[SSD] network: resnet34_v1
INFO:root:MPI local rank: 0
fuse bn add relu: True
INFO:root:MPI global rank: 184
MPI global rank: 384
INFO:root:bn group: 8
fuse bn relu: True
INFO:root:async validation: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI local rank: 0
bn group: 8
INFO:root:bn all reduce fp16: False
MPI local rank: 0
INFO:root:[SSD] network: resnet34_v1
bn all reduce fp16: False
INFO:root:async validation: True
fuse bn add relu: True
INFO:root:MPI size: 1024
[SSD] fuse bn relu: True
INFO:root:fuse bn relu: True
async validation: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
INFO:root:[SSD] network: resnet34_v1
bn group: 8
INFO:root:MPI global rank: 448
[SSD] fuse bn add relu: True
INFO:root:fuse bn add relu: True
MPI global rank: 288
INFO:root:[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
INFO:root:MPI local rank: 0
[SSD] bn group: 8
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
MPI local rank: 0
INFO:root:async validation: True
MPI size: 1024
INFO:root:bn all reduce fp16: False
MPI global rank: 912
INFO:root:[SSD] bn group: 8
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
async validation: True
INFO:root:[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI size: 1024
MPI local rank: 0
INFO:root:[SSD] bn group: 8
[SSD] fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
INFO:root:MPI global rank: 712
fuse bn relu: True
fuse bn add relu: True
bn group: 8
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
[SSD] bn group: 8
INFO:root:MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn group: 8
async validation: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:[SSD] bn group: 8
[SSD] fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:MPI size: 1024
[SSD] fuse bn add relu: True
INFO:root:fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:bn group: 8
MPI size: 1024
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI global rank: 496
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn all reduce fp16: False
MPI global rank: 488
INFO:root:[SSD] fuse bn relu: True
fuse bn relu: True
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
INFO:root:async validation: True
MPI local rank: 0
INFO:root:MPI size: 1024
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:fuse bn relu: True
fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
async validation: True
INFO:root:MPI global rank: 1000
[SSD] bn group: 8
INFO:root:fuse bn add relu: True
bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
INFO:root:MPI local rank: 0
[SSD] network: resnet34_v1
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
bn all reduce fp16: False
INFO:root:async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI size: 1024
INFO:root:MPI size: 1024
fuse bn relu: True
INFO:root:fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] bn group: 8
MPI global rank: 800
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
bn group: 8
INFO:root:MPI global rank: 1008
[SSD] fuse bn add relu: True
INFO:root:fuse bn add relu: True
fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
MPI local rank: 0
INFO:root:MPI local rank: 0
bn all reduce fp16: False
INFO:root:bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
fuse bn add relu: True
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
async validation: True
INFO:root:async validation: True
MPI size: 1024
INFO:root:[SSD] bn group: 8
bn group: 8
INFO:root:MPI size: 1024
loss scaling: 128.0
INFO:root:fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] network: resnet34_v1
MPI global rank: 392
INFO:root:MPI global rank: 1016
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
INFO:root:MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:[SSD] fuse bn relu: True
async validation: True
INFO:root:async validation: True
MPI size: 1024
INFO:root:MPI size: 1024
fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
fuse bn add relu: True
INFO:root:MPI global rank: 264
fuse bn relu: True
INFO:root:[SSD] bn group: 8
[SSD] fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 968
INFO:root:MPI local rank: 0
bn group: 8
INFO:root:[SSD] fuse bn relu: True
fuse bn add relu: True
INFO:root:async validation: True
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
MPI local rank: 0
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
INFO:root:[SSD] fuse bn relu: True
async validation: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] bn group: 8
MPI size: 1024
bn group: 8
[SSD] network: resnet34_v1
[SSD] fuse bn relu: True
MPI global rank: 752
bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
MPI local rank: 0
MPI size: 1024
[SSD] fuse bn relu: True
[SSD] bn group: 8
async validation: True
MPI global rank: 272
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
fuse bn relu: True
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn relu: True
bn group: 8
[SSD] bn group: 8
[SSD] fuse bn relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
[SSD] fuse bn add relu: True
bn group: 8
loss scaling: 128.0
MPI size: 1024
[SSD] bn group: 8
bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 536
MPI size: 1024
fuse bn relu: True
MPI local rank: 0
MPI global rank: 368
fuse bn add relu: True
fuse bn relu: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
bn group: 8
fuse bn add relu: True
[SSD] network: resnet34_v1
async validation: True
bn all reduce fp16: False
bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
MPI size: 1024
bn all reduce fp16: False
MPI size: 1024
[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 80
MPI global rank: 320
MPI local rank: 0
[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
MPI local rank: 0
async validation: True
[SSD] bn group: 8
[SSD] fuse bn add relu: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
[SSD] bn group: 8
[SSD] network: resnet34_v1
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn add relu: True
fuse bn add relu: True
[SSD] fuse bn add relu: True
fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn group: 8
[SSD] bn group: 8
[SSD] bn group: 8
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI size: 1024
fuse bn relu: True
bn all reduce fp16: False
fuse bn relu: True
MPI global rank: 920
fuse bn add relu: True
MPI size: 1024
fuse bn add relu: True
MPI local rank: 0
bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI global rank: 32
about to model_zoo.get_model( resnet34_v1 )
async validation: True
bn all reduce fp16: False
MPI local rank: 0
bn group: 8
[SSD] network: resnet34_v1
MPI size: 1024
async validation: True
bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 656
[SSD] network: resnet34_v1
MPI size: 1024
[SSD] fuse bn relu: True
MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 704
async validation: True
[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
MPI local rank: 0
[SSD] network: resnet34_v1
[SSD] bn group: 8
[SSD] fuse bn add relu: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
[SSD] network: resnet34_v1
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
bn all reduce fp16: False
fuse bn relu: True
[SSD] bn group: 8
MPI size: 1024
fuse bn add relu: True
bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 8
fuse bn relu: True
fuse bn add relu: True
bn all reduce fp16: False
MPI local rank: 0
fuse bn add relu: True
bn group: 8
MPI size: 1024
async validation: True
bn group: 8
bn all reduce fp16: False
MPI global rank: 432
[SSD] network: resnet34_v1
bn all reduce fp16: False
MPI size: 1024
MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
MPI global rank: 624
async validation: True
[SSD] fuse bn relu: True
MPI global rank: 936
MPI local rank: 0
[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
[SSD] bn group: 8
async validation: True
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
fuse bn relu: True
[SSD] bn group: 8
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] bn group: 8
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
fuse bn relu: True
fuse bn add relu: True
[SSD] fuse bn add relu: True
MPI size: 1024
bn group: 8
[SSD] bn group: 8
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 216
bn all reduce fp16: False
bn group: 8
MPI local rank: 0
MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn all reduce fp16: False
MPI global rank: 576
MPI size: 1024
fuse bn relu: True
async validation: True
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
[SSD] network: resnet34_v1
async validation: True
MPI global rank: 960
bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
MPI local rank: 0
bn all reduce fp16: False
[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
MPI size: 1024
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
MPI global rank: 96
[SSD] bn group: 8
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] bn group: 8
[SSD] fuse bn relu: True
async validation: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
fuse bn relu: True
loss scaling: 128.0
[SSD] fuse bn relu: True
bn all reduce fp16: False
fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn add relu: True
MPI size: 1024
bn group: 8
bn all reduce fp16: False
fuse bn relu: True
[SSD] bn group: 8
MPI global rank: 120
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
MPI local rank: 0
MPI size: 1024
bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
async validation: True
MPI global rank: 672
bn all reduce fp16: False
fuse bn relu: True
[SSD] network: resnet34_v1
MPI local rank: 0
MPI size: 1024
fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
MPI global rank: 168
bn group: 8
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
MPI local rank: 0
bn all reduce fp16: False
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
MPI size: 1024
[SSD] bn group: 8
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
MPI global rank: 0
loss scaling: 128.0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
[SSD] bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
fuse bn relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
[SSD] fuse bn relu: True
loss scaling: 128.0
bn all reduce fp16: False
bn group: 8
bn all reduce fp16: False
[SSD] fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI size: 1024
[SSD] bn group: 8
MPI size: 1024
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 736
MPI global rank: 88
fuse bn add relu: True
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
async validation: True
bn all reduce fp16: False
fuse bn relu: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
fuse bn add relu: True
MPI global rank: 952
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
[SSD] fuse bn relu: True
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
async validation: True
[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
MPI size: 1024
[SSD] network: resnet34_v1
[SSD] bn group: 8
MPI global rank: 640
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
fuse bn relu: True
[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] bn group: 8
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn relu: True
bn group: 8
loss scaling: 128.0
[SSD] fuse bn relu: True
fuse bn add relu: True
bn all reduce fp16: False
[SSD] fuse bn add relu: True
bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI size: 1024
bn all reduce fp16: False
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 976
MPI size: 1024
MPI global rank: 784
MPI local rank: 0
fuse bn relu: True
fuse bn relu: True
MPI local rank: 0
async validation: True
fuse bn add relu: True
fuse bn add relu: True
async validation: True
bn group: 8
loss scaling: 128.0
bn group: 8
[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
bn all reduce fp16: False
bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
MPI size: 1024
[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
MPI global rank: 928
MPI global rank: 280
[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
[SSD] bn group: 8
[SSD] bn group: 8
async validation: True
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
fuse bn relu: True
fuse bn add relu: True
[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
bn group: 8
[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
bn group: 8
bn all reduce fp16: False
bn all reduce fp16: False
[SSD] bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
[SSD] fuse bn add relu: True
MPI size: 1024
MPI global rank: 376
[SSD] bn group: 8
MPI global rank: 160
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
MPI local rank: 0
fuse bn add relu: True
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
async validation: True
async validation: True
bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
bn all reduce fp16: False
fuse bn relu: True
[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn relu: True
MPI global rank: 544
bn group: 8
[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
MPI local rank: 0
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
async validation: True
MPI size: 1024
[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
MPI global rank: 472
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
async validation: True
fuse bn relu: True
fuse bn relu: True
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
fuse bn add relu: True
fuse bn add relu: True
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
[SSD] fuse bn relu: True
bn all reduce fp16: False
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
fuse bn relu: True
MPI size: 1024
MPI size: 1024
[SSD] bn group: 8
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 808
MPI global rank: 664
MPI local rank: 0
MPI local rank: 0
bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
async validation: True
async validation: True
bn all reduce fp16: False
fuse bn relu: True
[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
MPI size: 1024
fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 520
bn group: 8
[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
MPI local rank: 0
bn all reduce fp16: False
[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
async validation: True
MPI size: 1024
[SSD] bn group: 8
[SSD] bn group: 8
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 200
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
loss scaling: 128.0
[SSD] fuse bn relu: True
bn group: 8
async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn add relu: True
bn all reduce fp16: False
[SSD] network: resnet34_v1
fuse bn relu: True
[SSD] bn group: 8
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
MPI global rank: 104
[SSD] fuse bn relu: True
bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI local rank: 0
async validation: True
[SSD] fuse bn add relu: True
bn all reduce fp16: False
fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] network: resnet34_v1
MPI size: 1024
fuse bn add relu: True
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 440
bn group: 8
[SSD] fuse bn relu: True
MPI local rank: 0
bn all reduce fp16: False
fuse bn relu: True
fuse bn add relu: True
[SSD] fuse bn add relu: True
async validation: True
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
[SSD] network: resnet34_v1
MPI global rank: 824
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
MPI local rank: 0
fuse bn relu: True
fuse bn add relu: True
[SSD] fuse bn relu: True
MPI size: 1024
async validation: True
bn group: 8
[SSD] fuse bn add relu: True
MPI global rank: 152
[SSD] network: resnet34_v1
bn all reduce fp16: False
[SSD] bn group: 8
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 176
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
[SSD] fuse bn add relu: True
MPI local rank: 0
[SSD] network: resnet34_v1
async validation: True
fuse bn add relu: True
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
bn all reduce fp16: False
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
[SSD] fuse bn relu: True
MPI global rank: 560
bn group: 8
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
MPI local rank: 0
bn all reduce fp16: False
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
async validation: True
MPI size: 1024
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
MPI global rank: 944
fuse bn add relu: True
[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI local rank: 0
bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn relu: True
async validation: True
bn all reduce fp16: False
[SSD] fuse bn relu: True
fuse bn add relu: True
[SSD] network: resnet34_v1
MPI size: 1024
[SSD] fuse bn add relu: True
bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 512
[SSD] bn group: 8
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
MPI local rank: 0
MPI size: 1024
loss scaling: 128.0
[SSD] fuse bn add relu: True
async validation: True
MPI global rank: 248
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] bn group: 8
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
async validation: True
fuse bn add relu: True
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
bn group: 8
[SSD] fuse bn add relu: True
fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn add relu: True
MPI global rank: 584
bn all reduce fp16: False
MPI size: 1024
fuse bn relu: True
[SSD] bn group: 8
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
async validation: True
MPI global rank: 992
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
[SSD] network: resnet34_v1
MPI local rank: 0
bn all reduce fp16: False
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
MPI size: 1024
MPI global rank: 424
MPI local rank: 0
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
async validation: True
bn group: 8
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
fuse bn relu: True
[SSD] bn group: 8
[SSD] fuse bn relu: True
MPI global rank: 112
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
[SSD] fuse bn add relu: True
MPI local rank: 0
bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] bn group: 8
async validation: True
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
fuse bn relu: True
[SSD] network: resnet34_v1
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI size: 1024
fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 856
bn group: 8
fuse bn relu: True
[SSD] fuse bn relu: True
fuse bn add relu: True
MPI local rank: 0
bn all reduce fp16: False
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
async validation: True
bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
MPI global rank: 400
loss scaling: 128.0
[SSD] network: resnet34_v1
MPI size: 1024
MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 208
async validation: True
fuse bn relu: True
[SSD] fuse bn relu: True
MPI local rank: 0
[SSD] network: resnet34_v1
fuse bn add relu: True
[SSD] fuse bn add relu: True
async validation: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
[SSD] bn group: 8
[SSD] network: resnet34_v1
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
[SSD] fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
MPI global rank: 760
[SSD] bn group: 8
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
MPI local rank: 0
[SSD] bn group: 8
async validation: True
fuse bn add relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
[SSD] network: resnet34_v1
fuse bn add relu: True
loss scaling: 128.0
bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI size: 1024
[SSD] fuse bn relu: True
bn all reduce fp16: False
fuse bn relu: True
[SSD] fuse bn add relu: True
MPI global rank: 592
MPI size: 1024
fuse bn add relu: True
[SSD] bn group: 8
MPI local rank: 0
MPI global rank: 184
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
async validation: True
MPI local rank: 0
bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] network: resnet34_v1
async validation: True
MPI size: 1024
fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
MPI global rank: 448
fuse bn add relu: True
[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
bn group: 8
[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
async validation: True
bn all reduce fp16: False
[SSD] bn group: 8
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 712
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
[SSD] fuse bn relu: True
MPI local rank: 0
bn group: 8
[SSD] fuse bn add relu: True
async validation: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
fuse bn add relu: True
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
MPI size: 1024
bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 496
MPI local rank: 0
loss scaling: 128.0
bn all reduce fp16: False
[SSD] fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
async validation: True
MPI size: 1024
[SSD] fuse bn add relu: True
MPI global rank: 1000
fuse bn relu: True
[SSD] network: resnet34_v1
[SSD] bn group: 8
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
bn group: 8
loss scaling: 128.0
[SSD] fuse bn relu: True
async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn all reduce fp16: False
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
MPI size: 1024
fuse bn relu: True
fuse bn add relu: True
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 1008
bn group: 8
[SSD] fuse bn relu: True
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI local rank: 0
[SSD] fuse bn add relu: True
bn all reduce fp16: False
fuse bn relu: True
async validation: True
[SSD] bn group: 8
MPI size: 1024
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
MPI global rank: 1016
bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
bn all reduce fp16: False
[SSD] fuse bn relu: True
async validation: True
MPI size: 1024
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
MPI global rank: 264
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
[SSD] fuse bn relu: True
async validation: True
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
[14:55:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
INFO:root:COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
INFO:root:COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
INFO:root:COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1621374934087, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 117266, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 373}}
:::MLLOG {"namespace": "", "time_ms": 1621374934087, "event_type": "POINT_IN_TIME", "key": "max_samples", "value": 1, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 374}}
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1621374934088, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_warmup_steps", "value": 1336, "metadata": {"file": "/workspace/ssd/lr_scheduler.py", "lineno": 31}}
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1621374934088, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_warmup_factor", "value": 0, "metadata": {"file": "/workspace/ssd/lr_scheduler.py", "lineno": 32}}
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1621374934088, "event_type": "POINT_IN_TIME", "key": "opt_base_learning_rate", "value": 0.336, "metadata": {"file": "/workspace/ssd/lr_scheduler.py", "lineno": 34}}
:::MLLOG {"namespace": "", "time_ms": 1621374934089, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_decay_boundary_epochs", "value": [68, 85], "metadata": {"file": "/workspace/ssd/lr_scheduler.py", "lineno": 35}}
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
INFO:root:COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1621374934100, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 5000, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 417}}
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:55:34] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
:::MLLOG {"namespace": "", "time_ms": 1621374936042, "event_type": "POINT_IN_TIME", "key": "opt_weight_decay", "value": 4e-05, "metadata": {"file": "/workspace/ssd/trainer.py", "lineno": 29}}
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
INFO:root:Running training dry runs ...
COCO reader: TFRecord
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
[luna-0041:0:1988576 - context.c:581] INFO job (ID: 17873379190044312148) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0041:0:1988576 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x8 caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0041:0:1988576 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x47 caps:0x16
[luna-0041:0:1988576 - comm.c:385] INFO [group#:0] group id:20 tree idx:0 tree_type:LLT rail_idx:0 group size:128 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0x6e0a00000020) mlid:c00e
[luna-0041:0:1988576 - comm.c:385] INFO [group#:1] group id:20 tree idx:1 tree_type:SAT rail_idx:0 group size:128 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0041:0:1988570 - context.c:581] INFO job (ID: 17873379295922559433) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0041:0:1988570 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x9 caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0041:0:1988570 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x48 caps:0x16
[luna-0041:0:1988570 - comm.c:385] INFO [group#:0] group id:0 tree idx:0 tree_type:LLT rail_idx:0 group size:128 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0x6f0a00000000) mlid:c00f
[luna-0041:0:1988570 - comm.c:385] INFO [group#:1] group id:0 tree idx:1 tree_type:SAT rail_idx:0 group size:128 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0041:0:1988575 - context.c:581] INFO job (ID: 17873379501576913897) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0041:0:1988575 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0xa caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0041:0:1988575 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x49 caps:0x16
[luna-0041:0:1988575 - comm.c:385] INFO [group#:0] group id:1 tree idx:0 tree_type:LLT rail_idx:0 group size:128 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0x700a00000001) mlid:c010
[luna-0041:0:1988575 - comm.c:385] INFO [group#:1] group id:1 tree idx:1 tree_type:SAT rail_idx:0 group size:128 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0041:0:1988569 - context.c:581] INFO job (ID: 17873378680866655592) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0041:0:1988569 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0xb caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0041:0:1988569 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x4a caps:0x16
[luna-0041:0:1988569 - comm.c:385] INFO [group#:0] group id:2 tree idx:0 tree_type:LLT rail_idx:0 group size:128 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0x710a00000002) mlid:c011
[luna-0041:0:1988569 - comm.c:385] INFO [group#:1] group id:2 tree idx:1 tree_type:SAT rail_idx:0 group size:128 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0041:0:1988568 - context.c:581] INFO job (ID: 17873378470410135154) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0041:0:1988568 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0xc caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0041:0:1988568 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x4b caps:0x16
[luna-0041:0:1988568 - comm.c:385] INFO [group#:0] group id:3 tree idx:0 tree_type:LLT rail_idx:0 group size:128 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0x720a00000003) mlid:c012
[luna-0041:0:1988568 - comm.c:385] INFO [group#:1] group id:3 tree idx:1 tree_type:SAT rail_idx:0 group size:128 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0041:0:1988573 - context.c:581] INFO job (ID: 17873379148004339506) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0041:0:1988573 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0xd caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0041:0:1988573 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x4c caps:0x16
[luna-0041:0:1988573 - comm.c:385] INFO [group#:0] group id:4 tree idx:0 tree_type:LLT rail_idx:0 group size:128 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0x730a00000004) mlid:c013
[luna-0041:0:1988573 - comm.c:385] INFO [group#:1] group id:4 tree idx:1 tree_type:SAT rail_idx:0 group size:128 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0041:0:1988564 - context.c:581] INFO job (ID: 17873379138337686807) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0041:0:1988564 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0xe caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0041:0:1988564 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x4d caps:0x16
[luna-0041:0:1988564 - comm.c:385] INFO [group#:0] group id:5 tree idx:0 tree_type:LLT rail_idx:0 group size:128 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0x740a00000005) mlid:c014
[luna-0041:0:1988564 - comm.c:385] INFO [group#:1] group id:5 tree idx:1 tree_type:SAT rail_idx:0 group size:128 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0041:0:1988574 - context.c:581] INFO job (ID: 17873379107528397835) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0041:0:1988574 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x10 caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0041:0:1988574 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x4f caps:0x16
[luna-0041:0:1988574 - comm.c:385] INFO [group#:0] group id:6 tree idx:0 tree_type:LLT rail_idx:0 group size:128 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0x750a00000006) mlid:c015
[luna-0041:0:1988574 - comm.c:385] INFO [group#:1] group id:6 tree idx:1 tree_type:SAT rail_idx:0 group size:128 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[2021-05-18 15:01:42.171258: W /tmp/pip-req-build-a0o11jgy/horovod/common/stall_inspector.cc:105] One or more tensors were submitted to be reduced, gathered or broadcasted by subset of ranks and are waiting for remainder of ranks for more than 60 seconds. This may indicate that different ranks are trying to submit different tensors or that only subset of ranks is submitting tensors, which will cause deadlock.
Missing ranks:
320: [horovod_allreduce.0:176_10of61, horovod_allreduce.0:176_11of61, horovod_allreduce.0:176_12of61, horovod_allreduce.0:176_13of61, horovod_allreduce.0:176_14of61, horovod_allreduce.0:176_15of61 ...]
321: [horovod_allreduce.0:176_10of61, horovod_allreduce.0:176_11of61, horovod_allreduce.0:176_12of61, horovod_allreduce.0:176_13of61, horovod_allreduce.0:176_14of61, horovod_allreduce.0:176_15of61 ...]
322: [horovod_allreduce.0:176_10of61, horovod_allreduce.0:176_11of61, horovod_allreduce.0:176_12of61, horovod_allreduce.0:176_13of61, horovod_allreduce.0:176_14of61, horovod_allreduce.0:176_15of61 ...]
323: [horovod_allreduce.0:176_10of61, horovod_allreduce.0:176_11of61, horovod_allreduce.0:176_12of61, horovod_allreduce.0:176_13of61, horovod_allreduce.0:176_14of61, horovod_allreduce.0:176_15of61 ...]
324: [horovod_allreduce.0:176_10of61, horovod_allreduce.0:176_11of61, horovod_allreduce.0:176_12of61, horovod_allreduce.0:176_13of61, horovod_allreduce.0:176_14of61, horovod_allreduce.0:176_15of61 ...]
325: [horovod_allreduce.0:176_10of61, horovod_allreduce.0:176_11of61, horovod_allreduce.0:176_12of61, horovod_allreduce.0:176_13of61, horovod_allreduce.0:176_14of61, horovod_allreduce.0:176_15of61 ...]
326: [horovod_allreduce.0:176_10of61, horovod_allreduce.0:176_11of61, horovod_allreduce.0:176_12of61, horovod_allreduce.0:176_13of61, horovod_allreduce.0:176_14of61, horovod_allreduce.0:176_15of61 ...]
327: [horovod_allreduce.0:176_10of61, horovod_allreduce.0:176_11of61, horovod_allreduce.0:176_12of61, horovod_allreduce.0:176_13of61, horovod_allreduce.0:176_14of61, horovod_allreduce.0:176_15of61 ...]
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Done
Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
INFO:root:Done
Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Cleaning the dummy pipelines ...
Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
INFO:root:Done
Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
INFO:root:Done
Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Cleaning the dummy pipelines ...
Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Cleaning the dummy pipelines ...
Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
INFO:root:Done
Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Cleaning the dummy pipelines ...
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Cleaning the dummy pipelines ...
Done
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Done
Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
INFO:root:Done
Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
INFO:root:Done
Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
INFO:root:Done
Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
:::MLLOG {"namespace": "", "time_ms": 1621375307041, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307041, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_batchnorm0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307042, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_batchnorm0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307042, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307042, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307042, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307042, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307042, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307042, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307042, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307042, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307042, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307042, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307042, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307042, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307042, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_conv4_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307042, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm4_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307042, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm4_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307043, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_conv5_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307043, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm5_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307043, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm5_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307043, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307043, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307043, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307043, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307043, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307043, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307043, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307043, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307043, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307043, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307043, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307043, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307043, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv4_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307044, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm4_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307044, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm4_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307044, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv5_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307044, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm5_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307044, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm5_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307044, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv6_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307044, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm6_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307044, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm6_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307044, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv7_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307044, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm7_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307044, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm7_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307044, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv8_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307044, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm8_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307044, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm8_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307044, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307044, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307044, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307045, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307045, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307045, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307045, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307045, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307045, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307045, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307045, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307045, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307045, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv4_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307045, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm4_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307045, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm4_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307045, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv5_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307045, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm5_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307045, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm5_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307045, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv6_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307045, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm6_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307046, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm6_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307046, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv7_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307046, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm7_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307046, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm7_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307046, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv8_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307046, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm8_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307046, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm8_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307046, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv9_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307046, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm9_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307046, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm9_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307046, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv10_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307046, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm10_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307046, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm10_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307046, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv11_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307046, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm11_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307046, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm11_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307046, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv12_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307047, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm12_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307047, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm12_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307047, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307047, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv0_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307047, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307047, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv0_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307047, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307047, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307047, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307047, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307047, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307047, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv2_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307047, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307047, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv2_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307047, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307047, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv3_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307047, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307048, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv3_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307048, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv4_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307048, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv4_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307048, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv4_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307048, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv4_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307048, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor0_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307048, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor0_conv0_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307048, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor1_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307048, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor1_conv0_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307048, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor2_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307048, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor2_conv0_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307048, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor3_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307048, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor3_conv0_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307048, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor4_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307048, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor4_conv0_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307048, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor5_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621375307049, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor5_conv0_bias"}}
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
:::MLLOG {"namespace": "", "time_ms": 1621375307651, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 522}}
:::MLLOG {"namespace": "", "time_ms": 1621375307652, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 526}}
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
:::MLLOG {"namespace": "", "time_ms": 1621375308757, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 24, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 110}}
:::MLLOG {"namespace": "", "time_ms": 1621375308757, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3072, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 111}}
Training from epoch: 1
:::MLLOG {"namespace": "", "time_ms": 1621375308757, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 3, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 112}}
:::MLLOG {"namespace": "", "time_ms": 1621375308757, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 115}}
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
:::MLLOG {"namespace": "", "time_ms": 1621375308757, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 1, "current_iter_num": 0}}
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:[Training][Epoch 1] training time: 0.543 [sec],avg speed: 215153.949 [imgs/sec],loss=19.815
[Training][Epoch 1] training time: 0.543 [sec],avg speed: 215153.949 [imgs/sec],loss=19.815
:::MLLOG {"namespace": "", "time_ms": 1621375309300, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 215153.94886676726, "lr": 0.009556886227544914, "loss": 19.815142280177067}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 1}}
:::MLLOG {"namespace": "", "time_ms": 1621375309300, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 215153.94886676726, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375309300, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1621375309301, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 2, "current_iter_num": 0}}
INFO:root:[Training][Epoch 2] training time: 0.315 [sec],avg speed: 370754.290 [imgs/sec],loss=12.732
[Training][Epoch 2] training time: 0.315 [sec],avg speed: 370754.290 [imgs/sec],loss=12.732
:::MLLOG {"namespace": "", "time_ms": 1621375309616, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 370754.2898300952, "lr": 0.019365269461077805, "loss": 12.73172062321713}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 2}}
:::MLLOG {"namespace": "", "time_ms": 1621375309616, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 370754.2898300952, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375309616, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 2}}
:::MLLOG {"namespace": "", "time_ms": 1621375309616, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 3, "current_iter_num": 0}}
INFO:root:[Training][Iteration 100][Epoch 3, Batch 22/39] lr: 0.02515, training time: 8.350 [ms], speed: 367918.347 [imgs/sec], loss=9.626
[Training][Iteration 100][Epoch 3, Batch 22/39] lr: 0.02515, training time: 8.350 [ms], speed: 367918.347 [imgs/sec], loss=9.626
:::MLLOG {"namespace": "", "time_ms": 1621375309800, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 367918.34730240476, "loss": 9.626270294189453}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [3, 100]}}
:::MLLOG {"namespace": "", "time_ms": 1621375309800, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 367918.34730240476, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 3] training time: 0.326 [sec],avg speed: 357898.506 [imgs/sec],loss=9.290
[Training][Epoch 3] training time: 0.326 [sec],avg speed: 357898.506 [imgs/sec],loss=9.290
:::MLLOG {"namespace": "", "time_ms": 1621375309942, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 357898.50565216853, "lr": 0.029173652694610752, "loss": 9.289780378341675}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 3}}
:::MLLOG {"namespace": "", "time_ms": 1621375309942, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 357898.50565216853, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375309943, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1621375309943, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 4, "current_iter_num": 0}}
INFO:root:[Training][Epoch 4] training time: 0.307 [sec],avg speed: 380260.057 [imgs/sec],loss=8.740
[Training][Epoch 4] training time: 0.307 [sec],avg speed: 380260.057 [imgs/sec],loss=8.740
:::MLLOG {"namespace": "", "time_ms": 1621375310250, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 380260.0570079892, "lr": 0.0389820359281437, "loss": 8.73950477650291}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621375310250, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 380260.0570079892, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375310250, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621375310250, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 5, "current_iter_num": 0}}
INFO:root:[Training][Epoch 5] training time: 0.299 [sec],avg speed: 389917.379 [imgs/sec],loss=8.487
[Training][Epoch 5] training time: 0.299 [sec],avg speed: 389917.379 [imgs/sec],loss=8.487
:::MLLOG {"namespace": "", "time_ms": 1621375310550, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 389917.3793351692, "lr": 0.048790419161676646, "loss": 8.486879009949533}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 5}}
:::MLLOG {"namespace": "", "time_ms": 1621375310550, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 389917.3793351692, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375310550, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 5}}
:::MLLOG {"namespace": "", "time_ms": 1621375310560, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 5}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 192.763 [ms], allgather: 39.113 [ms], asnumpy: 7.131 [ms], speed: 20919.765 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 192.763 [ms], allgather: 39.113 [ms], asnumpy: 7.131 [ms], speed: 20919.765 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621375310800, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 6, "current_iter_num": 0}}
INFO:root:[Training][Iteration 200][Epoch 6, Batch 5/39] lr: 0.05030, training time: 11.888 [ms], speed: 258415.399 [imgs/sec], loss=8.457
[Training][Iteration 200][Epoch 6, Batch 5/39] lr: 0.05030, training time: 11.888 [ms], speed: 258415.399 [imgs/sec], loss=8.457
:::MLLOG {"namespace": "", "time_ms": 1621375310859, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 258415.39890736685, "loss": 8.456742286682129}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [6, 200]}}
:::MLLOG {"namespace": "", "time_ms": 1621375310859, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 258415.39890736685, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 6] training time: 0.339 [sec],avg speed: 344618.179 [imgs/sec],loss=8.218
[Training][Epoch 6] training time: 0.339 [sec],avg speed: 344618.179 [imgs/sec],loss=8.218
:::MLLOG {"namespace": "", "time_ms": 1621375311139, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 344618.1790018011, "lr": 0.05859880239520959, "loss": 8.217813692594829}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 6}}
:::MLLOG {"namespace": "", "time_ms": 1621375311139, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 344618.1790018011, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375311139, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 6}}
:::MLLOG {"namespace": "", "time_ms": 1621375311139, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 7, "current_iter_num": 0}}
INFO:root:[Training][Epoch 7] training time: 0.298 [sec],avg speed: 391747.087 [imgs/sec],loss=8.203
[Training][Epoch 7] training time: 0.298 [sec],avg speed: 391747.087 [imgs/sec],loss=8.203
:::MLLOG {"namespace": "", "time_ms": 1621375311437, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 391747.0868526139, "lr": 0.06840718562874248, "loss": 8.203327517760428}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1621375311437, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 391747.0868526139, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375311437, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1621375311437, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 8, "current_iter_num": 0}}
INFO:root:[Training][Iteration 300][Epoch 8, Batch 27/39] lr: 0.07545, training time: 7.889 [ms], speed: 389405.727 [imgs/sec], loss=6.386
[Training][Iteration 300][Epoch 8, Batch 27/39] lr: 0.07545, training time: 7.889 [ms], speed: 389405.727 [imgs/sec], loss=6.386
:::MLLOG {"namespace": "", "time_ms": 1621375311651, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 389405.72735179256, "loss": 6.385730743408203}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [8, 300]}}
:::MLLOG {"namespace": "", "time_ms": 1621375311651, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 389405.72735179256, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 8] training time: 0.304 [sec],avg speed: 383716.341 [imgs/sec],loss=7.549
[Training][Epoch 8] training time: 0.304 [sec],avg speed: 383716.341 [imgs/sec],loss=7.549
:::MLLOG {"namespace": "", "time_ms": 1621375311742, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 383716.3408027047, "lr": 0.07821556886227543, "loss": 7.548733849274485}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 8}}
:::MLLOG {"namespace": "", "time_ms": 1621375311742, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 383716.3408027047, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375311742, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1621375311742, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 9, "current_iter_num": 0}}
INFO:root:[Training][Epoch 9] training time: 0.319 [sec],avg speed: 366145.251 [imgs/sec],loss=7.487
[Training][Epoch 9] training time: 0.319 [sec],avg speed: 366145.251 [imgs/sec],loss=7.487
:::MLLOG {"namespace": "", "time_ms": 1621375312061, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 366145.2505702017, "lr": 0.08802395209580838, "loss": 7.486553292525442}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 9}}
:::MLLOG {"namespace": "", "time_ms": 1621375312062, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 366145.2505702017, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375312062, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 9}}
:::MLLOG {"namespace": "", "time_ms": 1621375312062, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 10, "current_iter_num": 0}}
INFO:root:[Training][Epoch 10] training time: 0.298 [sec],avg speed: 392107.869 [imgs/sec],loss=7.184
[Training][Epoch 10] training time: 0.298 [sec],avg speed: 392107.869 [imgs/sec],loss=7.184
:::MLLOG {"namespace": "", "time_ms": 1621375312360, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 392107.8685195759, "lr": 0.0978323353293413, "loss": 7.184239111448589}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 10}}
:::MLLOG {"namespace": "", "time_ms": 1621375312360, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 392107.8685195759, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375312360, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 10}}
:::MLLOG {"namespace": "", "time_ms": 1621375312371, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 10}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 46.080 [ms], allgather: 31.596 [ms], asnumpy: 6.578 [ms], speed: 59343.337 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 46.080 [ms], allgather: 31.596 [ms], asnumpy: 6.578 [ms], speed: 59343.337 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621375312456, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 11, "current_iter_num": 0}}
INFO:root:[Training][Iteration 400][Epoch 11, Batch 10/39] lr: 0.10060, training time: 9.911 [ms], speed: 309945.561 [imgs/sec], loss=4.417
[Training][Iteration 400][Epoch 11, Batch 10/39] lr: 0.10060, training time: 9.911 [ms], speed: 309945.561 [imgs/sec], loss=4.417
:::MLLOG {"namespace": "", "time_ms": 1621375312555, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 309945.56097326294, "loss": 4.416513442993164}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [11, 400]}}
:::MLLOG {"namespace": "", "time_ms": 1621375312555, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 309945.56097326294, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
:::MLLOG {"namespace": "", "time_ms": 1621375312644, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 5}}
:::MLLOG {"namespace": "", "time_ms": 1621375312644, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.0013063661682110523, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 5}}
loading annotations into memory...
Done (t=0.10s)
creating index...
Loading and preparing results...
DONE (t=0.34s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.96s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.00131
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.00352
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.00096
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.00365
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.00237
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.00397
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.00554
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.00554
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
INFO:root:[Training][Epoch 11] training time: 0.333 [sec],avg speed: 350054.601 [imgs/sec],loss=7.005
[Training][Epoch 11] training time: 0.333 [sec],avg speed: 350054.601 [imgs/sec],loss=7.005
:::MLLOG {"namespace": "", "time_ms": 1621375312789, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 350054.6014010012, "lr": 0.10764071856287424, "loss": 7.005130454113609}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1621375312789, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 350054.6014010012, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375312790, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1621375312790, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 12, "current_iter_num": 0}}
/usr/local/lib/python3.8/dist-packages/loky/process_executor.py:688: UserWarning: A worker stopped while some jobs were given to the executor. This can be caused by a too short worker timeout or by a memory leak.
  warnings.warn(
INFO:root:[Training][Epoch 12] training time: 0.383 [sec],avg speed: 304563.083 [imgs/sec],loss=6.505
[Training][Epoch 12] training time: 0.383 [sec],avg speed: 304563.083 [imgs/sec],loss=6.505
:::MLLOG {"namespace": "", "time_ms": 1621375313173, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 304563.0828788873, "lr": 0.11744910179640719, "loss": 6.505132731638457}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 12}}
:::MLLOG {"namespace": "", "time_ms": 1621375313174, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 304563.0828788873, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375313174, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1621375313174, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 13, "current_iter_num": 0}}
INFO:root:[Training][Iteration 500][Epoch 13, Batch 32/39] lr: 0.12575, training time: 8.386 [ms], speed: 366316.973 [imgs/sec], loss=6.634
[Training][Iteration 500][Epoch 13, Batch 32/39] lr: 0.12575, training time: 8.386 [ms], speed: 366316.973 [imgs/sec], loss=6.634
:::MLLOG {"namespace": "", "time_ms": 1621375313442, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 366316.97286540025, "loss": 6.633817672729492}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [13, 500]}}
:::MLLOG {"namespace": "", "time_ms": 1621375313442, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 366316.97286540025, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 13] training time: 0.316 [sec],avg speed: 369852.499 [imgs/sec],loss=6.504
[Training][Epoch 13] training time: 0.316 [sec],avg speed: 369852.499 [imgs/sec],loss=6.504
:::MLLOG {"namespace": "", "time_ms": 1621375313489, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 369852.4988208563, "lr": 0.1272574850299401, "loss": 6.503523249375193}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 13}}
:::MLLOG {"namespace": "", "time_ms": 1621375313490, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 369852.4988208563, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375313490, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 13}}
:::MLLOG {"namespace": "", "time_ms": 1621375313490, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 14, "current_iter_num": 0}}
INFO:root:[Training][Epoch 14] training time: 0.309 [sec],avg speed: 377188.610 [imgs/sec],loss=6.522
[Training][Epoch 14] training time: 0.309 [sec],avg speed: 377188.610 [imgs/sec],loss=6.522
:::MLLOG {"namespace": "", "time_ms": 1621375313799, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 377188.6101807727, "lr": 0.13706586826347306, "loss": 6.522412889882138}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621375313800, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 377188.6101807727, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375313800, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621375313800, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 15, "current_iter_num": 0}}
INFO:root:[Training][Epoch 15] training time: 0.374 [sec],avg speed: 311769.542 [imgs/sec],loss=6.033
[Training][Epoch 15] training time: 0.374 [sec],avg speed: 311769.542 [imgs/sec],loss=6.033
:::MLLOG {"namespace": "", "time_ms": 1621375314174, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 311769.5421729095, "lr": 0.14687425149700598, "loss": 6.0332715636805485}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1621375314175, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 311769.5421729095, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375314175, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1621375314185, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 15}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 55.400 [ms], allgather: 33.497 [ms], asnumpy: 4.593 [ms], speed: 53481.312 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 55.400 [ms], allgather: 33.497 [ms], asnumpy: 4.593 [ms], speed: 53481.312 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621375314279, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 16, "current_iter_num": 0}}
INFO:root:[Training][Iteration 600][Epoch 16, Batch 15/39] lr: 0.15090, training time: 11.226 [ms], speed: 273641.098 [imgs/sec], loss=3.913
[Training][Iteration 600][Epoch 16, Batch 15/39] lr: 0.15090, training time: 11.226 [ms], speed: 273641.098 [imgs/sec], loss=3.913
:::MLLOG {"namespace": "", "time_ms": 1621375314448, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 273641.09782911866, "loss": 3.9127418994903564}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [16, 600]}}
:::MLLOG {"namespace": "", "time_ms": 1621375314448, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 273641.09782911866, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 16] training time: 0.370 [sec],avg speed: 315540.416 [imgs/sec],loss=5.642
[Training][Epoch 16] training time: 0.370 [sec],avg speed: 315540.416 [imgs/sec],loss=5.642
:::MLLOG {"namespace": "", "time_ms": 1621375314649, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 315540.41564805724, "lr": 0.15668263473053892, "loss": 5.642168848138106}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 16}}
:::MLLOG {"namespace": "", "time_ms": 1621375314649, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 315540.41564805724, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375314649, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 16}}
:::MLLOG {"namespace": "", "time_ms": 1621375314650, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 17, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621375314803, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 10}}
:::MLLOG {"namespace": "", "time_ms": 1621375314803, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.015906729282699573, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 10}}
INFO:root:[Training][Epoch 17] training time: 0.363 [sec],avg speed: 321708.982 [imgs/sec],loss=6.039
[Training][Epoch 17] training time: 0.363 [sec],avg speed: 321708.982 [imgs/sec],loss=6.039
:::MLLOG {"namespace": "", "time_ms": 1621375315013, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 321708.98183782166, "lr": 0.16649101796407187, "loss": 6.039185517712643}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 17}}
:::MLLOG {"namespace": "", "time_ms": 1621375315013, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 321708.98183782166, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375315013, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 17}}
:::MLLOG {"namespace": "", "time_ms": 1621375315013, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 18, "current_iter_num": 0}}
INFO:root:[Training][Iteration 700][Epoch 18, Batch 37/39] lr: 0.17605, training time: 8.690 [ms], speed: 353509.405 [imgs/sec], loss=5.730
[Training][Iteration 700][Epoch 18, Batch 37/39] lr: 0.17605, training time: 8.690 [ms], speed: 353509.405 [imgs/sec], loss=5.730
:::MLLOG {"namespace": "", "time_ms": 1621375315335, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 353509.40523032844, "loss": 5.72974157333374}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [18, 700]}}
:::MLLOG {"namespace": "", "time_ms": 1621375315335, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 353509.40523032844, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 18] training time: 0.331 [sec],avg speed: 352942.560 [imgs/sec],loss=5.863
[Training][Epoch 18] training time: 0.331 [sec],avg speed: 352942.560 [imgs/sec],loss=5.863
:::MLLOG {"namespace": "", "time_ms": 1621375315344, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 352942.55962181813, "lr": 0.1762994011976048, "loss": 5.863104826525638}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 18}}
:::MLLOG {"namespace": "", "time_ms": 1621375315344, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 352942.55962181813, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375315344, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 18}}
:::MLLOG {"namespace": "", "time_ms": 1621375315345, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 19, "current_iter_num": 0}}
INFO:root:[Training][Epoch 19] training time: 0.302 [sec],avg speed: 386610.440 [imgs/sec],loss=5.345
[Training][Epoch 19] training time: 0.302 [sec],avg speed: 386610.440 [imgs/sec],loss=5.345
:::MLLOG {"namespace": "", "time_ms": 1621375315647, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 386610.4404043084, "lr": 0.18610778443113773, "loss": 5.345170378684998}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1621375315647, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 386610.4404043084, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375315647, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1621375315647, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 20, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621375315846, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1621375315847, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.04664100423349527, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 15}}
INFO:root:[Training][Epoch 20] training time: 0.297 [sec],avg speed: 393554.185 [imgs/sec],loss=5.367
[Training][Epoch 20] training time: 0.297 [sec],avg speed: 393554.185 [imgs/sec],loss=5.367
:::MLLOG {"namespace": "", "time_ms": 1621375315944, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 393554.1853431438, "lr": 0.19591616766467065, "loss": 5.366607226823506}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 20}}
:::MLLOG {"namespace": "", "time_ms": 1621375315944, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 393554.1853431438, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375315944, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1621375315955, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 20}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 51.986 [ms], allgather: 28.110 [ms], asnumpy: 4.215 [ms], speed: 59304.069 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 51.986 [ms], allgather: 28.110 [ms], asnumpy: 4.215 [ms], speed: 59304.069 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621375316040, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 21, "current_iter_num": 0}}
INFO:root:[Training][Iteration 800][Epoch 21, Batch 20/39] lr: 0.20120, training time: 8.533 [ms], speed: 360012.514 [imgs/sec], loss=7.006
[Training][Iteration 800][Epoch 21, Batch 20/39] lr: 0.20120, training time: 8.533 [ms], speed: 360012.514 [imgs/sec], loss=7.006
:::MLLOG {"namespace": "", "time_ms": 1621375316211, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 360012.5142811639, "loss": 7.005802631378174}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [21, 800]}}
:::MLLOG {"namespace": "", "time_ms": 1621375316211, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 360012.5142811639, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 21] training time: 0.313 [sec],avg speed: 372703.004 [imgs/sec],loss=5.442
[Training][Epoch 21] training time: 0.313 [sec],avg speed: 372703.004 [imgs/sec],loss=5.442
:::MLLOG {"namespace": "", "time_ms": 1621375316353, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 372703.00357230665, "lr": 0.2057245508982036, "loss": 5.442082267058523}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 21}}
:::MLLOG {"namespace": "", "time_ms": 1621375316353, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 372703.00357230665, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375316353, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 21}}
:::MLLOG {"namespace": "", "time_ms": 1621375316354, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 22, "current_iter_num": 0}}
INFO:root:[Training][Epoch 22] training time: 0.298 [sec],avg speed: 392209.949 [imgs/sec],loss=5.233
[Training][Epoch 22] training time: 0.298 [sec],avg speed: 392209.949 [imgs/sec],loss=5.233
:::MLLOG {"namespace": "", "time_ms": 1621375316651, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 392209.9490250549, "lr": 0.21553293413173652, "loss": 5.233072205593712}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 22}}
:::MLLOG {"namespace": "", "time_ms": 1621375316652, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 392209.9490250549, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375316652, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 22}}
:::MLLOG {"namespace": "", "time_ms": 1621375316652, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 23, "current_iter_num": 0}}
INFO:root:[Training][Epoch 23] training time: 0.322 [sec],avg speed: 362526.616 [imgs/sec],loss=5.127
[Training][Epoch 23] training time: 0.322 [sec],avg speed: 362526.616 [imgs/sec],loss=5.127
:::MLLOG {"namespace": "", "time_ms": 1621375316974, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 362526.6155069547, "lr": 0.22534131736526947, "loss": 5.127357395071733}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1621375316974, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 362526.6155069547, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375316974, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1621375316975, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 24, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621375316996, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1621375316996, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.0836485198598551, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 20}}
INFO:root:[Training][Iteration 900][Epoch 24, Batch 3/39] lr: 0.22635, training time: 7.962 [ms], speed: 385840.968 [imgs/sec], loss=4.448
[Training][Iteration 900][Epoch 24, Batch 3/39] lr: 0.22635, training time: 7.962 [ms], speed: 385840.968 [imgs/sec], loss=4.448
:::MLLOG {"namespace": "", "time_ms": 1621375316999, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 385840.9676691654, "loss": 4.448452472686768}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [24, 900]}}
:::MLLOG {"namespace": "", "time_ms": 1621375316999, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 385840.9676691654, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 24] training time: 0.302 [sec],avg speed: 386977.722 [imgs/sec],loss=5.153
[Training][Epoch 24] training time: 0.302 [sec],avg speed: 386977.722 [imgs/sec],loss=5.153
:::MLLOG {"namespace": "", "time_ms": 1621375317276, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 386977.7221102116, "lr": 0.2351497005988024, "loss": 5.152658882894014}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 24}}
:::MLLOG {"namespace": "", "time_ms": 1621375317277, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 386977.7221102116, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375317277, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1621375317277, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 25, "current_iter_num": 0}}
INFO:root:[Training][Epoch 25] training time: 0.300 [sec],avg speed: 389190.892 [imgs/sec],loss=4.953
[Training][Epoch 25] training time: 0.300 [sec],avg speed: 389190.892 [imgs/sec],loss=4.953
:::MLLOG {"namespace": "", "time_ms": 1621375317577, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 389190.8918193221, "lr": 0.24495808383233533, "loss": 4.952877546611585}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 25}}
:::MLLOG {"namespace": "", "time_ms": 1621375317577, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 389190.8918193221, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375317577, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 25}}
:::MLLOG {"namespace": "", "time_ms": 1621375317587, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 25}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 44.349 [ms], allgather: 30.085 [ms], asnumpy: 5.323 [ms], speed: 62689.505 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 44.349 [ms], allgather: 30.085 [ms], asnumpy: 5.323 [ms], speed: 62689.505 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621375317668, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 26, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1000][Epoch 26, Batch 25/39] lr: 0.25150, training time: 7.946 [ms], speed: 386592.675 [imgs/sec], loss=5.389
[Training][Iteration 1000][Epoch 26, Batch 25/39] lr: 0.25150, training time: 7.946 [ms], speed: 386592.675 [imgs/sec], loss=5.389
:::MLLOG {"namespace": "", "time_ms": 1621375317866, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 386592.6745755999, "loss": 5.388647556304932}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [26, 1000]}}
:::MLLOG {"namespace": "", "time_ms": 1621375317867, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 386592.6745755999, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 26] training time: 0.303 [sec],avg speed: 384818.613 [imgs/sec],loss=5.087
[Training][Epoch 26] training time: 0.303 [sec],avg speed: 384818.613 [imgs/sec],loss=5.087
:::MLLOG {"namespace": "", "time_ms": 1621375317971, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 384818.61345723993, "lr": 0.25476646706586825, "loss": 5.086959387126722}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 26}}
:::MLLOG {"namespace": "", "time_ms": 1621375317971, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 384818.61345723993, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375317971, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 26}}
:::MLLOG {"namespace": "", "time_ms": 1621375317972, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 27, "current_iter_num": 0}}
INFO:root:[Training][Epoch 27] training time: 0.300 [sec],avg speed: 389671.608 [imgs/sec],loss=4.766
[Training][Epoch 27] training time: 0.300 [sec],avg speed: 389671.608 [imgs/sec],loss=4.766
:::MLLOG {"namespace": "", "time_ms": 1621375318271, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 389671.6076624937, "lr": 0.2645748502994012, "loss": 4.766317599698117}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1621375318271, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 389671.6076624937, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375318272, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1621375318272, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 28, "current_iter_num": 0}}
INFO:root:[Training][Epoch 28] training time: 0.312 [sec],avg speed: 373712.301 [imgs/sec],loss=4.595
[Training][Epoch 28] training time: 0.312 [sec],avg speed: 373712.301 [imgs/sec],loss=4.595
:::MLLOG {"namespace": "", "time_ms": 1621375318584, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 373712.3010420793, "lr": 0.27438323353293415, "loss": 4.595404904139669}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 28}}
:::MLLOG {"namespace": "", "time_ms": 1621375318584, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 373712.3010420793, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375318584, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1621375318585, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 29, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1100][Epoch 29, Batch 8/39] lr: 0.27665, training time: 7.816 [ms], speed: 393037.581 [imgs/sec], loss=6.397
[Training][Iteration 1100][Epoch 29, Batch 8/39] lr: 0.27665, training time: 7.816 [ms], speed: 393037.581 [imgs/sec], loss=6.397
:::MLLOG {"namespace": "", "time_ms": 1621375318647, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 393037.5809931252, "loss": 6.3974785804748535}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [29, 1100]}}
:::MLLOG {"namespace": "", "time_ms": 1621375318647, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 393037.5809931252, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
:::MLLOG {"namespace": "", "time_ms": 1621375318732, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 25}}
:::MLLOG {"namespace": "", "time_ms": 1621375318732, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.11030424277374129, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 25}}
INFO:root:[Training][Epoch 29] training time: 0.302 [sec],avg speed: 386150.338 [imgs/sec],loss=4.830
[Training][Epoch 29] training time: 0.302 [sec],avg speed: 386150.338 [imgs/sec],loss=4.830
:::MLLOG {"namespace": "", "time_ms": 1621375318887, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 386150.33797698363, "lr": 0.2841916167664671, "loss": 4.829986584813971}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 29}}
:::MLLOG {"namespace": "", "time_ms": 1621375318887, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 386150.33797698363, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375318887, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 29}}
:::MLLOG {"namespace": "", "time_ms": 1621375318887, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 30, "current_iter_num": 0}}
INFO:root:[Training][Epoch 30] training time: 0.303 [sec],avg speed: 385369.247 [imgs/sec],loss=4.687
[Training][Epoch 30] training time: 0.303 [sec],avg speed: 385369.247 [imgs/sec],loss=4.687
:::MLLOG {"namespace": "", "time_ms": 1621375319191, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 385369.24652706174, "lr": 0.29400000000000004, "loss": 4.6866084274492765}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 30}}
:::MLLOG {"namespace": "", "time_ms": 1621375319191, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 385369.24652706174, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375319191, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 30}}
:::MLLOG {"namespace": "", "time_ms": 1621375319201, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 30}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 43.455 [ms], allgather: 28.586 [ms], asnumpy: 4.036 [ms], speed: 65721.664 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 43.455 [ms], allgather: 28.586 [ms], asnumpy: 4.036 [ms], speed: 65721.664 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621375319278, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 31, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1200][Epoch 31, Batch 30/39] lr: 0.30180, training time: 7.934 [ms], speed: 387179.320 [imgs/sec], loss=4.368
[Training][Iteration 1200][Epoch 31, Batch 30/39] lr: 0.30180, training time: 7.934 [ms], speed: 387179.320 [imgs/sec], loss=4.368
:::MLLOG {"namespace": "", "time_ms": 1621375319516, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 387179.32047032804, "loss": 4.3675055503845215}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [31, 1200]}}
:::MLLOG {"namespace": "", "time_ms": 1621375319516, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 387179.32047032804, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 31] training time: 0.301 [sec],avg speed: 388071.770 [imgs/sec],loss=4.697
[Training][Epoch 31] training time: 0.301 [sec],avg speed: 388071.770 [imgs/sec],loss=4.697
:::MLLOG {"namespace": "", "time_ms": 1621375319579, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 388071.77020028693, "lr": 0.30380838323353293, "loss": 4.696616213572653}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1621375319579, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 388071.77020028693, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375319579, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1621375319579, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 32, "current_iter_num": 0}}
INFO:root:[Training][Epoch 32] training time: 0.341 [sec],avg speed: 341914.206 [imgs/sec],loss=4.878
[Training][Epoch 32] training time: 0.341 [sec],avg speed: 341914.206 [imgs/sec],loss=4.878
:::MLLOG {"namespace": "", "time_ms": 1621375319921, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 341914.2060271715, "lr": 0.3136167664670659, "loss": 4.8781830448853345}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 32}}
:::MLLOG {"namespace": "", "time_ms": 1621375319921, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 341914.2060271715, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375319921, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1621375319921, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 33, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621375320273, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 30}}
:::MLLOG {"namespace": "", "time_ms": 1621375320273, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.11702279520418343, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 30}}
INFO:root:[Training][Epoch 33] training time: 0.416 [sec],avg speed: 280418.103 [imgs/sec],loss=4.884
[Training][Epoch 33] training time: 0.416 [sec],avg speed: 280418.103 [imgs/sec],loss=4.884
:::MLLOG {"namespace": "", "time_ms": 1621375320338, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 280418.10280299967, "lr": 0.3234251497005988, "loss": 4.884271264076233}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 33}}
:::MLLOG {"namespace": "", "time_ms": 1621375320338, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 280418.10280299967, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375320338, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 33}}
:::MLLOG {"namespace": "", "time_ms": 1621375320338, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 34, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1300][Epoch 34, Batch 13/39] lr: 0.32695, training time: 9.149 [ms], speed: 335766.954 [imgs/sec], loss=4.250
[Training][Iteration 1300][Epoch 34, Batch 13/39] lr: 0.32695, training time: 9.149 [ms], speed: 335766.954 [imgs/sec], loss=4.250
:::MLLOG {"namespace": "", "time_ms": 1621375320457, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 335766.9539378073, "loss": 4.249668598175049}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [34, 1300]}}
:::MLLOG {"namespace": "", "time_ms": 1621375320457, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 335766.9539378073, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 34] training time: 0.351 [sec],avg speed: 332752.682 [imgs/sec],loss=4.850
[Training][Epoch 34] training time: 0.351 [sec],avg speed: 332752.682 [imgs/sec],loss=4.850
:::MLLOG {"namespace": "", "time_ms": 1621375320689, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 332752.6818889226, "lr": 0.33323353293413177, "loss": 4.850254272159777}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 34}}
:::MLLOG {"namespace": "", "time_ms": 1621375320689, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 332752.6818889226, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375320689, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 34}}
:::MLLOG {"namespace": "", "time_ms": 1621375320690, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 35, "current_iter_num": 0}}
INFO:root:[Training][Epoch 35] training time: 0.309 [sec],avg speed: 378370.861 [imgs/sec],loss=4.431
[Training][Epoch 35] training time: 0.309 [sec],avg speed: 378370.861 [imgs/sec],loss=4.431
:::MLLOG {"namespace": "", "time_ms": 1621375320998, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 378370.8606269677, "lr": 0.336, "loss": 4.431370095202797}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1621375320998, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 378370.8606269677, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375320998, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1621375321008, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 35}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 44.420 [ms], allgather: 28.863 [ms], asnumpy: 4.009 [ms], speed: 64688.979 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 44.420 [ms], allgather: 28.863 [ms], asnumpy: 4.009 [ms], speed: 64688.979 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621375321086, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 36, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1400][Epoch 36, Batch 35/39] lr: 0.33600, training time: 8.020 [ms], speed: 383033.978 [imgs/sec], loss=3.799
[Training][Iteration 1400][Epoch 36, Batch 35/39] lr: 0.33600, training time: 8.020 [ms], speed: 383033.978 [imgs/sec], loss=3.799
:::MLLOG {"namespace": "", "time_ms": 1621375321367, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 383033.9784281367, "loss": 3.7991902828216553}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [36, 1400]}}
:::MLLOG {"namespace": "", "time_ms": 1621375321367, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 383033.9784281367, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 36] training time: 0.305 [sec],avg speed: 383277.198 [imgs/sec],loss=4.617
[Training][Epoch 36] training time: 0.305 [sec],avg speed: 383277.198 [imgs/sec],loss=4.617
:::MLLOG {"namespace": "", "time_ms": 1621375321391, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 383277.1978304043, "lr": 0.336, "loss": 4.616630265587254}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 36}}
:::MLLOG {"namespace": "", "time_ms": 1621375321391, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 383277.1978304043, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375321391, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 36}}
:::MLLOG {"namespace": "", "time_ms": 1621375321391, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 37, "current_iter_num": 0}}
INFO:root:[Training][Epoch 37] training time: 0.304 [sec],avg speed: 384539.658 [imgs/sec],loss=4.237
[Training][Epoch 37] training time: 0.304 [sec],avg speed: 384539.658 [imgs/sec],loss=4.237
:::MLLOG {"namespace": "", "time_ms": 1621375321695, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 384539.65842835704, "lr": 0.336, "loss": 4.237376018574364}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 37}}
:::MLLOG {"namespace": "", "time_ms": 1621375321695, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 384539.65842835704, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375321695, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 37}}
:::MLLOG {"namespace": "", "time_ms": 1621375321696, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 38, "current_iter_num": 0}}
INFO:root:[Training][Epoch 38] training time: 0.309 [sec],avg speed: 377608.080 [imgs/sec],loss=4.429
[Training][Epoch 38] training time: 0.309 [sec],avg speed: 377608.080 [imgs/sec],loss=4.429
:::MLLOG {"namespace": "", "time_ms": 1621375322005, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 377608.079688305, "lr": 0.336, "loss": 4.429362736250225}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 38}}
:::MLLOG {"namespace": "", "time_ms": 1621375322005, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 377608.079688305, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375322005, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 38}}
:::MLLOG {"namespace": "", "time_ms": 1621375322005, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 39, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621375322068, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1621375322068, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.1296610069578996, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 35}}
INFO:root:[Training][Iteration 1500][Epoch 39, Batch 18/39] lr: 0.33600, training time: 7.844 [ms], speed: 391617.194 [imgs/sec], loss=3.232
[Training][Iteration 1500][Epoch 39, Batch 18/39] lr: 0.33600, training time: 7.844 [ms], speed: 391617.194 [imgs/sec], loss=3.232
:::MLLOG {"namespace": "", "time_ms": 1621375322147, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 391617.19391049456, "loss": 3.232130765914917}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [39, 1500]}}
:::MLLOG {"namespace": "", "time_ms": 1621375322147, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 391617.19391049456, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 39] training time: 0.299 [sec],avg speed: 390990.666 [imgs/sec],loss=4.107
[Training][Epoch 39] training time: 0.299 [sec],avg speed: 390990.666 [imgs/sec],loss=4.107
:::MLLOG {"namespace": "", "time_ms": 1621375322304, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 390990.6655540214, "lr": 0.336, "loss": 4.1069408968875285}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 39}}
:::MLLOG {"namespace": "", "time_ms": 1621375322304, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 390990.6655540214, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375322304, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 39}}
:::MLLOG {"namespace": "", "time_ms": 1621375322305, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 40, "current_iter_num": 0}}
INFO:root:[Training][Epoch 40] training time: 0.297 [sec],avg speed: 393247.266 [imgs/sec],loss=4.290
[Training][Epoch 40] training time: 0.297 [sec],avg speed: 393247.266 [imgs/sec],loss=4.290
:::MLLOG {"namespace": "", "time_ms": 1621375322602, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 393247.2656437111, "lr": 0.336, "loss": 4.2901846735101}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 40}}
:::MLLOG {"namespace": "", "time_ms": 1621375322602, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 393247.2656437111, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375322602, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 40}}
:::MLLOG {"namespace": "", "time_ms": 1621375322612, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 40}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 43.553 [ms], allgather: 28.247 [ms], asnumpy: 4.085 [ms], speed: 65888.089 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 43.553 [ms], allgather: 28.247 [ms], asnumpy: 4.085 [ms], speed: 65888.089 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621375322689, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 41, "current_iter_num": 0}}
INFO:root:[Training][Epoch 41] training time: 0.331 [sec],avg speed: 352182.734 [imgs/sec],loss=4.249
[Training][Epoch 41] training time: 0.331 [sec],avg speed: 352182.734 [imgs/sec],loss=4.249
:::MLLOG {"namespace": "", "time_ms": 1621375323020, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 352182.73371781723, "lr": 0.336, "loss": 4.249214486071938}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 41}}
:::MLLOG {"namespace": "", "time_ms": 1621375323020, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 352182.73371781723, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375323020, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 41}}
:::MLLOG {"namespace": "", "time_ms": 1621375323021, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 42, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1600][Epoch 42, Batch 1/39] lr: 0.33600, training time: 8.621 [ms], speed: 356359.817 [imgs/sec], loss=3.897
[Training][Iteration 1600][Epoch 42, Batch 1/39] lr: 0.33600, training time: 8.621 [ms], speed: 356359.817 [imgs/sec], loss=3.897
:::MLLOG {"namespace": "", "time_ms": 1621375323029, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 356359.8165777028, "loss": 3.897172212600708}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [42, 1600]}}
:::MLLOG {"namespace": "", "time_ms": 1621375323029, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 356359.8165777028, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 42] training time: 0.298 [sec],avg speed: 391774.044 [imgs/sec],loss=4.119
[Training][Epoch 42] training time: 0.298 [sec],avg speed: 391774.044 [imgs/sec],loss=4.119
:::MLLOG {"namespace": "", "time_ms": 1621375323319, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 391774.04407701595, "lr": 0.336, "loss": 4.119304380918804}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 42}}
:::MLLOG {"namespace": "", "time_ms": 1621375323319, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 391774.04407701595, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375323319, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 42}}
:::MLLOG {"namespace": "", "time_ms": 1621375323319, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 43, "current_iter_num": 0}}
INFO:root:[Training][Epoch 43] training time: 0.299 [sec],avg speed: 390142.321 [imgs/sec],loss=4.198
[Training][Epoch 43] training time: 0.299 [sec],avg speed: 390142.321 [imgs/sec],loss=4.198
:::MLLOG {"namespace": "", "time_ms": 1621375323619, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 390142.3207951592, "lr": 0.336, "loss": 4.197905741239849}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 43}}
:::MLLOG {"namespace": "", "time_ms": 1621375323619, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 390142.3207951592, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375323619, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 43}}
:::MLLOG {"namespace": "", "time_ms": 1621375323619, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 44, "current_iter_num": 0}}
loading annotations into memory...
Done (t=0.12s)
creating index...
Loading and preparing results...
DONE (t=0.32s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.87s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.01591
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.03636
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.01078
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.04240
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.03439
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.04828
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.05056
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.05056
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.22s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.74s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.04664
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.09412
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.04172
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.10363
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.08001
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.10713
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.11025
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.11025
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.23s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.70s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.08365
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.17132
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.07415
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.15695
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.11377
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.16149
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.16805
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.16805
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.29s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.75s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.11030
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.22419
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.09749
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.18969
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.13878
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.20238
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.21197
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.21197
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.25s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.73s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.11702
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.23581
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.10533
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.19452
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.14071
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.20321
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.21162
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.21162
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.25s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.71s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.12966
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.24696
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.12400
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.21387
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.15590
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.21968
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.22755
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.22755
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.25s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.76s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.14866
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.27979
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.14330
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.22828
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.16493
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.23288
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.24100
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.24100
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000:::MLLOG {"namespace": "", "time_ms": 1621375323729, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 40}}
:::MLLOG {"namespace": "", "time_ms": 1621375323729, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.1486557503462185, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 40}}
INFO:root:[Training][Iteration 1700][Epoch 44, Batch 23/39] lr: 0.33600, training time: 7.914 [ms], speed: 388158.929 [imgs/sec], loss=3.489
[Training][Iteration 1700][Epoch 44, Batch 23/39] lr: 0.33600, training time: 7.914 [ms], speed: 388158.929 [imgs/sec], loss=3.489
:::MLLOG {"namespace": "", "time_ms": 1621375323801, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 388158.9287829592, "loss": 3.488737106323242}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [44, 1700]}}
:::MLLOG {"namespace": "", "time_ms": 1621375323801, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 388158.9287829592, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 44] training time: 0.303 [sec],avg speed: 385345.286 [imgs/sec],loss=4.263
[Training][Epoch 44] training time: 0.303 [sec],avg speed: 385345.286 [imgs/sec],loss=4.263
:::MLLOG {"namespace": "", "time_ms": 1621375323922, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 385345.2863797667, "lr": 0.336, "loss": 4.262532648287322}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 44}}
:::MLLOG {"namespace": "", "time_ms": 1621375323922, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 385345.2863797667, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375323922, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 44}}
:::MLLOG {"namespace": "", "time_ms": 1621375323923, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 45, "current_iter_num": 0}}
INFO:root:[Training][Epoch 45] training time: 0.317 [sec],avg speed: 367721.184 [imgs/sec],loss=3.843
[Training][Epoch 45] training time: 0.317 [sec],avg speed: 367721.184 [imgs/sec],loss=3.843
:::MLLOG {"namespace": "", "time_ms": 1621375324240, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 367721.18357209646, "lr": 0.336, "loss": 3.8433533750082316}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 45}}
:::MLLOG {"namespace": "", "time_ms": 1621375324241, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 367721.18357209646, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375324241, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 45}}
:::MLLOG {"namespace": "", "time_ms": 1621375324251, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 45}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 43.137 [ms], allgather: 61.577 [ms], asnumpy: 3.699 [ms], speed: 46119.735 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 43.137 [ms], allgather: 61.577 [ms], asnumpy: 3.699 [ms], speed: 46119.735 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621375324360, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 46, "current_iter_num": 0}}
INFO:root:[Training][Epoch 46] training time: 0.307 [sec],avg speed: 380276.596 [imgs/sec],loss=4.247
[Training][Epoch 46] training time: 0.307 [sec],avg speed: 380276.596 [imgs/sec],loss=4.247
:::MLLOG {"namespace": "", "time_ms": 1621375324667, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 380276.59579372656, "lr": 0.336, "loss": 4.246627086087277}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 46}}
:::MLLOG {"namespace": "", "time_ms": 1621375324667, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 380276.59579372656, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375324667, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 46}}
:::MLLOG {"namespace": "", "time_ms": 1621375324667, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 47, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1800][Epoch 47, Batch 6/39] lr: 0.33600, training time: 7.818 [ms], speed: 392942.191 [imgs/sec], loss=5.323
[Training][Iteration 1800][Epoch 47, Batch 6/39] lr: 0.33600, training time: 7.818 [ms], speed: 392942.191 [imgs/sec], loss=5.323
:::MLLOG {"namespace": "", "time_ms": 1621375324714, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 392942.19079519174, "loss": 5.323159694671631}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [47, 1800]}}
:::MLLOG {"namespace": "", "time_ms": 1621375324714, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 392942.19079519174, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 47] training time: 0.319 [sec],avg speed: 365895.163 [imgs/sec],loss=3.768
[Training][Epoch 47] training time: 0.319 [sec],avg speed: 365895.163 [imgs/sec],loss=3.768
:::MLLOG {"namespace": "", "time_ms": 1621375324986, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 365895.1633167932, "lr": 0.336, "loss": 3.7679608621095357}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 47}}
:::MLLOG {"namespace": "", "time_ms": 1621375324987, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 365895.1633167932, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375324987, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 47}}
:::MLLOG {"namespace": "", "time_ms": 1621375324987, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 48, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621375325314, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 45}}
:::MLLOG {"namespace": "", "time_ms": 1621375325314, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.1614520277195243, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 45}}
INFO:root:[Training][Epoch 48] training time: 0.424 [sec],avg speed: 275446.506 [imgs/sec],loss=3.961
[Training][Epoch 48] training time: 0.424 [sec],avg speed: 275446.506 [imgs/sec],loss=3.961
:::MLLOG {"namespace": "", "time_ms": 1621375325411, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 275446.5058503926, "lr": 0.336, "loss": 3.9606126829197534}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 48}}
:::MLLOG {"namespace": "", "time_ms": 1621375325411, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 275446.5058503926, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375325411, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 48}}
:::MLLOG {"namespace": "", "time_ms": 1621375325411, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 49, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1900][Epoch 49, Batch 28/39] lr: 0.33600, training time: 8.600 [ms], speed: 357202.018 [imgs/sec], loss=3.443
[Training][Iteration 1900][Epoch 49, Batch 28/39] lr: 0.33600, training time: 8.600 [ms], speed: 357202.018 [imgs/sec], loss=3.443
:::MLLOG {"namespace": "", "time_ms": 1621375325652, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 357202.01786716754, "loss": 3.4433679580688477}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [49, 1900]}}
:::MLLOG {"namespace": "", "time_ms": 1621375325652, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 357202.01786716754, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 49] training time: 0.323 [sec],avg speed: 361753.340 [imgs/sec],loss=4.087
[Training][Epoch 49] training time: 0.323 [sec],avg speed: 361753.340 [imgs/sec],loss=4.087
:::MLLOG {"namespace": "", "time_ms": 1621375325734, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 361753.3395326569, "lr": 0.336, "loss": 4.087048549401133}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 49}}
:::MLLOG {"namespace": "", "time_ms": 1621375325734, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 361753.3395326569, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375325734, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 49}}
:::MLLOG {"namespace": "", "time_ms": 1621375325734, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 50, "current_iter_num": 0}}
INFO:root:[Training][Epoch 50] training time: 0.389 [sec],avg speed: 299733.078 [imgs/sec],loss=4.004
[Training][Epoch 50] training time: 0.389 [sec],avg speed: 299733.078 [imgs/sec],loss=4.004
:::MLLOG {"namespace": "", "time_ms": 1621375326124, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 299733.0778621412, "lr": 0.336, "loss": 4.004214581690337}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 50}}
:::MLLOG {"namespace": "", "time_ms": 1621375326124, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 299733.0778621412, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375326124, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 50}}
:::MLLOG {"namespace": "", "time_ms": 1621375326134, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 50}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 44.701 [ms], allgather: 28.882 [ms], asnumpy: 4.242 [ms], speed: 64245.469 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 44.701 [ms], allgather: 28.882 [ms], asnumpy: 4.242 [ms], speed: 64245.469 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621375326215, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 51, "current_iter_num": 0}}
INFO:root:[Training][Epoch 51] training time: 0.303 [sec],avg speed: 385444.483 [imgs/sec],loss=4.260
[Training][Epoch 51] training time: 0.303 [sec],avg speed: 385444.483 [imgs/sec],loss=4.260
:::MLLOG {"namespace": "", "time_ms": 1621375326518, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 385444.48255437735, "lr": 0.336, "loss": 4.259917328232213}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 51}}
:::MLLOG {"namespace": "", "time_ms": 1621375326518, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 385444.48255437735, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375326518, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 51}}
:::MLLOG {"namespace": "", "time_ms": 1621375326519, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 52, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2000][Epoch 52, Batch 11/39] lr: 0.33600, training time: 8.120 [ms], speed: 378314.251 [imgs/sec], loss=5.304
[Training][Iteration 2000][Epoch 52, Batch 11/39] lr: 0.33600, training time: 8.120 [ms], speed: 378314.251 [imgs/sec], loss=5.304
:::MLLOG {"namespace": "", "time_ms": 1621375326608, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 378314.25070066145, "loss": 5.303748607635498}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [52, 2000]}}
:::MLLOG {"namespace": "", "time_ms": 1621375326608, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 378314.25070066145, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 52] training time: 0.302 [sec],avg speed: 386729.837 [imgs/sec],loss=4.442
[Training][Epoch 52] training time: 0.302 [sec],avg speed: 386729.837 [imgs/sec],loss=4.442
:::MLLOG {"namespace": "", "time_ms": 1621375326821, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 386729.83737366396, "lr": 0.336, "loss": 4.442251095646306}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 52}}
:::MLLOG {"namespace": "", "time_ms": 1621375326821, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 386729.83737366396, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375326821, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 52}}
:::MLLOG {"namespace": "", "time_ms": 1621375326821, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 53, "current_iter_num": 0}}
INFO:root:[Training][Epoch 53] training time: 0.345 [sec],avg speed: 338295.288 [imgs/sec],loss=4.211
[Training][Epoch 53] training time: 0.345 [sec],avg speed: 338295.288 [imgs/sec],loss=4.211
:::MLLOG {"namespace": "", "time_ms": 1621375327166, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 338295.2875728754, "lr": 0.336, "loss": 4.210948482940071}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 53}}
:::MLLOG {"namespace": "", "time_ms": 1621375327166, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 338295.2875728754, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375327166, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 53}}
:::MLLOG {"namespace": "", "time_ms": 1621375327167, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 54, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621375327251, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 50}}
:::MLLOG {"namespace": "", "time_ms": 1621375327251, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.176117655126355, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 50}}
INFO:root:[Training][Iteration 2100][Epoch 54, Batch 33/39] lr: 0.33600, training time: 8.282 [ms], speed: 370907.570 [imgs/sec], loss=5.746
[Training][Iteration 2100][Epoch 54, Batch 33/39] lr: 0.33600, training time: 8.282 [ms], speed: 370907.570 [imgs/sec], loss=5.746
:::MLLOG {"namespace": "", "time_ms": 1621375327440, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 370907.57034217217, "loss": 5.746335983276367}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [54, 2100]}}
:::MLLOG {"namespace": "", "time_ms": 1621375327440, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 370907.57034217217, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 54] training time: 0.312 [sec],avg speed: 373791.329 [imgs/sec],loss=3.732
[Training][Epoch 54] training time: 0.312 [sec],avg speed: 373791.329 [imgs/sec],loss=3.732
:::MLLOG {"namespace": "", "time_ms": 1621375327479, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 373791.32916606864, "lr": 0.336, "loss": 3.732022332517724}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 54}}
:::MLLOG {"namespace": "", "time_ms": 1621375327479, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 373791.32916606864, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375327479, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 54}}
:::MLLOG {"namespace": "", "time_ms": 1621375327479, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 55, "current_iter_num": 0}}
INFO:root:[Training][Epoch 55] training time: 0.316 [sec],avg speed: 369664.294 [imgs/sec],loss=4.011
[Training][Epoch 55] training time: 0.316 [sec],avg speed: 369664.294 [imgs/sec],loss=4.011
:::MLLOG {"namespace": "", "time_ms": 1621375327795, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 369664.29378278553, "lr": 0.336, "loss": 4.0114602540668685}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 55}}
:::MLLOG {"namespace": "", "time_ms": 1621375327796, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 369664.29378278553, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375327796, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 55}}
:::MLLOG {"namespace": "", "time_ms": 1621375327806, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 55}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 42.654 [ms], allgather: 29.758 [ms], asnumpy: 4.335 [ms], speed: 65148.772 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 42.654 [ms], allgather: 29.758 [ms], asnumpy: 4.335 [ms], speed: 65148.772 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621375327886, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 56, "current_iter_num": 0}}
INFO:root:[Training][Epoch 56] training time: 0.347 [sec],avg speed: 336342.534 [imgs/sec],loss=3.857
[Training][Epoch 56] training time: 0.347 [sec],avg speed: 336342.534 [imgs/sec],loss=3.857
:::MLLOG {"namespace": "", "time_ms": 1621375328233, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 336342.5342242452, "lr": 0.336, "loss": 3.856924787948006}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 56}}
:::MLLOG {"namespace": "", "time_ms": 1621375328233, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 336342.5342242452, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375328233, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 56}}
:::MLLOG {"namespace": "", "time_ms": 1621375328233, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 57, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2200][Epoch 57, Batch 16/39] lr: 0.33600, training time: 7.978 [ms], speed: 385074.388 [imgs/sec], loss=4.252
[Training][Iteration 2200][Epoch 57, Batch 16/39] lr: 0.33600, training time: 7.978 [ms], speed: 385074.388 [imgs/sec], loss=4.252
:::MLLOG {"namespace": "", "time_ms": 1621375328361, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 385074.3877782406, "loss": 4.252490043640137}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [57, 2200]}}
:::MLLOG {"namespace": "", "time_ms": 1621375328361, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 385074.3877782406, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 57] training time: 0.334 [sec],avg speed: 349040.206 [imgs/sec],loss=3.668
[Training][Epoch 57] training time: 0.334 [sec],avg speed: 349040.206 [imgs/sec],loss=3.668
:::MLLOG {"namespace": "", "time_ms": 1621375328568, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 349040.20643593895, "lr": 0.336, "loss": 3.6684814471947518}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 57}}
:::MLLOG {"namespace": "", "time_ms": 1621375328568, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 349040.20643593895, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375328568, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 57}}
:::MLLOG {"namespace": "", "time_ms": 1621375328568, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 58, "current_iter_num": 0}}
INFO:root:[Training][Epoch 58] training time: 0.297 [sec],avg speed: 392525.950 [imgs/sec],loss=3.882
[Training][Epoch 58] training time: 0.297 [sec],avg speed: 392525.950 [imgs/sec],loss=3.882
:::MLLOG {"namespace": "", "time_ms": 1621375328866, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 392525.9499315762, "lr": 0.336, "loss": 3.8824805084027743}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 58}}
:::MLLOG {"namespace": "", "time_ms": 1621375328866, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 392525.9499315762, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375328866, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 58}}
:::MLLOG {"namespace": "", "time_ms": 1621375328866, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 59, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621375328935, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 55}}
:::MLLOG {"namespace": "", "time_ms": 1621375328935, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.1763408665761981, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 55}}
INFO:root:[Training][Iteration 2300][Epoch 59, Batch 38/39] lr: 0.33600, training time: 8.023 [ms], speed: 382892.948 [imgs/sec], loss=5.196
[Training][Iteration 2300][Epoch 59, Batch 38/39] lr: 0.33600, training time: 8.023 [ms], speed: 382892.948 [imgs/sec], loss=5.196
:::MLLOG {"namespace": "", "time_ms": 1621375329171, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 382892.9480189716, "loss": 5.195930004119873}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [59, 2300]}}
:::MLLOG {"namespace": "", "time_ms": 1621375329172, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 382892.9480189716, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 59] training time: 0.305 [sec],avg speed: 382413.867 [imgs/sec],loss=3.498
[Training][Epoch 59] training time: 0.305 [sec],avg speed: 382413.867 [imgs/sec],loss=3.498
:::MLLOG {"namespace": "", "time_ms": 1621375329172, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 382413.8671823562, "lr": 0.336, "loss": 3.497925705031345}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 59}}
:::MLLOG {"namespace": "", "time_ms": 1621375329172, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 382413.8671823562, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375329172, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 59}}
:::MLLOG {"namespace": "", "time_ms": 1621375329172, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 60, "current_iter_num": 0}}
INFO:root:[Training][Epoch 60] training time: 0.297 [sec],avg speed: 392427.479 [imgs/sec],loss=3.890
[Training][Epoch 60] training time: 0.297 [sec],avg speed: 392427.479 [imgs/sec],loss=3.890
:::MLLOG {"namespace": "", "time_ms": 1621375329470, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 392427.4791445925, "lr": 0.336, "loss": 3.8902601474209835}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 60}}
:::MLLOG {"namespace": "", "time_ms": 1621375329470, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 392427.4791445925, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375329470, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 60}}
:::MLLOG {"namespace": "", "time_ms": 1621375329480, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 60}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 43.761 [ms], allgather: 28.036 [ms], asnumpy: 3.798 [ms], speed: 66140.775 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 43.761 [ms], allgather: 28.036 [ms], asnumpy: 3.798 [ms], speed: 66140.775 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621375329557, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 61, "current_iter_num": 0}}
INFO:root:[Training][Epoch 61] training time: 0.299 [sec],avg speed: 390659.675 [imgs/sec],loss=3.890
[Training][Epoch 61] training time: 0.299 [sec],avg speed: 390659.675 [imgs/sec],loss=3.890
:::MLLOG {"namespace": "", "time_ms": 1621375329856, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 390659.67496561166, "lr": 0.336, "loss": 3.8895195973546883}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 61}}
:::MLLOG {"namespace": "", "time_ms": 1621375329856, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 390659.67496561166, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375329856, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 61}}
:::MLLOG {"namespace": "", "time_ms": 1621375329856, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 62, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2400][Epoch 62, Batch 21/39] lr: 0.33600, training time: 8.999 [ms], speed: 341353.768 [imgs/sec], loss=3.445
[Training][Iteration 2400][Epoch 62, Batch 21/39] lr: 0.33600, training time: 8.999 [ms], speed: 341353.768 [imgs/sec], loss=3.445
:::MLLOG {"namespace": "", "time_ms": 1621375330045, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 341353.7683088677, "loss": 3.4452064037323}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [62, 2400]}}
:::MLLOG {"namespace": "", "time_ms": 1621375330045, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 341353.7683088677, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 62] training time: 0.335 [sec],avg speed: 348480.017 [imgs/sec],loss=3.826
[Training][Epoch 62] training time: 0.335 [sec],avg speed: 348480.017 [imgs/sec],loss=3.826
:::MLLOG {"namespace": "", "time_ms": 1621375330191, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 348480.0166714827, "lr": 0.336, "loss": 3.8257878328624524}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621375330191, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 348480.0166714827, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375330191, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621375330192, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 63, "current_iter_num": 0}}
INFO:root:[Training][Epoch 63] training time: 0.322 [sec],avg speed: 362473.208 [imgs/sec],loss=3.753
[Training][Epoch 63] training time: 0.322 [sec],avg speed: 362473.208 [imgs/sec],loss=3.753
:::MLLOG {"namespace": "", "time_ms": 1621375330514, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 362473.2077705466, "lr": 0.336, "loss": 3.753477592217295}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621375330514, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 362473.2077705466, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375330514, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621375330514, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 64, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621375330570, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 60}}
:::MLLOG {"namespace": "", "time_ms": 1621375330570, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.18154565363180084, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 60}}
INFO:root:[Training][Epoch 64] training time: 0.369 [sec],avg speed: 316593.819 [imgs/sec],loss=3.798
[Training][Epoch 64] training time: 0.369 [sec],avg speed: 316593.819 [imgs/sec],loss=3.798
:::MLLOG {"namespace": "", "time_ms": 1621375330883, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 316593.8193442928, "lr": 0.336, "loss": 3.7984610419524345}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 64}}
:::MLLOG {"namespace": "", "time_ms": 1621375330883, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 316593.8193442928, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375330883, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 64}}
:::MLLOG {"namespace": "", "time_ms": 1621375330884, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 65, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2500][Epoch 65, Batch 4/39] lr: 0.33600, training time: 7.909 [ms], speed: 388400.699 [imgs/sec], loss=2.881
[Training][Iteration 2500][Epoch 65, Batch 4/39] lr: 0.33600, training time: 7.909 [ms], speed: 388400.699 [imgs/sec], loss=2.881
:::MLLOG {"namespace": "", "time_ms": 1621375330915, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 388400.6989758623, "loss": 2.8810622692108154}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [65, 2500]}}
:::MLLOG {"namespace": "", "time_ms": 1621375330915, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 388400.6989758623, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 65] training time: 0.395 [sec],avg speed: 295595.925 [imgs/sec],loss=3.928
[Training][Epoch 65] training time: 0.395 [sec],avg speed: 295595.925 [imgs/sec],loss=3.928
:::MLLOG {"namespace": "", "time_ms": 1621375331279, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 295595.92451116996, "lr": 0.336, "loss": 3.9280553209154228}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 65}}
:::MLLOG {"namespace": "", "time_ms": 1621375331279, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 295595.92451116996, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375331279, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 65}}
:::MLLOG {"namespace": "", "time_ms": 1621375331289, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 65}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 44.158 [ms], allgather: 28.567 [ms], asnumpy: 3.690 [ms], speed: 65431.718 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 44.158 [ms], allgather: 28.567 [ms], asnumpy: 3.690 [ms], speed: 65431.718 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621375331366, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 66, "current_iter_num": 0}}
INFO:root:[Training][Epoch 66] training time: 0.319 [sec],avg speed: 365855.247 [imgs/sec],loss=3.830
[Training][Epoch 66] training time: 0.319 [sec],avg speed: 365855.247 [imgs/sec],loss=3.830
:::MLLOG {"namespace": "", "time_ms": 1621375331685, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 365855.2466655608, "lr": 0.336, "loss": 3.8302732580586483}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 66}}
:::MLLOG {"namespace": "", "time_ms": 1621375331685, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 365855.2466655608, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375331686, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 66}}
:::MLLOG {"namespace": "", "time_ms": 1621375331686, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 67, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2600][Epoch 67, Batch 26/39] lr: 0.33600, training time: 8.222 [ms], speed: 373639.952 [imgs/sec], loss=4.038
[Training][Iteration 2600][Epoch 67, Batch 26/39] lr: 0.33600, training time: 8.222 [ms], speed: 373639.952 [imgs/sec], loss=4.038
:::MLLOG {"namespace": "", "time_ms": 1621375331900, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 373639.95191639574, "loss": 4.038110733032227}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [67, 2600]}}
:::MLLOG {"namespace": "", "time_ms": 1621375331900, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 373639.95191639574, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 67] training time: 0.325 [sec],avg speed: 359383.262 [imgs/sec],loss=3.765
[Training][Epoch 67] training time: 0.325 [sec],avg speed: 359383.262 [imgs/sec],loss=3.765
:::MLLOG {"namespace": "", "time_ms": 1621375332011, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 359383.2619356771, "lr": 0.336, "loss": 3.7654886120244075}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 67}}
:::MLLOG {"namespace": "", "time_ms": 1621375332011, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 359383.2619356771, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375332011, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 67}}
:::MLLOG {"namespace": "", "time_ms": 1621375332011, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 68, "current_iter_num": 0}}
INFO:root:[Training][Epoch 68] training time: 0.300 [sec],avg speed: 388620.346 [imgs/sec],loss=4.123
[Training][Epoch 68] training time: 0.300 [sec],avg speed: 388620.346 [imgs/sec],loss=4.123
:::MLLOG {"namespace": "", "time_ms": 1621375332312, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 388620.34618690715, "lr": 0.336, "loss": 4.1226619482040405}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 68}}
:::MLLOG {"namespace": "", "time_ms": 1621375332312, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 388620.34618690715, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375332312, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 68}}
:::MLLOG {"namespace": "", "time_ms": 1621375332312, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 69, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621375332339, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 65}}
:::MLLOG {"namespace": "", "time_ms": 1621375332340, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.18174438422884967, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 65}}
INFO:root:[Training][Epoch 69] training time: 0.298 [sec],avg speed: 391301.264 [imgs/sec],loss=3.454
[Training][Epoch 69] training time: 0.298 [sec],avg speed: 391301.264 [imgs/sec],loss=3.454
:::MLLOG {"namespace": "", "time_ms": 1621375332611, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 391301.2640238732, "lr": 0.033600000000000005, "loss": 3.4539588187870227}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 69}}
:::MLLOG {"namespace": "", "time_ms": 1621375332611, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 391301.2640238732, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375332611, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 69}}
:::MLLOG {"namespace": "", "time_ms": 1621375332611, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 70, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2700][Epoch 70, Batch 9/39] lr: 0.03360, training time: 9.085 [ms], speed: 338142.026 [imgs/sec], loss=4.589
[Training][Iteration 2700][Epoch 70, Batch 9/39] lr: 0.03360, training time: 9.085 [ms], speed: 338142.026 [imgs/sec], loss=4.589
:::MLLOG {"namespace": "", "time_ms": 1621375332693, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 338142.0256659231, "loss": 4.5891194343566895}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [70, 2700]}}
:::MLLOG {"namespace": "", "time_ms": 1621375332693, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 338142.0256659231, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 70] training time: 0.308 [sec],avg speed: 379014.933 [imgs/sec],loss=3.434
[Training][Epoch 70] training time: 0.308 [sec],avg speed: 379014.933 [imgs/sec],loss=3.434
:::MLLOG {"namespace": "", "time_ms": 1621375332919, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 379014.9327772269, "lr": 0.033600000000000005, "loss": 3.4338749302060982}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 70}}
:::MLLOG {"namespace": "", "time_ms": 1621375332919, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 379014.9327772269, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375332919, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 70}}
:::MLLOG {"namespace": "", "time_ms": 1621375332930, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 70}}
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 45.750 [ms], allgather: 28.146 [ms], asnumpy: 3.829 [ms], speed: 64328.435 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 45.750 [ms], allgather: 28.146 [ms], asnumpy: 3.829 [ms], speed: 64328.435 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621375333008, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 71, "current_iter_num": 0}}
INFO:root:[Training][Epoch 71] training time: 0.301 [sec],avg speed: 388463.716 [imgs/sec],loss=3.418
[Training][Epoch 71] training time: 0.301 [sec],avg speed: 388463.716 [imgs/sec],loss=3.418
:::MLLOG {"namespace": "", "time_ms": 1621375333309, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 388463.71617012465, "lr": 0.033600000000000005, "loss": 3.4176679128094722}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 71}}
:::MLLOG {"namespace": "", "time_ms": 1621375333309, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 388463.71617012465, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375333309, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 71}}
:::MLLOG {"namespace": "", "time_ms": 1621375333309, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 72, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2800][Epoch 72, Batch 31/39] lr: 0.03360, training time: 7.886 [ms], speed: 389540.740 [imgs/sec], loss=4.351
[Training][Iteration 2800][Epoch 72, Batch 31/39] lr: 0.03360, training time: 7.886 [ms], speed: 389540.740 [imgs/sec], loss=4.351
:::MLLOG {"namespace": "", "time_ms": 1621375333554, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 389540.7400564857, "loss": 4.35050106048584}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [72, 2800]}}
:::MLLOG {"namespace": "", "time_ms": 1621375333554, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 389540.7400564857, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 72] training time: 0.299 [sec],avg speed: 390262.976 [imgs/sec],loss=3.494
[Training][Epoch 72] training time: 0.299 [sec],avg speed: 390262.976 [imgs/sec],loss=3.494
:::MLLOG {"namespace": "", "time_ms": 1621375333609, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 390262.97637983557, "lr": 0.033600000000000005, "loss": 3.493583974085356}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 72}}
:::MLLOG {"namespace": "", "time_ms": 1621375333609, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 390262.97637983557, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375333609, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 72}}
:::MLLOG {"namespace": "", "time_ms": 1621375333609, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 73, "current_iter_num": 0}}
INFO:root:[Training][Epoch 73] training time: 0.306 [sec],avg speed: 381930.919 [imgs/sec],loss=3.338
[Training][Epoch 73] training time: 0.306 [sec],avg speed: 381930.919 [imgs/sec],loss=3.338
:::MLLOG {"namespace": "", "time_ms": 1621375333915, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 381930.91894388036, "lr": 0.033600000000000005, "loss": 3.3375419566505835}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 73}}
:::MLLOG {"namespace": "", "time_ms": 1621375333915, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 381930.91894388036, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375333915, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 73}}
:::MLLOG {"namespace": "", "time_ms": 1621375333915, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 74, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621375333994, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 70}}
:::MLLOG {"namespace": "", "time_ms": 1621375333994, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.22544869858714386, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 70}}
INFO:root:[Training][Epoch 74] training time: 0.302 [sec],avg speed: 385946.402 [imgs/sec],loss=3.261
[Training][Epoch 74] training time: 0.302 [sec],avg speed: 385946.402 [imgs/sec],loss=3.261
:::MLLOG {"namespace": "", "time_ms": 1621375334218, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 385946.4021604272, "lr": 0.033600000000000005, "loss": 3.26088568725084}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 74}}
:::MLLOG {"namespace": "", "time_ms": 1621375334218, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 385946.4021604272, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375334218, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 74}}
:::MLLOG {"namespace": "", "time_ms": 1621375334218, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 75, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2900][Epoch 75, Batch 14/39] lr: 0.03360, training time: 9.403 [ms], speed: 326691.562 [imgs/sec], loss=3.375
[Training][Iteration 2900][Epoch 75, Batch 14/39] lr: 0.03360, training time: 9.403 [ms], speed: 326691.562 [imgs/sec], loss=3.375
:::MLLOG {"namespace": "", "time_ms": 1621375334350, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 326691.56204633374, "loss": 3.3754968643188477}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [75, 2900]}}
:::MLLOG {"namespace": "", "time_ms": 1621375334350, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 326691.56204633374, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 75] training time: 0.334 [sec],avg speed: 349732.052 [imgs/sec],loss=3.229
[Training][Epoch 75] training time: 0.334 [sec],avg speed: 349732.052 [imgs/sec],loss=3.229
:::MLLOG {"namespace": "", "time_ms": 1621375334552, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 349732.05201128, "lr": 0.033600000000000005, "loss": 3.2291992494934485}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 75}}
:::MLLOG {"namespace": "", "time_ms": 1621375334553, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 349732.05201128, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375334553, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 75}}
:::MLLOG {"namespace": "", "time_ms": 1621375334563, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 75}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 44.302 [ms], allgather: 28.215 [ms], asnumpy: 3.743 [ms], speed: 65564.480 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 44.302 [ms], allgather: 28.215 [ms], asnumpy: 3.743 [ms], speed: 65564.480 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621375334640, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 76, "current_iter_num": 0}}
INFO:root:[Training][Epoch 76] training time: 0.303 [sec],avg speed: 385846.339 [imgs/sec],loss=3.461
[Training][Epoch 76] training time: 0.303 [sec],avg speed: 385846.339 [imgs/sec],loss=3.461
:::MLLOG {"namespace": "", "time_ms": 1621375334942, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 385846.3393799839, "lr": 0.033600000000000005, "loss": 3.4606351538708338}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 76}}
:::MLLOG {"namespace": "", "time_ms": 1621375334942, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 385846.3393799839, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375334942, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 76}}
:::MLLOG {"namespace": "", "time_ms": 1621375334943, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 77, "current_iter_num": 0}}
INFO:root:[Training][Iteration 3000][Epoch 77, Batch 36/39] lr: 0.03360, training time: 7.863 [ms], speed: 390673.546 [imgs/sec], loss=3.999
[Training][Iteration 3000][Epoch 77, Batch 36/39] lr: 0.03360, training time: 7.863 [ms], speed: 390673.546 [imgs/sec], loss=3.999
:::MLLOG {"namespace": "", "time_ms": 1621375335226, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 390673.5459693007, "loss": 3.9992620944976807}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [77, 3000]}}
:::MLLOG {"namespace": "", "time_ms": 1621375335226, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 390673.5459693007, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 77] training time: 0.301 [sec],avg speed: 388141.604 [imgs/sec],loss=3.474
[Training][Epoch 77] training time: 0.301 [sec],avg speed: 388141.604 [imgs/sec],loss=3.474
:::MLLOG {"namespace": "", "time_ms": 1621375335244, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 388141.6036332417, "lr": 0.033600000000000005, "loss": 3.474232990490763}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 77}}
:::MLLOG {"namespace": "", "time_ms": 1621375335244, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 388141.6036332417, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375335244, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 77}}
:::MLLOG {"namespace": "", "time_ms": 1621375335244, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 78, "current_iter_num": 0}}
INFO:root:[Training][Epoch 78] training time: 0.314 [sec],avg speed: 371551.060 [imgs/sec],loss=3.252
[Training][Epoch 78] training time: 0.314 [sec],avg speed: 371551.060 [imgs/sec],loss=3.252
:::MLLOG {"namespace": "", "time_ms": 1621375335558, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 371551.06029337, "lr": 0.033600000000000005, "loss": 3.2518117176859}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 78}}
:::MLLOG {"namespace": "", "time_ms": 1621375335559, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 371551.06029337, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375335559, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 78}}
:::MLLOG {"namespace": "", "time_ms": 1621375335559, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 79, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621375335606, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 75}}
:::MLLOG {"namespace": "", "time_ms": 1621375335606, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.2286486468024641, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 75}}
INFO:root:[Training][Epoch 79] training time: 0.330 [sec],avg speed: 353289.669 [imgs/sec],loss=3.355
[Training][Epoch 79] training time: 0.330 [sec],avg speed: 353289.669 [imgs/sec],loss=3.355
:::MLLOG {"namespace": "", "time_ms": 1621375335889, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 353289.66881159326, "lr": 0.033600000000000005, "loss": 3.3554947407622087}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 79}}
:::MLLOG {"namespace": "", "time_ms": 1621375335890, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 353289.66881159326, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375335890, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 79}}
:::MLLOG {"namespace": "", "time_ms": 1621375335890, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 80, "current_iter_num": 0}}
INFO:root:[Training][Iteration 3100][Epoch 80, Batch 19/39] lr: 0.03360, training time: 7.955 [ms], speed: 386183.841 [imgs/sec], loss=3.808
[Training][Iteration 3100][Epoch 80, Batch 19/39] lr: 0.03360, training time: 7.955 [ms], speed: 386183.841 [imgs/sec], loss=3.808
:::MLLOG {"namespace": "", "time_ms": 1621375336041, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 386183.8405752064, "loss": 3.8078927993774414}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [80, 3100]}}
:::MLLOG {"namespace": "", "time_ms": 1621375336041, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 386183.8405752064, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 80] training time: 0.348 [sec],avg speed: 335098.349 [imgs/sec],loss=3.168
[Training][Epoch 80] training time: 0.348 [sec],avg speed: 335098.349 [imgs/sec],loss=3.168
:::MLLOG {"namespace": "", "time_ms": 1621375336238, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 335098.3489243345, "lr": 0.033600000000000005, "loss": 3.1683362283204732}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 80}}
:::MLLOG {"namespace": "", "time_ms": 1621375336239, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 335098.3489243345, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375336239, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 80}}
:::MLLOG {"namespace": "", "time_ms": 1621375336249, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 80}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 43.853 [ms], allgather: 28.420 [ms], asnumpy: 3.900 [ms], speed: 65638.766 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 43.853 [ms], allgather: 28.420 [ms], asnumpy: 3.900 [ms], speed: 65638.766 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621375336328, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 81, "current_iter_num": 0}}

Loading and preparing results...
DONE (t=0.23s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.70s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.16145
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.30047
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.15808
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.24410
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.17520
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.24940
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.25778
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.25778
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.27s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.74s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.17612
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.31794
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.17845
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.25927
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.18497
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.26634
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.27622
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.27622
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.27s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.76s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.17634
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.31939
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.17637
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.26463
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.18665
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.27069
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.28140
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.28140
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.24s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.75s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.18155
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.32729
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.18334
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.26165
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.18989
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.26903
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.27790
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.27790
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.23s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.72s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.18174
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.33334
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.17979
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.26011
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.18763
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.26723
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.27628
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.27628
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.24s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.72s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.22545
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.38460
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.23222
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.30646
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.21799
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.31250
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.32363
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.32363
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.23s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.71s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.22865
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.38970
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.23440
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.30876
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.21951
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.31380
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.32495
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.32495
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.24s)
INFO:root:[Training][Epoch 81] training time: 0.379 [sec],avg speed: 307956.546 [imgs/sec],loss=3.203
Running per image evaluation...[Training][Epoch 81] training time: 0.379 [sec],avg speed: 307956.546 [imgs/sec],loss=3.203
:::MLLOG {"namespace": "", "time_ms": 1621375336707, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 307956.54608030594, "lr": 0.033600000000000005, "loss": 3.203327865977036}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 81}}
:::MLLOG {"namespace": "", "time_ms": 1621375336707, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 307956.54608030594, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375336707, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 81}}
:::MLLOG {"namespace": "", "time_ms": 1621375336708, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 82, "current_iter_num": 0}}
INFO:root:[Training][Epoch 82] training time: 0.311 [sec],avg speed: 375393.330 [imgs/sec],loss=3.200
[Training][Epoch 82] training time: 0.311 [sec],avg speed: 375393.330 [imgs/sec],loss=3.200
:::MLLOG {"namespace": "", "time_ms": 1621375337019, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 375393.3304894112, "lr": 0.033600000000000005, "loss": 3.200275529372065}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 82}}
:::MLLOG {"namespace": "", "time_ms": 1621375337019, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 375393.3304894112, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375337019, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 82}}
:::MLLOG {"namespace": "", "time_ms": 1621375337019, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 83, "current_iter_num": 0}}
INFO:root:[Training][Iteration 3200][Epoch 83, Batch 2/39] lr: 0.03360, training time: 8.155 [ms], speed: 376696.445 [imgs/sec], loss=4.192
[Training][Iteration 3200][Epoch 83, Batch 2/39] lr: 0.03360, training time: 8.155 [ms], speed: 376696.445 [imgs/sec], loss=4.192
:::MLLOG {"namespace": "", "time_ms": 1621375337035, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 376696.4446133606, "loss": 4.192137718200684}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [83, 3200]}}
:::MLLOG {"namespace": "", "time_ms": 1621375337036, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 376696.4446133606, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
:::MLLOG {"namespace": "", "time_ms": 1621375337296, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 80}}
:::MLLOG {"namespace": "", "time_ms": 1621375337296, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.23194993091265714, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 80}}
INFO:root:[Training][Epoch 83] training time: 0.319 [sec],avg speed: 365649.513 [imgs/sec],loss=3.347
[Training][Epoch 83] training time: 0.319 [sec],avg speed: 365649.513 [imgs/sec],loss=3.347
:::MLLOG {"namespace": "", "time_ms": 1621375337338, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 365649.5133851458, "lr": 0.033600000000000005, "loss": 3.3465907197249565}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 83}}
:::MLLOG {"namespace": "", "time_ms": 1621375337339, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 365649.5133851458, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621375337339, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 83}}
:::MLLOG {"namespace": "", "time_ms": 1621375337339, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 547, "status": "success"}}
INFO:root:Rank 0 done. map=23.194993091265715 @ epoch=80
Rank 0 done. map=23.194993091265715 @ epoch=80

Evaluate annotation type *bbox*
DONE (t=0.71s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.23195
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.39544
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.23660
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.31288
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.22274
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.31943
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.33070
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.33070
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-18 03:02:35 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:35 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:35 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:35 PM
RESULT,SINGLE_STAGE_DETECTOR,,431,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,432,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:36 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:37 PM
RESULT,SINGLE_STAGE_DETECTOR,,433,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:38 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:38 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:38 PM
RESULT,SINGLE_STAGE_DETECTOR,,435,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:38 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:38 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:38 PM
RESULT,SINGLE_STAGE_DETECTOR,,435,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:38 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:38 PM
RESULT,SINGLE_STAGE_DETECTOR,,435,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:38 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:38 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:38 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:38 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:24 PM
ENDING TIMING RUN AT 2021-05-18 03:02:38 PM
RESULT,SINGLE_STAGE_DETECTOR,,435,nvidia,2021-05-18 02:55:23 PM
ENDING TIMING RUN AT 2021-05-18 03:02:38 PM
RESULT,SINGLE_STAGE_DETECTOR,,434,nvidia,2021-05-18 02:55:24 PM
